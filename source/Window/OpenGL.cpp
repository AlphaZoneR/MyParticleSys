#include "OpenGL.h"

#include <cstdio>

void NotSupportedMessage(const char * extension) {
	printf("%s not Supported!\n", extension);
}

void SupportedMessage(const char * extension) {
	printf("%s Supported!\n", extension);
}

bool Supported(bool extension) {
	return(extension);
}

PFNGLACTIVEPROGRAMEXTPROC glActiveProgramEXT;
PFNGLACTIVESHADERPROGRAMPROC glActiveShaderProgram;
PFNGLACTIVESTENCILFACEEXTPROC glActiveStencilFaceEXT;
PFNGLACTIVETEXTUREARBPROC glActiveTextureARB;
PFNGLACTIVETEXTUREPROC glActiveTexture;
PFNGLAPPLYTEXTUREEXTPROC glApplyTextureEXT;
PFNGLARETEXTURESRESIDENTEXTPROC glAreTexturesResidentEXT;
PFNGLARRAYELEMENTEXTPROC glArrayElementEXT;
PFNGLATTACHOBJECTARBPROC glAttachObjectARB;
PFNGLATTACHSHADERPROC glAttachShader;
PFNGLBEGINCONDITIONALRENDERPROC glBeginConditionalRender;
PFNGLBEGINQUERYARBPROC glBeginQueryARB;
PFNGLBEGINQUERYINDEXEDPROC glBeginQueryIndexed;
PFNGLBEGINQUERYPROC glBeginQuery;
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC glBeginTransformFeedbackEXT;
PFNGLBEGINTRANSFORMFEEDBACKPROC glBeginTransformFeedback;
PFNGLBEGINVERTEXSHADEREXTPROC glBeginVertexShaderEXT;
PFNGLBINDATTRIBLOCATIONARBPROC glBindAttribLocationARB;
PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
PFNGLBINDBUFFERARBPROC glBindBufferARB;
PFNGLBINDBUFFERBASEEXTPROC glBindBufferBaseEXT;
PFNGLBINDBUFFERBASEPROC glBindBufferBase;
PFNGLBINDBUFFEROFFSETEXTPROC glBindBufferOffsetEXT;
PFNGLBINDBUFFERPROC glBindBuffer;
PFNGLBINDBUFFERRANGEEXTPROC glBindBufferRangeEXT;
PFNGLBINDBUFFERRANGEPROC glBindBufferRange;
PFNGLBINDFRAGDATALOCATIONEXTPROC glBindFragDataLocationEXT;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glBindFragDataLocationIndexed;
PFNGLBINDFRAGDATALOCATIONPROC glBindFragDataLocation;
PFNGLBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
PFNGLBINDIMAGETEXTUREEXTPROC glBindImageTextureEXT;
PFNGLBINDIMAGETEXTUREPROC glBindImageTexture;
PFNGLBINDLIGHTPARAMETEREXTPROC glBindLightParameterEXT;
PFNGLBINDMATERIALPARAMETEREXTPROC glBindMaterialParameterEXT;
PFNGLBINDMULTITEXTUREEXTPROC glBindMultiTextureEXT;
PFNGLBINDPARAMETEREXTPROC glBindParameterEXT;
PFNGLBINDPROGRAMARBPROC glBindProgramARB;
PFNGLBINDPROGRAMPIPELINEPROC glBindProgramPipeline;
PFNGLBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
PFNGLBINDSAMPLERPROC glBindSampler;
PFNGLBINDTEXGENPARAMETEREXTPROC glBindTexGenParameterEXT;
PFNGLBINDTEXTUREEXTPROC glBindTextureEXT;
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC glBindTextureUnitParameterEXT;
PFNGLBINDTRANSFORMFEEDBACKPROC glBindTransformFeedback;
PFNGLBINDVERTEXARRAYPROC glBindVertexArray;
PFNGLBINDVERTEXSHADEREXTPROC glBindVertexShaderEXT;
PFNGLBINORMALPOINTEREXTPROC glBinormalPointerEXT;
PFNGLBLENDCOLOREXTPROC glBlendColorEXT;
PFNGLBLENDCOLORPROC glBlendColor;
PFNGLBLENDEQUATIONEXTPROC glBlendEquationEXT;
PFNGLBLENDEQUATIONIARBPROC glBlendEquationiARB;
PFNGLBLENDEQUATIONIPROC glBlendEquationi;
PFNGLBLENDEQUATIONPROC glBlendEquation;
PFNGLBLENDEQUATIONSEPARATEEXTPROC glBlendEquationSeparateEXT;
PFNGLBLENDEQUATIONSEPARATEIARBPROC glBlendEquationSeparateiARB;
PFNGLBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
PFNGLBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
PFNGLBLENDFUNCIARBPROC glBlendFunciARB;
PFNGLBLENDFUNCIPROC glBlendFunci;
PFNGLBLENDFUNCSEPARATEEXTPROC glBlendFuncSeparateEXT;
PFNGLBLENDFUNCSEPARATEIARBPROC glBlendFuncSeparateiARB;
PFNGLBLENDFUNCSEPARATEIPROC glBlendFuncSeparatei;
PFNGLBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
PFNGLBLITFRAMEBUFFEREXTPROC glBlitFramebufferEXT;
PFNGLBLITFRAMEBUFFERPROC glBlitFramebuffer;
PFNGLBUFFERDATAARBPROC glBufferDataARB;
PFNGLBUFFERDATAPROC glBufferData;
PFNGLBUFFERSUBDATAARBPROC glBufferSubDataARB;
PFNGLBUFFERSUBDATAPROC glBufferSubData;
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC glCheckNamedFramebufferStatusEXT;
PFNGLCLAMPCOLORARBPROC glClampColorARB;
PFNGLCLAMPCOLORPROC glClampColor;
PFNGLCLEARBUFFERFIPROC glClearBufferfi;
PFNGLCLEARBUFFERFVPROC glClearBufferfv;
PFNGLCLEARBUFFERIVPROC glClearBufferiv;
PFNGLCLEARBUFFERUIVPROC glClearBufferuiv;
PFNGLCLEARCOLORIIEXTPROC glClearColorIiEXT;
PFNGLCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
PFNGLCLEARDEPTHFPROC glClearDepthf;
PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
PFNGLCLIENTACTIVETEXTUREPROC glClientActiveTexture;
PFNGLCLIENTATTRIBDEFAULTEXTPROC glClientAttribDefaultEXT;
PFNGLCLIENTWAITSYNCPROC glClientWaitSync;
PFNGLCOLORMASKINDEXEDEXTPROC glColorMaskIndexedEXT;
PFNGLCOLORMASKIPROC glColorMaski;
PFNGLCOLORP3UIPROC glColorP3ui;
PFNGLCOLORP3UIVPROC glColorP3uiv;
PFNGLCOLORP4UIPROC glColorP4ui;
PFNGLCOLORP4UIVPROC glColorP4uiv;
PFNGLCOLORPOINTEREXTPROC glColorPointerEXT;
PFNGLCOLORSUBTABLEEXTPROC glColorSubTableEXT;
PFNGLCOLORSUBTABLEPROC glColorSubTable;
PFNGLCOLORTABLEEXTPROC glColorTableEXT;
PFNGLCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
PFNGLCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
PFNGLCOLORTABLEPROC glColorTable;
PFNGLCOMPILESHADERARBPROC glCompileShaderARB;
PFNGLCOMPILESHADERINCLUDEARBPROC glCompileShaderIncludeARB;
PFNGLCOMPILESHADERPROC glCompileShader;
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC glCompressedMultiTexImage1DEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC glCompressedMultiTexImage2DEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC glCompressedMultiTexImage3DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC glCompressedMultiTexSubImage1DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC glCompressedMultiTexSubImage2DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC glCompressedMultiTexSubImage3DEXT;
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
PFNGLCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
PFNGLCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
PFNGLCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC glCompressedTextureImage1DEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC glCompressedTextureImage2DEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC glCompressedTextureImage3DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC glCompressedTextureSubImage1DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC glCompressedTextureSubImage2DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC glCompressedTextureSubImage3DEXT;
PFNGLCONVOLUTIONFILTER1DEXTPROC glConvolutionFilter1DEXT;
PFNGLCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
PFNGLCONVOLUTIONFILTER2DEXTPROC glConvolutionFilter2DEXT;
PFNGLCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
PFNGLCONVOLUTIONPARAMETERFEXTPROC glConvolutionParameterfEXT;
PFNGLCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
PFNGLCONVOLUTIONPARAMETERFVEXTPROC glConvolutionParameterfvEXT;
PFNGLCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
PFNGLCONVOLUTIONPARAMETERIEXTPROC glConvolutionParameteriEXT;
PFNGLCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
PFNGLCONVOLUTIONPARAMETERIVEXTPROC glConvolutionParameterivEXT;
PFNGLCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
PFNGLCOPYBUFFERSUBDATAPROC glCopyBufferSubData;
PFNGLCOPYCOLORSUBTABLEEXTPROC glCopyColorSubTableEXT;
PFNGLCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
PFNGLCOPYCOLORTABLEPROC glCopyColorTable;
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC glCopyConvolutionFilter1DEXT;
PFNGLCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC glCopyConvolutionFilter2DEXT;
PFNGLCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
PFNGLCOPYMULTITEXIMAGE1DEXTPROC glCopyMultiTexImage1DEXT;
PFNGLCOPYMULTITEXIMAGE2DEXTPROC glCopyMultiTexImage2DEXT;
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC glCopyMultiTexSubImage1DEXT;
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC glCopyMultiTexSubImage2DEXT;
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC glCopyMultiTexSubImage3DEXT;
PFNGLCOPYTEXIMAGE1DEXTPROC glCopyTexImage1DEXT;
PFNGLCOPYTEXIMAGE2DEXTPROC glCopyTexImage2DEXT;
PFNGLCOPYTEXSUBIMAGE1DEXTPROC glCopyTexSubImage1DEXT;
PFNGLCOPYTEXSUBIMAGE2DEXTPROC glCopyTexSubImage2DEXT;
PFNGLCOPYTEXSUBIMAGE3DEXTPROC glCopyTexSubImage3DEXT;
PFNGLCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
PFNGLCOPYTEXTUREIMAGE1DEXTPROC glCopyTextureImage1DEXT;
PFNGLCOPYTEXTUREIMAGE2DEXTPROC glCopyTextureImage2DEXT;
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC glCopyTextureSubImage1DEXT;
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glCopyTextureSubImage2DEXT;
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glCopyTextureSubImage3DEXT;
PFNGLCREATEPROGRAMOBJECTARBPROC glCreateProgramObjectARB;
PFNGLCREATEPROGRAMPROC glCreateProgram;
PFNGLCREATESHADEROBJECTARBPROC glCreateShaderObjectARB;
PFNGLCREATESHADERPROC glCreateShader;
PFNGLCREATESHADERPROGRAMEXTPROC glCreateShaderProgramEXT;
PFNGLCREATESHADERPROGRAMVPROC glCreateShaderProgramv;
PFNGLCREATESYNCFROMCLEVENTARBPROC glCreateSyncFromCLeventARB;
PFNGLCULLPARAMETERDVEXTPROC glCullParameterdvEXT;
PFNGLCULLPARAMETERFVEXTPROC glCullParameterfvEXT;
PFNGLCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
PFNGLDEBUGMESSAGECALLBACKARBPROC glDebugMessageCallbackARB;
PFNGLDEBUGMESSAGECONTROLARBPROC glDebugMessageControlARB;
PFNGLDEBUGMESSAGEINSERTARBPROC glDebugMessageInsertARB;
PFNGLDELETEBUFFERSARBPROC glDeleteBuffersARB;
PFNGLDELETEBUFFERSPROC glDeleteBuffers;
PFNGLDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
PFNGLDELETENAMEDSTRINGARBPROC glDeleteNamedStringARB;
PFNGLDELETEOBJECTARBPROC glDeleteObjectARB;
PFNGLDELETEPROGRAMPIPELINESPROC glDeleteProgramPipelines;
PFNGLDELETEPROGRAMPROC glDeleteProgram;
PFNGLDELETEPROGRAMSARBPROC glDeleteProgramsARB;
PFNGLDELETEQUERIESARBPROC glDeleteQueriesARB;
PFNGLDELETEQUERIESPROC glDeleteQueries;
PFNGLDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
PFNGLDELETESAMPLERSPROC glDeleteSamplers;
PFNGLDELETESHADERPROC glDeleteShader;
PFNGLDELETESYNCPROC glDeleteSync;
PFNGLDELETETEXTURESEXTPROC glDeleteTexturesEXT;
PFNGLDELETETRANSFORMFEEDBACKSPROC glDeleteTransformFeedbacks;
PFNGLDELETEVERTEXARRAYSPROC glDeleteVertexArrays;
PFNGLDELETEVERTEXSHADEREXTPROC glDeleteVertexShaderEXT;
PFNGLDEPTHBOUNDSEXTPROC glDepthBoundsEXT;
PFNGLDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
PFNGLDEPTHRANGEFPROC glDepthRangef;
PFNGLDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
PFNGLDETACHOBJECTARBPROC glDetachObjectARB;
PFNGLDETACHSHADERPROC glDetachShader;
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glDisableClientStateIndexedEXT;
PFNGLDISABLEINDEXEDEXTPROC glDisableIndexedEXT;
PFNGLDISABLEIPROC glDisablei;
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC glDisableVariantClientStateEXT;
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glDisableVertexAttribArrayARB;
PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
PFNGLDRAWARRAYSEXTPROC glDrawArraysEXT;
PFNGLDRAWARRAYSINDIRECTPROC glDrawArraysIndirect;
PFNGLDRAWARRAYSINSTANCEDARBPROC glDrawArraysInstancedARB;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glDrawArraysInstancedBaseInstance;
PFNGLDRAWARRAYSINSTANCEDEXTPROC glDrawArraysInstancedEXT;
PFNGLDRAWARRAYSINSTANCEDPROC glDrawArraysInstanced;
PFNGLDRAWBUFFERSARBPROC glDrawBuffersARB;
PFNGLDRAWBUFFERSPROC glDrawBuffers;
PFNGLDRAWELEMENTSBASEVERTEXPROC glDrawElementsBaseVertex;
PFNGLDRAWELEMENTSINDIRECTPROC glDrawElementsIndirect;
PFNGLDRAWELEMENTSINSTANCEDARBPROC glDrawElementsInstancedARB;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glDrawElementsInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glDrawElementsInstancedBaseVertexBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glDrawElementsInstancedBaseVertex;
PFNGLDRAWELEMENTSINSTANCEDEXTPROC glDrawElementsInstancedEXT;
PFNGLDRAWELEMENTSINSTANCEDPROC glDrawElementsInstanced;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glDrawRangeElementsBaseVertex;
PFNGLDRAWRANGEELEMENTSEXTPROC glDrawRangeElementsEXT;
PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glDrawTransformFeedbackInstanced;
PFNGLDRAWTRANSFORMFEEDBACKPROC glDrawTransformFeedback;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glDrawTransformFeedbackStreamInstanced;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glDrawTransformFeedbackStream;
PFNGLEDGEFLAGPOINTEREXTPROC glEdgeFlagPointerEXT;
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glEnableClientStateIndexedEXT;
PFNGLENABLEINDEXEDEXTPROC glEnableIndexedEXT;
PFNGLENABLEIPROC glEnablei;
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC glEnableVariantClientStateEXT;
PFNGLENABLEVERTEXATTRIBARRAYARBPROC glEnableVertexAttribArrayARB;
PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
PFNGLENDCONDITIONALRENDERPROC glEndConditionalRender;
PFNGLENDQUERYARBPROC glEndQueryARB;
PFNGLENDQUERYINDEXEDPROC glEndQueryIndexed;
PFNGLENDQUERYPROC glEndQuery;
PFNGLENDTRANSFORMFEEDBACKEXTPROC glEndTransformFeedbackEXT;
PFNGLENDTRANSFORMFEEDBACKPROC glEndTransformFeedback;
PFNGLENDVERTEXSHADEREXTPROC glEndVertexShaderEXT;
PFNGLEXTRACTCOMPONENTEXTPROC glExtractComponentEXT;
PFNGLFENCESYNCPROC glFenceSync;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC glFlushMappedBufferRange;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glFlushMappedNamedBufferRangeEXT;
PFNGLFOGCOORDDEXTPROC glFogCoorddEXT;
PFNGLFOGCOORDDPROC glFogCoordd;
PFNGLFOGCOORDDVEXTPROC glFogCoorddvEXT;
PFNGLFOGCOORDDVPROC glFogCoorddv;
PFNGLFOGCOORDFEXTPROC glFogCoordfEXT;
PFNGLFOGCOORDFPROC glFogCoordf;
PFNGLFOGCOORDFVEXTPROC glFogCoordfvEXT;
PFNGLFOGCOORDFVPROC glFogCoordfv;
PFNGLFOGCOORDPOINTEREXTPROC glFogCoordPointerEXT;
PFNGLFOGCOORDPOINTERPROC glFogCoordPointer;
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glFramebufferDrawBufferEXT;
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glFramebufferDrawBuffersEXT;
PFNGLFRAMEBUFFERREADBUFFEREXTPROC glFramebufferReadBufferEXT;
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
PFNGLFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
PFNGLFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
PFNGLFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
PFNGLFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
PFNGLFRAMEBUFFERTEXTUREEXTPROC glFramebufferTextureEXT;
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glFramebufferTextureFaceEXT;
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glFramebufferTextureLayerEXT;
PFNGLFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
PFNGLFRAMEBUFFERTEXTUREPROC glFramebufferTexture;
PFNGLGENBUFFERSARBPROC glGenBuffersARB;
PFNGLGENBUFFERSPROC glGenBuffers;
PFNGLGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
PFNGLGENERATEMIPMAPPROC glGenerateMipmap;
PFNGLGENERATEMULTITEXMIPMAPEXTPROC glGenerateMultiTexMipmapEXT;
PFNGLGENERATETEXTUREMIPMAPEXTPROC glGenerateTextureMipmapEXT;
PFNGLGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
PFNGLGENPROGRAMPIPELINESPROC glGenProgramPipelines;
PFNGLGENPROGRAMSARBPROC glGenProgramsARB;
PFNGLGENQUERIESARBPROC glGenQueriesARB;
PFNGLGENQUERIESPROC glGenQueries;
PFNGLGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
PFNGLGENSAMPLERSPROC glGenSamplers;
PFNGLGENSYMBOLSEXTPROC glGenSymbolsEXT;
PFNGLGENTEXTURESEXTPROC glGenTexturesEXT;
PFNGLGENTRANSFORMFEEDBACKSPROC glGenTransformFeedbacks;
PFNGLGENVERTEXARRAYSPROC glGenVertexArrays;
PFNGLGENVERTEXSHADERSEXTPROC glGenVertexShadersEXT;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glGetActiveAtomicCounterBufferiv;
PFNGLGETACTIVEATTRIBARBPROC glGetActiveAttribARB;
PFNGLGETACTIVEATTRIBPROC glGetActiveAttrib;
PFNGLGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
PFNGLGETACTIVEUNIFORMARBPROC glGetActiveUniformARB;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC glGetActiveUniformBlockiv;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glGetActiveUniformBlockName;
PFNGLGETACTIVEUNIFORMNAMEPROC glGetActiveUniformName;
PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform;
PFNGLGETACTIVEUNIFORMSIVPROC glGetActiveUniformsiv;
PFNGLGETATTACHEDOBJECTSARBPROC glGetAttachedObjectsARB;
PFNGLGETATTACHEDSHADERSPROC glGetAttachedShaders;
PFNGLGETATTRIBLOCATIONARBPROC glGetAttribLocationARB;
PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation;
PFNGLGETBOOLEANI_VPROC glGetBooleani_v;
PFNGLGETBOOLEANINDEXEDVEXTPROC glGetBooleanIndexedvEXT;
PFNGLGETBUFFERPARAMETERI64VPROC glGetBufferParameteri64v;
PFNGLGETBUFFERPARAMETERIVARBPROC glGetBufferParameterivARB;
PFNGLGETBUFFERPARAMETERIVPROC glGetBufferParameteriv;
PFNGLGETBUFFERPOINTERVARBPROC glGetBufferPointervARB;
PFNGLGETBUFFERPOINTERVPROC glGetBufferPointerv;
PFNGLGETBUFFERSUBDATAARBPROC glGetBufferSubDataARB;
PFNGLGETBUFFERSUBDATAPROC glGetBufferSubData;
PFNGLGETCOLORTABLEEXTPROC glGetColorTableEXT;
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC glGetColorTableParameterfvEXT;
PFNGLGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC glGetColorTableParameterivEXT;
PFNGLGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
PFNGLGETCOLORTABLEPROC glGetColorTable;
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glGetCompressedMultiTexImageEXT;
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
PFNGLGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glGetCompressedTextureImageEXT;
PFNGLGETCONVOLUTIONFILTEREXTPROC glGetConvolutionFilterEXT;
PFNGLGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC glGetConvolutionParameterfvEXT;
PFNGLGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC glGetConvolutionParameterivEXT;
PFNGLGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
PFNGLGETDEBUGMESSAGELOGARBPROC glGetDebugMessageLogARB;
PFNGLGETDOUBLEI_VPROC glGetDoublei_v;
PFNGLGETDOUBLEINDEXEDVEXTPROC glGetDoubleIndexedvEXT;
PFNGLGETFLOATI_VPROC glGetFloati_v;
PFNGLGETFLOATINDEXEDVEXTPROC glGetFloatIndexedvEXT;
PFNGLGETFRAGDATAINDEXPROC glGetFragDataIndex;
PFNGLGETFRAGDATALOCATIONEXTPROC glGetFragDataLocationEXT;
PFNGLGETFRAGDATALOCATIONPROC glGetFragDataLocation;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glGetFramebufferParameterivEXT;
PFNGLGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
PFNGLGETHANDLEARBPROC glGetHandleARB;
PFNGLGETHISTOGRAMEXTPROC glGetHistogramEXT;
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC glGetHistogramParameterfvEXT;
PFNGLGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC glGetHistogramParameterivEXT;
PFNGLGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
PFNGLGETHISTOGRAMPROC glGetHistogram;
PFNGLGETINFOLOGARBPROC glGetInfoLogARB;
PFNGLGETINTEGER64I_VPROC glGetInteger64i_v;
PFNGLGETINTEGER64VPROC glGetInteger64v;
PFNGLGETINTEGERI_VPROC glGetIntegeri_v;
PFNGLGETINTEGERINDEXEDVEXTPROC glGetIntegerIndexedvEXT;
PFNGLGETINTERNALFORMATIVPROC glGetInternalformativ;
PFNGLGETINVARIANTBOOLEANVEXTPROC glGetInvariantBooleanvEXT;
PFNGLGETINVARIANTFLOATVEXTPROC glGetInvariantFloatvEXT;
PFNGLGETINVARIANTINTEGERVEXTPROC glGetInvariantIntegervEXT;
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC glGetLocalConstantBooleanvEXT;
PFNGLGETLOCALCONSTANTFLOATVEXTPROC glGetLocalConstantFloatvEXT;
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC glGetLocalConstantIntegervEXT;
PFNGLGETMINMAXEXTPROC glGetMinmaxEXT;
PFNGLGETMINMAXPARAMETERFVEXTPROC glGetMinmaxParameterfvEXT;
PFNGLGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
PFNGLGETMINMAXPARAMETERIVEXTPROC glGetMinmaxParameterivEXT;
PFNGLGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
PFNGLGETMINMAXPROC glGetMinmax;
PFNGLGETMULTISAMPLEFVPROC glGetMultisamplefv;
PFNGLGETMULTITEXENVFVEXTPROC glGetMultiTexEnvfvEXT;
PFNGLGETMULTITEXENVIVEXTPROC glGetMultiTexEnvivEXT;
PFNGLGETMULTITEXGENDVEXTPROC glGetMultiTexGendvEXT;
PFNGLGETMULTITEXGENFVEXTPROC glGetMultiTexGenfvEXT;
PFNGLGETMULTITEXGENIVEXTPROC glGetMultiTexGenivEXT;
PFNGLGETMULTITEXIMAGEEXTPROC glGetMultiTexImageEXT;
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glGetMultiTexLevelParameterfvEXT;
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glGetMultiTexLevelParameterivEXT;
PFNGLGETMULTITEXPARAMETERFVEXTPROC glGetMultiTexParameterfvEXT;
PFNGLGETMULTITEXPARAMETERIIVEXTPROC glGetMultiTexParameterIivEXT;
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glGetMultiTexParameterIuivEXT;
PFNGLGETMULTITEXPARAMETERIVEXTPROC glGetMultiTexParameterivEXT;
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glGetNamedBufferParameterivEXT;
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glGetNamedBufferPointervEXT;
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glGetNamedBufferSubDataEXT;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetNamedFramebufferAttachmentParameterivEXT;
PFNGLGETNAMEDPROGRAMIVEXTPROC glGetNamedProgramivEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glGetNamedProgramLocalParameterdvEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glGetNamedProgramLocalParameterfvEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glGetNamedProgramLocalParameterIivEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glGetNamedProgramLocalParameterIuivEXT;
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glGetNamedProgramStringEXT;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glGetNamedRenderbufferParameterivEXT;
PFNGLGETNAMEDSTRINGARBPROC glGetNamedStringARB;
PFNGLGETNAMEDSTRINGIVARBPROC glGetNamedStringivARB;
PFNGLGETNCOLORTABLEARBPROC glGetnColorTableARB;
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
PFNGLGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
PFNGLGETNHISTOGRAMARBPROC glGetnHistogramARB;
PFNGLGETNMAPDVARBPROC glGetnMapdvARB;
PFNGLGETNMAPFVARBPROC glGetnMapfvARB;
PFNGLGETNMAPIVARBPROC glGetnMapivARB;
PFNGLGETNMINMAXARBPROC glGetnMinmaxARB;
PFNGLGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
PFNGLGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
PFNGLGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
PFNGLGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
PFNGLGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
PFNGLGETNTEXIMAGEARBPROC glGetnTexImageARB;
PFNGLGETNUNIFORMDVARBPROC glGetnUniformdvARB;
PFNGLGETNUNIFORMFVARBPROC glGetnUniformfvARB;
PFNGLGETNUNIFORMIVARBPROC glGetnUniformivARB;
PFNGLGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
PFNGLGETOBJECTPARAMETERFVARBPROC glGetObjectParameterfvARB;
PFNGLGETOBJECTPARAMETERIVARBPROC glGetObjectParameterivARB;
PFNGLGETPOINTERINDEXEDVEXTPROC glGetPointerIndexedvEXT;
PFNGLGETPROGRAMBINARYPROC glGetProgramBinary;
PFNGLGETPROGRAMENVPARAMETERDVARBPROC glGetProgramEnvParameterdvARB;
PFNGLGETPROGRAMENVPARAMETERFVARBPROC glGetProgramEnvParameterfvARB;
PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
PFNGLGETPROGRAMIVARBPROC glGetProgramivARB;
PFNGLGETPROGRAMIVPROC glGetProgramiv;
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glGetProgramLocalParameterdvARB;
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glGetProgramLocalParameterfvARB;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC glGetProgramPipelineInfoLog;
PFNGLGETPROGRAMPIPELINEIVPROC glGetProgramPipelineiv;
PFNGLGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
PFNGLGETPROGRAMSTRINGARBPROC glGetProgramStringARB;
PFNGLGETQUERYINDEXEDIVPROC glGetQueryIndexediv;
PFNGLGETQUERYIVARBPROC glGetQueryivARB;
PFNGLGETQUERYIVPROC glGetQueryiv;
PFNGLGETQUERYOBJECTI64VEXTPROC glGetQueryObjecti64vEXT;
PFNGLGETQUERYOBJECTI64VPROC glGetQueryObjecti64v;
PFNGLGETQUERYOBJECTIVARBPROC glGetQueryObjectivARB;
PFNGLGETQUERYOBJECTIVPROC glGetQueryObjectiv;
PFNGLGETQUERYOBJECTUI64VEXTPROC glGetQueryObjectui64vEXT;
PFNGLGETQUERYOBJECTUI64VPROC glGetQueryObjectui64v;
PFNGLGETQUERYOBJECTUIVARBPROC glGetQueryObjectuivARB;
PFNGLGETQUERYOBJECTUIVPROC glGetQueryObjectuiv;
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
PFNGLGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
PFNGLGETSAMPLERPARAMETERFVPROC glGetSamplerParameterfv;
PFNGLGETSAMPLERPARAMETERIIVPROC glGetSamplerParameterIiv;
PFNGLGETSAMPLERPARAMETERIUIVPROC glGetSamplerParameterIuiv;
PFNGLGETSAMPLERPARAMETERIVPROC glGetSamplerParameteriv;
PFNGLGETSEPARABLEFILTEREXTPROC glGetSeparableFilterEXT;
PFNGLGETSEPARABLEFILTERPROC glGetSeparableFilter;
PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
PFNGLGETSHADERIVPROC glGetShaderiv;
PFNGLGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
PFNGLGETSHADERSOURCEARBPROC glGetShaderSourceARB;
PFNGLGETSHADERSOURCEPROC glGetShaderSource;
PFNGLGETSTRINGIPROC glGetStringi;
PFNGLGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
PFNGLGETSYNCIVPROC glGetSynciv;
PFNGLGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
PFNGLGETTEXPARAMETERIIVPROC glGetTexParameterIiv;
PFNGLGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
PFNGLGETTEXPARAMETERIUIVPROC glGetTexParameterIuiv;
PFNGLGETTEXTUREIMAGEEXTPROC glGetTextureImageEXT;
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glGetTextureLevelParameterfvEXT;
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glGetTextureLevelParameterivEXT;
PFNGLGETTEXTUREPARAMETERFVEXTPROC glGetTextureParameterfvEXT;
PFNGLGETTEXTUREPARAMETERIIVEXTPROC glGetTextureParameterIivEXT;
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glGetTextureParameterIuivEXT;
PFNGLGETTEXTUREPARAMETERIVEXTPROC glGetTextureParameterivEXT;
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glGetTransformFeedbackVaryingEXT;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glGetTransformFeedbackVarying;
PFNGLGETUNIFORMBLOCKINDEXPROC glGetUniformBlockIndex;
PFNGLGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
PFNGLGETUNIFORMDVPROC glGetUniformdv;
PFNGLGETUNIFORMFVARBPROC glGetUniformfvARB;
PFNGLGETUNIFORMFVPROC glGetUniformfv;
PFNGLGETUNIFORMINDICESPROC glGetUniformIndices;
PFNGLGETUNIFORMIVARBPROC glGetUniformivARB;
PFNGLGETUNIFORMIVPROC glGetUniformiv;
PFNGLGETUNIFORMLOCATIONARBPROC glGetUniformLocationARB;
PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;
PFNGLGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
PFNGLGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
PFNGLGETUNIFORMUIVEXTPROC glGetUniformuivEXT;
PFNGLGETUNIFORMUIVPROC glGetUniformuiv;
PFNGLGETVARIANTBOOLEANVEXTPROC glGetVariantBooleanvEXT;
PFNGLGETVARIANTFLOATVEXTPROC glGetVariantFloatvEXT;
PFNGLGETVARIANTINTEGERVEXTPROC glGetVariantIntegervEXT;
PFNGLGETVARIANTPOINTERVEXTPROC glGetVariantPointervEXT;
PFNGLGETVERTEXATTRIBDVARBPROC glGetVertexAttribdvARB;
PFNGLGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
PFNGLGETVERTEXATTRIBFVARBPROC glGetVertexAttribfvARB;
PFNGLGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
PFNGLGETVERTEXATTRIBIIVEXTPROC glGetVertexAttribIivEXT;
PFNGLGETVERTEXATTRIBIIVPROC glGetVertexAttribIiv;
PFNGLGETVERTEXATTRIBIUIVEXTPROC glGetVertexAttribIuivEXT;
PFNGLGETVERTEXATTRIBIUIVPROC glGetVertexAttribIuiv;
PFNGLGETVERTEXATTRIBIVARBPROC glGetVertexAttribivARB;
PFNGLGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
PFNGLGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
PFNGLGETVERTEXATTRIBLDVPROC glGetVertexAttribLdv;
PFNGLGETVERTEXATTRIBPOINTERVARBPROC glGetVertexAttribPointervARB;
PFNGLGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
PFNGLHISTOGRAMEXTPROC glHistogramEXT;
PFNGLHISTOGRAMPROC glHistogram;
PFNGLIMPORTSYNCEXTPROC glImportSyncEXT;
PFNGLINDEXFUNCEXTPROC glIndexFuncEXT;
PFNGLINDEXMATERIALEXTPROC glIndexMaterialEXT;
PFNGLINDEXPOINTEREXTPROC glIndexPointerEXT;
PFNGLINSERTCOMPONENTEXTPROC glInsertComponentEXT;
PFNGLISBUFFERARBPROC glIsBufferARB;
PFNGLISBUFFERPROC glIsBuffer;
PFNGLISENABLEDINDEXEDEXTPROC glIsEnabledIndexedEXT;
PFNGLISENABLEDIPROC glIsEnabledi;
PFNGLISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
PFNGLISFRAMEBUFFERPROC glIsFramebuffer;
PFNGLISNAMEDSTRINGARBPROC glIsNamedStringARB;
PFNGLISPROGRAMARBPROC glIsProgramARB;
PFNGLISPROGRAMPIPELINEPROC glIsProgramPipeline;
PFNGLISPROGRAMPROC glIsProgram;
PFNGLISQUERYARBPROC glIsQueryARB;
PFNGLISQUERYPROC glIsQuery;
PFNGLISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
PFNGLISRENDERBUFFERPROC glIsRenderbuffer;
PFNGLISSAMPLERPROC glIsSampler;
PFNGLISSHADERPROC glIsShader;
PFNGLISSYNCPROC glIsSync;
PFNGLISTEXTUREEXTPROC glIsTextureEXT;
PFNGLISTRANSFORMFEEDBACKPROC glIsTransformFeedback;
PFNGLISVARIANTENABLEDEXTPROC glIsVariantEnabledEXT;
PFNGLISVERTEXARRAYPROC glIsVertexArray;
PFNGLLINKPROGRAMARBPROC glLinkProgramARB;
PFNGLLINKPROGRAMPROC glLinkProgram;
PFNGLLOADTRANSPOSEMATRIXDARBPROC glLoadTransposeMatrixdARB;
PFNGLLOADTRANSPOSEMATRIXDPROC glLoadTransposeMatrixd;
PFNGLLOADTRANSPOSEMATRIXFARBPROC glLoadTransposeMatrixfARB;
PFNGLLOADTRANSPOSEMATRIXFPROC glLoadTransposeMatrixf;
PFNGLLOCKARRAYSEXTPROC glLockArraysEXT;
PFNGLMAPBUFFERARBPROC glMapBufferARB;
PFNGLMAPBUFFERPROC glMapBuffer;
PFNGLMAPBUFFERRANGEPROC glMapBufferRange;
PFNGLMAPNAMEDBUFFEREXTPROC glMapNamedBufferEXT;
PFNGLMAPNAMEDBUFFERRANGEEXTPROC glMapNamedBufferRangeEXT;
PFNGLMATRIXFRUSTUMEXTPROC glMatrixFrustumEXT;
PFNGLMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
PFNGLMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
PFNGLMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
PFNGLMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
PFNGLMATRIXLOADDEXTPROC glMatrixLoaddEXT;
PFNGLMATRIXLOADFEXTPROC glMatrixLoadfEXT;
PFNGLMATRIXLOADIDENTITYEXTPROC glMatrixLoadIdentityEXT;
PFNGLMATRIXLOADTRANSPOSEDEXTPROC glMatrixLoadTransposedEXT;
PFNGLMATRIXLOADTRANSPOSEFEXTPROC glMatrixLoadTransposefEXT;
PFNGLMATRIXMULTDEXTPROC glMatrixMultdEXT;
PFNGLMATRIXMULTFEXTPROC glMatrixMultfEXT;
PFNGLMATRIXMULTTRANSPOSEDEXTPROC glMatrixMultTransposedEXT;
PFNGLMATRIXMULTTRANSPOSEFEXTPROC glMatrixMultTransposefEXT;
PFNGLMATRIXORTHOEXTPROC glMatrixOrthoEXT;
PFNGLMATRIXPOPEXTPROC glMatrixPopEXT;
PFNGLMATRIXPUSHEXTPROC glMatrixPushEXT;
PFNGLMATRIXROTATEDEXTPROC glMatrixRotatedEXT;
PFNGLMATRIXROTATEFEXTPROC glMatrixRotatefEXT;
PFNGLMATRIXSCALEDEXTPROC glMatrixScaledEXT;
PFNGLMATRIXSCALEFEXTPROC glMatrixScalefEXT;
PFNGLMATRIXTRANSLATEDEXTPROC glMatrixTranslatedEXT;
PFNGLMATRIXTRANSLATEFEXTPROC glMatrixTranslatefEXT;
PFNGLMEMORYBARRIEREXTPROC glMemoryBarrierEXT;
PFNGLMEMORYBARRIERPROC glMemoryBarrier;
PFNGLMINMAXEXTPROC glMinmaxEXT;
PFNGLMINMAXPROC glMinmax;
PFNGLMINSAMPLESHADINGARBPROC glMinSampleShadingARB;
PFNGLMINSAMPLESHADINGPROC glMinSampleShading;
PFNGLMULTIDRAWARRAYSEXTPROC glMultiDrawArraysEXT;
PFNGLMULTIDRAWARRAYSPROC glMultiDrawArrays;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glMultiDrawElementsBaseVertex;
PFNGLMULTIDRAWELEMENTSEXTPROC glMultiDrawElementsEXT;
PFNGLMULTIDRAWELEMENTSPROC glMultiDrawElements;
PFNGLMULTITEXBUFFEREXTPROC glMultiTexBufferEXT;
PFNGLMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
PFNGLMULTITEXCOORD1DPROC glMultiTexCoord1d;
PFNGLMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
PFNGLMULTITEXCOORD1DVPROC glMultiTexCoord1dv;
PFNGLMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
PFNGLMULTITEXCOORD1FPROC glMultiTexCoord1f;
PFNGLMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
PFNGLMULTITEXCOORD1FVPROC glMultiTexCoord1fv;
PFNGLMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
PFNGLMULTITEXCOORD1IPROC glMultiTexCoord1i;
PFNGLMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
PFNGLMULTITEXCOORD1IVPROC glMultiTexCoord1iv;
PFNGLMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
PFNGLMULTITEXCOORD1SPROC glMultiTexCoord1s;
PFNGLMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
PFNGLMULTITEXCOORD1SVPROC glMultiTexCoord1sv;
PFNGLMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
PFNGLMULTITEXCOORD2DPROC glMultiTexCoord2d;
PFNGLMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
PFNGLMULTITEXCOORD2DVPROC glMultiTexCoord2dv;
PFNGLMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
PFNGLMULTITEXCOORD2FPROC glMultiTexCoord2f;
PFNGLMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
PFNGLMULTITEXCOORD2FVPROC glMultiTexCoord2fv;
PFNGLMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
PFNGLMULTITEXCOORD2IPROC glMultiTexCoord2i;
PFNGLMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
PFNGLMULTITEXCOORD2IVPROC glMultiTexCoord2iv;
PFNGLMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
PFNGLMULTITEXCOORD2SPROC glMultiTexCoord2s;
PFNGLMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
PFNGLMULTITEXCOORD2SVPROC glMultiTexCoord2sv;
PFNGLMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
PFNGLMULTITEXCOORD3DPROC glMultiTexCoord3d;
PFNGLMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
PFNGLMULTITEXCOORD3DVPROC glMultiTexCoord3dv;
PFNGLMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
PFNGLMULTITEXCOORD3FPROC glMultiTexCoord3f;
PFNGLMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
PFNGLMULTITEXCOORD3FVPROC glMultiTexCoord3fv;
PFNGLMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
PFNGLMULTITEXCOORD3IPROC glMultiTexCoord3i;
PFNGLMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
PFNGLMULTITEXCOORD3IVPROC glMultiTexCoord3iv;
PFNGLMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
PFNGLMULTITEXCOORD3SPROC glMultiTexCoord3s;
PFNGLMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
PFNGLMULTITEXCOORD3SVPROC glMultiTexCoord3sv;
PFNGLMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
PFNGLMULTITEXCOORD4DPROC glMultiTexCoord4d;
PFNGLMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
PFNGLMULTITEXCOORD4DVPROC glMultiTexCoord4dv;
PFNGLMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
PFNGLMULTITEXCOORD4FPROC glMultiTexCoord4f;
PFNGLMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
PFNGLMULTITEXCOORD4FVPROC glMultiTexCoord4fv;
PFNGLMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
PFNGLMULTITEXCOORD4IPROC glMultiTexCoord4i;
PFNGLMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
PFNGLMULTITEXCOORD4IVPROC glMultiTexCoord4iv;
PFNGLMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
PFNGLMULTITEXCOORD4SPROC glMultiTexCoord4s;
PFNGLMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
PFNGLMULTITEXCOORD4SVPROC glMultiTexCoord4sv;
PFNGLMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
PFNGLMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
PFNGLMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
PFNGLMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
PFNGLMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
PFNGLMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
PFNGLMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
PFNGLMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
PFNGLMULTITEXCOORDPOINTEREXTPROC glMultiTexCoordPointerEXT;
PFNGLMULTITEXENVFEXTPROC glMultiTexEnvfEXT;
PFNGLMULTITEXENVFVEXTPROC glMultiTexEnvfvEXT;
PFNGLMULTITEXENVIEXTPROC glMultiTexEnviEXT;
PFNGLMULTITEXENVIVEXTPROC glMultiTexEnvivEXT;
PFNGLMULTITEXGENDEXTPROC glMultiTexGendEXT;
PFNGLMULTITEXGENDVEXTPROC glMultiTexGendvEXT;
PFNGLMULTITEXGENFEXTPROC glMultiTexGenfEXT;
PFNGLMULTITEXGENFVEXTPROC glMultiTexGenfvEXT;
PFNGLMULTITEXGENIEXTPROC glMultiTexGeniEXT;
PFNGLMULTITEXGENIVEXTPROC glMultiTexGenivEXT;
PFNGLMULTITEXIMAGE1DEXTPROC glMultiTexImage1DEXT;
PFNGLMULTITEXIMAGE2DEXTPROC glMultiTexImage2DEXT;
PFNGLMULTITEXIMAGE3DEXTPROC glMultiTexImage3DEXT;
PFNGLMULTITEXPARAMETERFEXTPROC glMultiTexParameterfEXT;
PFNGLMULTITEXPARAMETERFVEXTPROC glMultiTexParameterfvEXT;
PFNGLMULTITEXPARAMETERIEXTPROC glMultiTexParameteriEXT;
PFNGLMULTITEXPARAMETERIIVEXTPROC glMultiTexParameterIivEXT;
PFNGLMULTITEXPARAMETERIUIVEXTPROC glMultiTexParameterIuivEXT;
PFNGLMULTITEXPARAMETERIVEXTPROC glMultiTexParameterivEXT;
PFNGLMULTITEXRENDERBUFFEREXTPROC glMultiTexRenderbufferEXT;
PFNGLMULTITEXSUBIMAGE1DEXTPROC glMultiTexSubImage1DEXT;
PFNGLMULTITEXSUBIMAGE2DEXTPROC glMultiTexSubImage2DEXT;
PFNGLMULTITEXSUBIMAGE3DEXTPROC glMultiTexSubImage3DEXT;
PFNGLMULTTRANSPOSEMATRIXDARBPROC glMultTransposeMatrixdARB;
PFNGLMULTTRANSPOSEMATRIXDPROC glMultTransposeMatrixd;
PFNGLMULTTRANSPOSEMATRIXFARBPROC glMultTransposeMatrixfARB;
PFNGLMULTTRANSPOSEMATRIXFPROC glMultTransposeMatrixf;
PFNGLNAMEDBUFFERDATAEXTPROC glNamedBufferDataEXT;
PFNGLNAMEDBUFFERSUBDATAEXTPROC glNamedBufferSubDataEXT;
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glNamedCopyBufferSubDataEXT;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glNamedFramebufferRenderbufferEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glNamedFramebufferTexture1DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glNamedFramebufferTexture2DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glNamedFramebufferTexture3DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glNamedFramebufferTextureEXT;
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glNamedFramebufferTextureFaceEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glNamedFramebufferTextureLayerEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glNamedProgramLocalParameter4dEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glNamedProgramLocalParameter4dvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glNamedProgramLocalParameter4fEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glNamedProgramLocalParameter4fvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glNamedProgramLocalParameterI4iEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glNamedProgramLocalParameterI4ivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glNamedProgramLocalParameterI4uiEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glNamedProgramLocalParameterI4uivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glNamedProgramLocalParameters4fvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glNamedProgramLocalParametersI4ivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glNamedProgramLocalParametersI4uivEXT;
PFNGLNAMEDPROGRAMSTRINGEXTPROC glNamedProgramStringEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glNamedRenderbufferStorageEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glNamedRenderbufferStorageMultisampleCoverageEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glNamedRenderbufferStorageMultisampleEXT;
PFNGLNAMEDSTRINGARBPROC glNamedStringARB;
PFNGLNORMALP3UIPROC glNormalP3ui;
PFNGLNORMALP3UIVPROC glNormalP3uiv;
PFNGLNORMALPOINTEREXTPROC glNormalPointerEXT;
PFNGLPATCHPARAMETERFVPROC glPatchParameterfv;
PFNGLPATCHPARAMETERIPROC glPatchParameteri;
PFNGLPAUSETRANSFORMFEEDBACKPROC glPauseTransformFeedback;
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC glPixelTransformParameterfEXT;
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC glPixelTransformParameterfvEXT;
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC glPixelTransformParameteriEXT;
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC glPixelTransformParameterivEXT;
PFNGLPOINTPARAMETERFARBPROC glPointParameterfARB;
PFNGLPOINTPARAMETERFEXTPROC glPointParameterfEXT;
PFNGLPOINTPARAMETERFPROC glPointParameterf;
PFNGLPOINTPARAMETERFVARBPROC glPointParameterfvARB;
PFNGLPOINTPARAMETERFVEXTPROC glPointParameterfvEXT;
PFNGLPOINTPARAMETERFVPROC glPointParameterfv;
PFNGLPOINTPARAMETERIPROC glPointParameteri;
PFNGLPOINTPARAMETERIVPROC glPointParameteriv;
PFNGLPOLYGONOFFSETEXTPROC glPolygonOffsetEXT;
PFNGLPRIMITIVERESTARTINDEXPROC glPrimitiveRestartIndex;
PFNGLPRIORITIZETEXTURESEXTPROC glPrioritizeTexturesEXT;
PFNGLPROGRAMBINARYPROC glProgramBinary;
PFNGLPROGRAMENVPARAMETER4DARBPROC glProgramEnvParameter4dARB;
PFNGLPROGRAMENVPARAMETER4DVARBPROC glProgramEnvParameter4dvARB;
PFNGLPROGRAMENVPARAMETER4FARBPROC glProgramEnvParameter4fARB;
PFNGLPROGRAMENVPARAMETER4FVARBPROC glProgramEnvParameter4fvARB;
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC glProgramEnvParameters4fvEXT;
PFNGLPROGRAMLOCALPARAMETER4DARBPROC glProgramLocalParameter4dARB;
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glProgramLocalParameter4dvARB;
PFNGLPROGRAMLOCALPARAMETER4FARBPROC glProgramLocalParameter4fARB;
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glProgramLocalParameter4fvARB;
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC glProgramLocalParameters4fvEXT;
PFNGLPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
PFNGLPROGRAMPARAMETERIEXTPROC glProgramParameteriEXT;
PFNGLPROGRAMPARAMETERIPROC glProgramParameteri;
PFNGLPROGRAMSTRINGARBPROC glProgramStringARB;
PFNGLPROGRAMUNIFORM1DPROC glProgramUniform1d;
PFNGLPROGRAMUNIFORM1DVPROC glProgramUniform1dv;
PFNGLPROGRAMUNIFORM1FEXTPROC glProgramUniform1fEXT;
PFNGLPROGRAMUNIFORM1FPROC glProgramUniform1f;
PFNGLPROGRAMUNIFORM1FVEXTPROC glProgramUniform1fvEXT;
PFNGLPROGRAMUNIFORM1FVPROC glProgramUniform1fv;
PFNGLPROGRAMUNIFORM1IEXTPROC glProgramUniform1iEXT;
PFNGLPROGRAMUNIFORM1IPROC glProgramUniform1i;
PFNGLPROGRAMUNIFORM1IVEXTPROC glProgramUniform1ivEXT;
PFNGLPROGRAMUNIFORM1IVPROC glProgramUniform1iv;
PFNGLPROGRAMUNIFORM1UIEXTPROC glProgramUniform1uiEXT;
PFNGLPROGRAMUNIFORM1UIPROC glProgramUniform1ui;
PFNGLPROGRAMUNIFORM1UIVEXTPROC glProgramUniform1uivEXT;
PFNGLPROGRAMUNIFORM1UIVPROC glProgramUniform1uiv;
PFNGLPROGRAMUNIFORM2DPROC glProgramUniform2d;
PFNGLPROGRAMUNIFORM2DVPROC glProgramUniform2dv;
PFNGLPROGRAMUNIFORM2FEXTPROC glProgramUniform2fEXT;
PFNGLPROGRAMUNIFORM2FPROC glProgramUniform2f;
PFNGLPROGRAMUNIFORM2FVEXTPROC glProgramUniform2fvEXT;
PFNGLPROGRAMUNIFORM2FVPROC glProgramUniform2fv;
PFNGLPROGRAMUNIFORM2IEXTPROC glProgramUniform2iEXT;
PFNGLPROGRAMUNIFORM2IPROC glProgramUniform2i;
PFNGLPROGRAMUNIFORM2IVEXTPROC glProgramUniform2ivEXT;
PFNGLPROGRAMUNIFORM2IVPROC glProgramUniform2iv;
PFNGLPROGRAMUNIFORM2UIEXTPROC glProgramUniform2uiEXT;
PFNGLPROGRAMUNIFORM2UIPROC glProgramUniform2ui;
PFNGLPROGRAMUNIFORM2UIVEXTPROC glProgramUniform2uivEXT;
PFNGLPROGRAMUNIFORM2UIVPROC glProgramUniform2uiv;
PFNGLPROGRAMUNIFORM3DPROC glProgramUniform3d;
PFNGLPROGRAMUNIFORM3DVPROC glProgramUniform3dv;
PFNGLPROGRAMUNIFORM3FEXTPROC glProgramUniform3fEXT;
PFNGLPROGRAMUNIFORM3FPROC glProgramUniform3f;
PFNGLPROGRAMUNIFORM3FVEXTPROC glProgramUniform3fvEXT;
PFNGLPROGRAMUNIFORM3FVPROC glProgramUniform3fv;
PFNGLPROGRAMUNIFORM3IEXTPROC glProgramUniform3iEXT;
PFNGLPROGRAMUNIFORM3IPROC glProgramUniform3i;
PFNGLPROGRAMUNIFORM3IVEXTPROC glProgramUniform3ivEXT;
PFNGLPROGRAMUNIFORM3IVPROC glProgramUniform3iv;
PFNGLPROGRAMUNIFORM3UIEXTPROC glProgramUniform3uiEXT;
PFNGLPROGRAMUNIFORM3UIPROC glProgramUniform3ui;
PFNGLPROGRAMUNIFORM3UIVEXTPROC glProgramUniform3uivEXT;
PFNGLPROGRAMUNIFORM3UIVPROC glProgramUniform3uiv;
PFNGLPROGRAMUNIFORM4DPROC glProgramUniform4d;
PFNGLPROGRAMUNIFORM4DVPROC glProgramUniform4dv;
PFNGLPROGRAMUNIFORM4FEXTPROC glProgramUniform4fEXT;
PFNGLPROGRAMUNIFORM4FPROC glProgramUniform4f;
PFNGLPROGRAMUNIFORM4FVEXTPROC glProgramUniform4fvEXT;
PFNGLPROGRAMUNIFORM4FVPROC glProgramUniform4fv;
PFNGLPROGRAMUNIFORM4IEXTPROC glProgramUniform4iEXT;
PFNGLPROGRAMUNIFORM4IPROC glProgramUniform4i;
PFNGLPROGRAMUNIFORM4IVEXTPROC glProgramUniform4ivEXT;
PFNGLPROGRAMUNIFORM4IVPROC glProgramUniform4iv;
PFNGLPROGRAMUNIFORM4UIEXTPROC glProgramUniform4uiEXT;
PFNGLPROGRAMUNIFORM4UIPROC glProgramUniform4ui;
PFNGLPROGRAMUNIFORM4UIVEXTPROC glProgramUniform4uivEXT;
PFNGLPROGRAMUNIFORM4UIVPROC glProgramUniform4uiv;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC glProgramUniformMatrix2dv;
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glProgramUniformMatrix2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC glProgramUniformMatrix2fv;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glProgramUniformMatrix2x3dv;
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glProgramUniformMatrix2x3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glProgramUniformMatrix2x3fv;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glProgramUniformMatrix2x4dv;
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glProgramUniformMatrix2x4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glProgramUniformMatrix2x4fv;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC glProgramUniformMatrix3dv;
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glProgramUniformMatrix3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC glProgramUniformMatrix3fv;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glProgramUniformMatrix3x2dv;
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glProgramUniformMatrix3x2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glProgramUniformMatrix3x2fv;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glProgramUniformMatrix3x4dv;
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glProgramUniformMatrix3x4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glProgramUniformMatrix3x4fv;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC glProgramUniformMatrix4dv;
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glProgramUniformMatrix4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC glProgramUniformMatrix4fv;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glProgramUniformMatrix4x2dv;
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glProgramUniformMatrix4x2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glProgramUniformMatrix4x2fv;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glProgramUniformMatrix4x3dv;
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glProgramUniformMatrix4x3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glProgramUniformMatrix4x3fv;
PFNGLPROVOKINGVERTEXEXTPROC glProvokingVertexEXT;
PFNGLPROVOKINGVERTEXPROC glProvokingVertex;
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glPushClientAttribDefaultEXT;
PFNGLQUERYCOUNTERPROC glQueryCounter;
PFNGLREADNPIXELSARBPROC glReadnPixelsARB;
PFNGLRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
PFNGLRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glRenderbufferStorageMultisampleEXT;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
PFNGLRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
PFNGLRESETHISTOGRAMEXTPROC glResetHistogramEXT;
PFNGLRESETHISTOGRAMPROC glResetHistogram;
PFNGLRESETMINMAXEXTPROC glResetMinmaxEXT;
PFNGLRESETMINMAXPROC glResetMinmax;
PFNGLRESUMETRANSFORMFEEDBACKPROC glResumeTransformFeedback;
PFNGLSAMPLECOVERAGEARBPROC glSampleCoverageARB;
PFNGLSAMPLECOVERAGEPROC glSampleCoverage;
PFNGLSAMPLEMASKEXTPROC glSampleMaskEXT;
PFNGLSAMPLEMASKIPROC glSampleMaski;
PFNGLSAMPLEPATTERNEXTPROC glSamplePatternEXT;
PFNGLSAMPLERPARAMETERFPROC glSamplerParameterf;
PFNGLSAMPLERPARAMETERFVPROC glSamplerParameterfv;
PFNGLSAMPLERPARAMETERIIVPROC glSamplerParameterIiv;
PFNGLSAMPLERPARAMETERIPROC glSamplerParameteri;
PFNGLSAMPLERPARAMETERIUIVPROC glSamplerParameterIuiv;
PFNGLSAMPLERPARAMETERIVPROC glSamplerParameteriv;
PFNGLSCISSORARRAYVPROC glScissorArrayv;
PFNGLSCISSORINDEXEDPROC glScissorIndexed;
PFNGLSCISSORINDEXEDVPROC glScissorIndexedv;
PFNGLSECONDARYCOLOR3BEXTPROC glSecondaryColor3bEXT;
PFNGLSECONDARYCOLOR3BPROC glSecondaryColor3b;
PFNGLSECONDARYCOLOR3BVEXTPROC glSecondaryColor3bvEXT;
PFNGLSECONDARYCOLOR3BVPROC glSecondaryColor3bv;
PFNGLSECONDARYCOLOR3DEXTPROC glSecondaryColor3dEXT;
PFNGLSECONDARYCOLOR3DPROC glSecondaryColor3d;
PFNGLSECONDARYCOLOR3DVEXTPROC glSecondaryColor3dvEXT;
PFNGLSECONDARYCOLOR3DVPROC glSecondaryColor3dv;
PFNGLSECONDARYCOLOR3FEXTPROC glSecondaryColor3fEXT;
PFNGLSECONDARYCOLOR3FPROC glSecondaryColor3f;
PFNGLSECONDARYCOLOR3FVEXTPROC glSecondaryColor3fvEXT;
PFNGLSECONDARYCOLOR3FVPROC glSecondaryColor3fv;
PFNGLSECONDARYCOLOR3IEXTPROC glSecondaryColor3iEXT;
PFNGLSECONDARYCOLOR3IPROC glSecondaryColor3i;
PFNGLSECONDARYCOLOR3IVEXTPROC glSecondaryColor3ivEXT;
PFNGLSECONDARYCOLOR3IVPROC glSecondaryColor3iv;
PFNGLSECONDARYCOLOR3SEXTPROC glSecondaryColor3sEXT;
PFNGLSECONDARYCOLOR3SPROC glSecondaryColor3s;
PFNGLSECONDARYCOLOR3SVEXTPROC glSecondaryColor3svEXT;
PFNGLSECONDARYCOLOR3SVPROC glSecondaryColor3sv;
PFNGLSECONDARYCOLOR3UBEXTPROC glSecondaryColor3ubEXT;
PFNGLSECONDARYCOLOR3UBPROC glSecondaryColor3ub;
PFNGLSECONDARYCOLOR3UBVEXTPROC glSecondaryColor3ubvEXT;
PFNGLSECONDARYCOLOR3UBVPROC glSecondaryColor3ubv;
PFNGLSECONDARYCOLOR3UIEXTPROC glSecondaryColor3uiEXT;
PFNGLSECONDARYCOLOR3UIPROC glSecondaryColor3ui;
PFNGLSECONDARYCOLOR3UIVEXTPROC glSecondaryColor3uivEXT;
PFNGLSECONDARYCOLOR3UIVPROC glSecondaryColor3uiv;
PFNGLSECONDARYCOLOR3USEXTPROC glSecondaryColor3usEXT;
PFNGLSECONDARYCOLOR3USPROC glSecondaryColor3us;
PFNGLSECONDARYCOLOR3USVEXTPROC glSecondaryColor3usvEXT;
PFNGLSECONDARYCOLOR3USVPROC glSecondaryColor3usv;
PFNGLSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
PFNGLSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
PFNGLSECONDARYCOLORPOINTEREXTPROC glSecondaryColorPointerEXT;
PFNGLSECONDARYCOLORPOINTERPROC glSecondaryColorPointer;
PFNGLSEPARABLEFILTER2DEXTPROC glSeparableFilter2DEXT;
PFNGLSEPARABLEFILTER2DPROC glSeparableFilter2D;
PFNGLSETINVARIANTEXTPROC glSetInvariantEXT;
PFNGLSETLOCALCONSTANTEXTPROC glSetLocalConstantEXT;
PFNGLSHADERBINARYPROC glShaderBinary;
PFNGLSHADEROP1EXTPROC glShaderOp1EXT;
PFNGLSHADEROP2EXTPROC glShaderOp2EXT;
PFNGLSHADEROP3EXTPROC glShaderOp3EXT;
PFNGLSHADERSOURCEARBPROC glShaderSourceARB;
PFNGLSHADERSOURCEPROC glShaderSource;
PFNGLSTENCILFUNCSEPARATEPROC glStencilFuncSeparate;
PFNGLSTENCILMASKSEPARATEPROC glStencilMaskSeparate;
PFNGLSTENCILOPSEPARATEPROC glStencilOpSeparate;
PFNGLSWIZZLEEXTPROC glSwizzleEXT;
PFNGLTANGENTPOINTEREXTPROC glTangentPointerEXT;
PFNGLTBUFFERMASK3DFXPROC glTbufferMask3DFX;
PFNGLTEXBUFFERARBPROC glTexBufferARB;
PFNGLTEXBUFFEREXTPROC glTexBufferEXT;
PFNGLTEXBUFFERPROC glTexBuffer;
PFNGLTEXCOORDP1UIPROC glTexCoordP1ui;
PFNGLTEXCOORDP1UIVPROC glTexCoordP1uiv;
PFNGLTEXCOORDP2UIPROC glTexCoordP2ui;
PFNGLTEXCOORDP2UIVPROC glTexCoordP2uiv;
PFNGLTEXCOORDP3UIPROC glTexCoordP3ui;
PFNGLTEXCOORDP3UIVPROC glTexCoordP3uiv;
PFNGLTEXCOORDP4UIPROC glTexCoordP4ui;
PFNGLTEXCOORDP4UIVPROC glTexCoordP4uiv;
PFNGLTEXCOORDPOINTEREXTPROC glTexCoordPointerEXT;
PFNGLTEXIMAGE2DMULTISAMPLEPROC glTexImage2DMultisample;
PFNGLTEXIMAGE3DEXTPROC glTexImage3DEXT;
PFNGLTEXIMAGE3DMULTISAMPLEPROC glTexImage3DMultisample;
PFNGLTEXIMAGE3DPROC glTexImage3D;
PFNGLTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
PFNGLTEXPARAMETERIIVPROC glTexParameterIiv;
PFNGLTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
PFNGLTEXPARAMETERIUIVPROC glTexParameterIuiv;
PFNGLTEXSTORAGE1DPROC glTexStorage1D;
PFNGLTEXSTORAGE2DPROC glTexStorage2D;
PFNGLTEXSTORAGE3DPROC glTexStorage3D;
PFNGLTEXSUBIMAGE1DEXTPROC glTexSubImage1DEXT;
PFNGLTEXSUBIMAGE2DEXTPROC glTexSubImage2DEXT;
PFNGLTEXSUBIMAGE3DEXTPROC glTexSubImage3DEXT;
PFNGLTEXSUBIMAGE3DPROC glTexSubImage3D;
PFNGLTEXTUREBUFFEREXTPROC glTextureBufferEXT;
PFNGLTEXTUREIMAGE1DEXTPROC glTextureImage1DEXT;
PFNGLTEXTUREIMAGE2DEXTPROC glTextureImage2DEXT;
PFNGLTEXTUREIMAGE3DEXTPROC glTextureImage3DEXT;
PFNGLTEXTURELIGHTEXTPROC glTextureLightEXT;
PFNGLTEXTUREMATERIALEXTPROC glTextureMaterialEXT;
PFNGLTEXTURENORMALEXTPROC glTextureNormalEXT;
PFNGLTEXTUREPARAMETERFEXTPROC glTextureParameterfEXT;
PFNGLTEXTUREPARAMETERFVEXTPROC glTextureParameterfvEXT;
PFNGLTEXTUREPARAMETERIEXTPROC glTextureParameteriEXT;
PFNGLTEXTUREPARAMETERIIVEXTPROC glTextureParameterIivEXT;
PFNGLTEXTUREPARAMETERIUIVEXTPROC glTextureParameterIuivEXT;
PFNGLTEXTUREPARAMETERIVEXTPROC glTextureParameterivEXT;
PFNGLTEXTURERENDERBUFFEREXTPROC glTextureRenderbufferEXT;
PFNGLTEXTURESTORAGE1DEXTPROC glTextureStorage1DEXT;
PFNGLTEXTURESTORAGE2DEXTPROC glTextureStorage2DEXT;
PFNGLTEXTURESTORAGE3DEXTPROC glTextureStorage3DEXT;
PFNGLTEXTURESUBIMAGE1DEXTPROC glTextureSubImage1DEXT;
PFNGLTEXTURESUBIMAGE2DEXTPROC glTextureSubImage2DEXT;
PFNGLTEXTURESUBIMAGE3DEXTPROC glTextureSubImage3DEXT;
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC glTransformFeedbackVaryingsEXT;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC glTransformFeedbackVaryings;
PFNGLUNIFORM1DPROC glUniform1d;
PFNGLUNIFORM1DVPROC glUniform1dv;
PFNGLUNIFORM1FARBPROC glUniform1fARB;
PFNGLUNIFORM1FPROC glUniform1f;
PFNGLUNIFORM1FVARBPROC glUniform1fvARB;
PFNGLUNIFORM1FVPROC glUniform1fv;
PFNGLUNIFORM1IARBPROC glUniform1iARB;
PFNGLUNIFORM1IPROC glUniform1i;
PFNGLUNIFORM1IVARBPROC glUniform1ivARB;
PFNGLUNIFORM1IVPROC glUniform1iv;
PFNGLUNIFORM1UIEXTPROC glUniform1uiEXT;
PFNGLUNIFORM1UIPROC glUniform1ui;
PFNGLUNIFORM1UIVEXTPROC glUniform1uivEXT;
PFNGLUNIFORM1UIVPROC glUniform1uiv;
PFNGLUNIFORM2DPROC glUniform2d;
PFNGLUNIFORM2DVPROC glUniform2dv;
PFNGLUNIFORM2FARBPROC glUniform2fARB;
PFNGLUNIFORM2FPROC glUniform2f;
PFNGLUNIFORM2FVARBPROC glUniform2fvARB;
PFNGLUNIFORM2FVPROC glUniform2fv;
PFNGLUNIFORM2IARBPROC glUniform2iARB;
PFNGLUNIFORM2IPROC glUniform2i;
PFNGLUNIFORM2IVARBPROC glUniform2ivARB;
PFNGLUNIFORM2IVPROC glUniform2iv;
PFNGLUNIFORM2UIEXTPROC glUniform2uiEXT;
PFNGLUNIFORM2UIPROC glUniform2ui;
PFNGLUNIFORM2UIVEXTPROC glUniform2uivEXT;
PFNGLUNIFORM2UIVPROC glUniform2uiv;
PFNGLUNIFORM3DPROC glUniform3d;
PFNGLUNIFORM3DVPROC glUniform3dv;
PFNGLUNIFORM3FARBPROC glUniform3fARB;
PFNGLUNIFORM3FPROC glUniform3f;
PFNGLUNIFORM3FVARBPROC glUniform3fvARB;
PFNGLUNIFORM3FVPROC glUniform3fv;
PFNGLUNIFORM3IARBPROC glUniform3iARB;
PFNGLUNIFORM3IPROC glUniform3i;
PFNGLUNIFORM3IVARBPROC glUniform3ivARB;
PFNGLUNIFORM3IVPROC glUniform3iv;
PFNGLUNIFORM3UIEXTPROC glUniform3uiEXT;
PFNGLUNIFORM3UIPROC glUniform3ui;
PFNGLUNIFORM3UIVEXTPROC glUniform3uivEXT;
PFNGLUNIFORM3UIVPROC glUniform3uiv;
PFNGLUNIFORM4DPROC glUniform4d;
PFNGLUNIFORM4DVPROC glUniform4dv;
PFNGLUNIFORM4FARBPROC glUniform4fARB;
PFNGLUNIFORM4FPROC glUniform4f;
PFNGLUNIFORM4FVARBPROC glUniform4fvARB;
PFNGLUNIFORM4FVPROC glUniform4fv;
PFNGLUNIFORM4IARBPROC glUniform4iARB;
PFNGLUNIFORM4IPROC glUniform4i;
PFNGLUNIFORM4IVARBPROC glUniform4ivARB;
PFNGLUNIFORM4IVPROC glUniform4iv;
PFNGLUNIFORM4UIEXTPROC glUniform4uiEXT;
PFNGLUNIFORM4UIPROC glUniform4ui;
PFNGLUNIFORM4UIVEXTPROC glUniform4uivEXT;
PFNGLUNIFORM4UIVPROC glUniform4uiv;
PFNGLUNIFORMBLOCKBINDINGPROC glUniformBlockBinding;
PFNGLUNIFORMBUFFEREXTPROC glUniformBufferEXT;
PFNGLUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
PFNGLUNIFORMMATRIX2FVARBPROC glUniformMatrix2fvARB;
PFNGLUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
PFNGLUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
PFNGLUNIFORMMATRIX2X3FVPROC glUniformMatrix2x3fv;
PFNGLUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
PFNGLUNIFORMMATRIX2X4FVPROC glUniformMatrix2x4fv;
PFNGLUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
PFNGLUNIFORMMATRIX3FVARBPROC glUniformMatrix3fvARB;
PFNGLUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
PFNGLUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
PFNGLUNIFORMMATRIX3X2FVPROC glUniformMatrix3x2fv;
PFNGLUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
PFNGLUNIFORMMATRIX3X4FVPROC glUniformMatrix3x4fv;
PFNGLUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
PFNGLUNIFORMMATRIX4FVARBPROC glUniformMatrix4fvARB;
PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
PFNGLUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
PFNGLUNIFORMMATRIX4X2FVPROC glUniformMatrix4x2fv;
PFNGLUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
PFNGLUNIFORMMATRIX4X3FVPROC glUniformMatrix4x3fv;
PFNGLUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
PFNGLUNLOCKARRAYSEXTPROC glUnlockArraysEXT;
PFNGLUNMAPBUFFERARBPROC glUnmapBufferARB;
PFNGLUNMAPBUFFERPROC glUnmapBuffer;
PFNGLUNMAPNAMEDBUFFEREXTPROC glUnmapNamedBufferEXT;
PFNGLUSEPROGRAMOBJECTARBPROC glUseProgramObjectARB;
PFNGLUSEPROGRAMPROC glUseProgram;
PFNGLUSEPROGRAMSTAGESPROC glUseProgramStages;
PFNGLUSESHADERPROGRAMEXTPROC glUseShaderProgramEXT;
PFNGLVALIDATEPROGRAMARBPROC glValidateProgramARB;
PFNGLVALIDATEPROGRAMPIPELINEPROC glValidateProgramPipeline;
PFNGLVALIDATEPROGRAMPROC glValidateProgram;
PFNGLVARIANTBVEXTPROC glVariantbvEXT;
PFNGLVARIANTDVEXTPROC glVariantdvEXT;
PFNGLVARIANTFVEXTPROC glVariantfvEXT;
PFNGLVARIANTIVEXTPROC glVariantivEXT;
PFNGLVARIANTPOINTEREXTPROC glVariantPointerEXT;
PFNGLVARIANTSVEXTPROC glVariantsvEXT;
PFNGLVARIANTUBVEXTPROC glVariantubvEXT;
PFNGLVARIANTUIVEXTPROC glVariantuivEXT;
PFNGLVARIANTUSVEXTPROC glVariantusvEXT;
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
PFNGLVERTEXATTRIB1DARBPROC glVertexAttrib1dARB;
PFNGLVERTEXATTRIB1DPROC glVertexAttrib1d;
PFNGLVERTEXATTRIB1DVARBPROC glVertexAttrib1dvARB;
PFNGLVERTEXATTRIB1DVPROC glVertexAttrib1dv;
PFNGLVERTEXATTRIB1FARBPROC glVertexAttrib1fARB;
PFNGLVERTEXATTRIB1FPROC glVertexAttrib1f;
PFNGLVERTEXATTRIB1FVARBPROC glVertexAttrib1fvARB;
PFNGLVERTEXATTRIB1FVPROC glVertexAttrib1fv;
PFNGLVERTEXATTRIB1SARBPROC glVertexAttrib1sARB;
PFNGLVERTEXATTRIB1SPROC glVertexAttrib1s;
PFNGLVERTEXATTRIB1SVARBPROC glVertexAttrib1svARB;
PFNGLVERTEXATTRIB1SVPROC glVertexAttrib1sv;
PFNGLVERTEXATTRIB2DARBPROC glVertexAttrib2dARB;
PFNGLVERTEXATTRIB2DPROC glVertexAttrib2d;
PFNGLVERTEXATTRIB2DVARBPROC glVertexAttrib2dvARB;
PFNGLVERTEXATTRIB2DVPROC glVertexAttrib2dv;
PFNGLVERTEXATTRIB2FARBPROC glVertexAttrib2fARB;
PFNGLVERTEXATTRIB2FPROC glVertexAttrib2f;
PFNGLVERTEXATTRIB2FVARBPROC glVertexAttrib2fvARB;
PFNGLVERTEXATTRIB2FVPROC glVertexAttrib2fv;
PFNGLVERTEXATTRIB2SARBPROC glVertexAttrib2sARB;
PFNGLVERTEXATTRIB2SPROC glVertexAttrib2s;
PFNGLVERTEXATTRIB2SVARBPROC glVertexAttrib2svARB;
PFNGLVERTEXATTRIB2SVPROC glVertexAttrib2sv;
PFNGLVERTEXATTRIB3DARBPROC glVertexAttrib3dARB;
PFNGLVERTEXATTRIB3DPROC glVertexAttrib3d;
PFNGLVERTEXATTRIB3DVARBPROC glVertexAttrib3dvARB;
PFNGLVERTEXATTRIB3DVPROC glVertexAttrib3dv;
PFNGLVERTEXATTRIB3FARBPROC glVertexAttrib3fARB;
PFNGLVERTEXATTRIB3FPROC glVertexAttrib3f;
PFNGLVERTEXATTRIB3FVARBPROC glVertexAttrib3fvARB;
PFNGLVERTEXATTRIB3FVPROC glVertexAttrib3fv;
PFNGLVERTEXATTRIB3SARBPROC glVertexAttrib3sARB;
PFNGLVERTEXATTRIB3SPROC glVertexAttrib3s;
PFNGLVERTEXATTRIB3SVARBPROC glVertexAttrib3svARB;
PFNGLVERTEXATTRIB3SVPROC glVertexAttrib3sv;
PFNGLVERTEXATTRIB4BVARBPROC glVertexAttrib4bvARB;
PFNGLVERTEXATTRIB4BVPROC glVertexAttrib4bv;
PFNGLVERTEXATTRIB4DARBPROC glVertexAttrib4dARB;
PFNGLVERTEXATTRIB4DPROC glVertexAttrib4d;
PFNGLVERTEXATTRIB4DVARBPROC glVertexAttrib4dvARB;
PFNGLVERTEXATTRIB4DVPROC glVertexAttrib4dv;
PFNGLVERTEXATTRIB4FARBPROC glVertexAttrib4fARB;
PFNGLVERTEXATTRIB4FPROC glVertexAttrib4f;
PFNGLVERTEXATTRIB4FVARBPROC glVertexAttrib4fvARB;
PFNGLVERTEXATTRIB4FVPROC glVertexAttrib4fv;
PFNGLVERTEXATTRIB4IVARBPROC glVertexAttrib4ivARB;
PFNGLVERTEXATTRIB4IVPROC glVertexAttrib4iv;
PFNGLVERTEXATTRIB4NBVARBPROC glVertexAttrib4NbvARB;
PFNGLVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv;
PFNGLVERTEXATTRIB4NIVARBPROC glVertexAttrib4NivARB;
PFNGLVERTEXATTRIB4NIVPROC glVertexAttrib4Niv;
PFNGLVERTEXATTRIB4NSVARBPROC glVertexAttrib4NsvARB;
PFNGLVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv;
PFNGLVERTEXATTRIB4NUBARBPROC glVertexAttrib4NubARB;
PFNGLVERTEXATTRIB4NUBPROC glVertexAttrib4Nub;
PFNGLVERTEXATTRIB4NUBVARBPROC glVertexAttrib4NubvARB;
PFNGLVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv;
PFNGLVERTEXATTRIB4NUIVARBPROC glVertexAttrib4NuivARB;
PFNGLVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv;
PFNGLVERTEXATTRIB4NUSVARBPROC glVertexAttrib4NusvARB;
PFNGLVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv;
PFNGLVERTEXATTRIB4SARBPROC glVertexAttrib4sARB;
PFNGLVERTEXATTRIB4SPROC glVertexAttrib4s;
PFNGLVERTEXATTRIB4SVARBPROC glVertexAttrib4svARB;
PFNGLVERTEXATTRIB4SVPROC glVertexAttrib4sv;
PFNGLVERTEXATTRIB4UBVARBPROC glVertexAttrib4ubvARB;
PFNGLVERTEXATTRIB4UBVPROC glVertexAttrib4ubv;
PFNGLVERTEXATTRIB4UIVARBPROC glVertexAttrib4uivARB;
PFNGLVERTEXATTRIB4UIVPROC glVertexAttrib4uiv;
PFNGLVERTEXATTRIB4USVARBPROC glVertexAttrib4usvARB;
PFNGLVERTEXATTRIB4USVPROC glVertexAttrib4usv;
PFNGLVERTEXATTRIBDIVISORARBPROC glVertexAttribDivisorARB;
PFNGLVERTEXATTRIBDIVISORPROC glVertexAttribDivisor;
PFNGLVERTEXATTRIBI1IEXTPROC glVertexAttribI1iEXT;
PFNGLVERTEXATTRIBI1IPROC glVertexAttribI1i;
PFNGLVERTEXATTRIBI1IVEXTPROC glVertexAttribI1ivEXT;
PFNGLVERTEXATTRIBI1IVPROC glVertexAttribI1iv;
PFNGLVERTEXATTRIBI1UIEXTPROC glVertexAttribI1uiEXT;
PFNGLVERTEXATTRIBI1UIPROC glVertexAttribI1ui;
PFNGLVERTEXATTRIBI1UIVEXTPROC glVertexAttribI1uivEXT;
PFNGLVERTEXATTRIBI1UIVPROC glVertexAttribI1uiv;
PFNGLVERTEXATTRIBI2IEXTPROC glVertexAttribI2iEXT;
PFNGLVERTEXATTRIBI2IPROC glVertexAttribI2i;
PFNGLVERTEXATTRIBI2IVEXTPROC glVertexAttribI2ivEXT;
PFNGLVERTEXATTRIBI2IVPROC glVertexAttribI2iv;
PFNGLVERTEXATTRIBI2UIEXTPROC glVertexAttribI2uiEXT;
PFNGLVERTEXATTRIBI2UIPROC glVertexAttribI2ui;
PFNGLVERTEXATTRIBI2UIVEXTPROC glVertexAttribI2uivEXT;
PFNGLVERTEXATTRIBI2UIVPROC glVertexAttribI2uiv;
PFNGLVERTEXATTRIBI3IEXTPROC glVertexAttribI3iEXT;
PFNGLVERTEXATTRIBI3IPROC glVertexAttribI3i;
PFNGLVERTEXATTRIBI3IVEXTPROC glVertexAttribI3ivEXT;
PFNGLVERTEXATTRIBI3IVPROC glVertexAttribI3iv;
PFNGLVERTEXATTRIBI3UIEXTPROC glVertexAttribI3uiEXT;
PFNGLVERTEXATTRIBI3UIPROC glVertexAttribI3ui;
PFNGLVERTEXATTRIBI3UIVEXTPROC glVertexAttribI3uivEXT;
PFNGLVERTEXATTRIBI3UIVPROC glVertexAttribI3uiv;
PFNGLVERTEXATTRIBI4BVEXTPROC glVertexAttribI4bvEXT;
PFNGLVERTEXATTRIBI4BVPROC glVertexAttribI4bv;
PFNGLVERTEXATTRIBI4IEXTPROC glVertexAttribI4iEXT;
PFNGLVERTEXATTRIBI4IPROC glVertexAttribI4i;
PFNGLVERTEXATTRIBI4IVEXTPROC glVertexAttribI4ivEXT;
PFNGLVERTEXATTRIBI4IVPROC glVertexAttribI4iv;
PFNGLVERTEXATTRIBI4SVEXTPROC glVertexAttribI4svEXT;
PFNGLVERTEXATTRIBI4SVPROC glVertexAttribI4sv;
PFNGLVERTEXATTRIBI4UBVEXTPROC glVertexAttribI4ubvEXT;
PFNGLVERTEXATTRIBI4UBVPROC glVertexAttribI4ubv;
PFNGLVERTEXATTRIBI4UIEXTPROC glVertexAttribI4uiEXT;
PFNGLVERTEXATTRIBI4UIPROC glVertexAttribI4ui;
PFNGLVERTEXATTRIBI4UIVEXTPROC glVertexAttribI4uivEXT;
PFNGLVERTEXATTRIBI4UIVPROC glVertexAttribI4uiv;
PFNGLVERTEXATTRIBI4USVEXTPROC glVertexAttribI4usvEXT;
PFNGLVERTEXATTRIBI4USVPROC glVertexAttribI4usv;
PFNGLVERTEXATTRIBIPOINTEREXTPROC glVertexAttribIPointerEXT;
PFNGLVERTEXATTRIBIPOINTERPROC glVertexAttribIPointer;
PFNGLVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
PFNGLVERTEXATTRIBL1DPROC glVertexAttribL1d;
PFNGLVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
PFNGLVERTEXATTRIBL1DVPROC glVertexAttribL1dv;
PFNGLVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
PFNGLVERTEXATTRIBL2DPROC glVertexAttribL2d;
PFNGLVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
PFNGLVERTEXATTRIBL2DVPROC glVertexAttribL2dv;
PFNGLVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
PFNGLVERTEXATTRIBL3DPROC glVertexAttribL3d;
PFNGLVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
PFNGLVERTEXATTRIBL3DVPROC glVertexAttribL3dv;
PFNGLVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
PFNGLVERTEXATTRIBL4DPROC glVertexAttribL4d;
PFNGLVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
PFNGLVERTEXATTRIBL4DVPROC glVertexAttribL4dv;
PFNGLVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
PFNGLVERTEXATTRIBLPOINTERPROC glVertexAttribLPointer;
PFNGLVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
PFNGLVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
PFNGLVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
PFNGLVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
PFNGLVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
PFNGLVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
PFNGLVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
PFNGLVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
PFNGLVERTEXATTRIBPOINTERARBPROC glVertexAttribPointerARB;
PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
PFNGLVERTEXBLENDARBPROC glVertexBlendARB;
PFNGLVERTEXP2UIPROC glVertexP2ui;
PFNGLVERTEXP2UIVPROC glVertexP2uiv;
PFNGLVERTEXP3UIPROC glVertexP3ui;
PFNGLVERTEXP3UIVPROC glVertexP3uiv;
PFNGLVERTEXP4UIPROC glVertexP4ui;
PFNGLVERTEXP4UIVPROC glVertexP4uiv;
PFNGLVERTEXPOINTEREXTPROC glVertexPointerEXT;
PFNGLVERTEXWEIGHTFEXTPROC glVertexWeightfEXT;
PFNGLVERTEXWEIGHTFVEXTPROC glVertexWeightfvEXT;
PFNGLVERTEXWEIGHTPOINTEREXTPROC glVertexWeightPointerEXT;
PFNGLVIEWPORTARRAYVPROC glViewportArrayv;
PFNGLVIEWPORTINDEXEDFPROC glViewportIndexedf;
PFNGLVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
PFNGLWAITSYNCPROC glWaitSync;
PFNGLWEIGHTBVARBPROC glWeightbvARB;
PFNGLWEIGHTDVARBPROC glWeightdvARB;
PFNGLWEIGHTFVARBPROC glWeightfvARB;
PFNGLWEIGHTIVARBPROC glWeightivARB;
PFNGLWEIGHTPOINTERARBPROC glWeightPointerARB;
PFNGLWEIGHTSVARBPROC glWeightsvARB;
PFNGLWEIGHTUBVARBPROC glWeightubvARB;
PFNGLWEIGHTUIVARBPROC glWeightuivARB;
PFNGLWEIGHTUSVARBPROC glWeightusvARB;
PFNGLWINDOWPOS2DARBPROC glWindowPos2dARB;
PFNGLWINDOWPOS2DPROC glWindowPos2d;
PFNGLWINDOWPOS2DVARBPROC glWindowPos2dvARB;
PFNGLWINDOWPOS2DVPROC glWindowPos2dv;
PFNGLWINDOWPOS2FARBPROC glWindowPos2fARB;
PFNGLWINDOWPOS2FPROC glWindowPos2f;
PFNGLWINDOWPOS2FVARBPROC glWindowPos2fvARB;
PFNGLWINDOWPOS2FVPROC glWindowPos2fv;
PFNGLWINDOWPOS2IARBPROC glWindowPos2iARB;
PFNGLWINDOWPOS2IPROC glWindowPos2i;
PFNGLWINDOWPOS2IVARBPROC glWindowPos2ivARB;
PFNGLWINDOWPOS2IVPROC glWindowPos2iv;
PFNGLWINDOWPOS2SARBPROC glWindowPos2sARB;
PFNGLWINDOWPOS2SPROC glWindowPos2s;
PFNGLWINDOWPOS2SVARBPROC glWindowPos2svARB;
PFNGLWINDOWPOS2SVPROC glWindowPos2sv;
PFNGLWINDOWPOS3DARBPROC glWindowPos3dARB;
PFNGLWINDOWPOS3DPROC glWindowPos3d;
PFNGLWINDOWPOS3DVARBPROC glWindowPos3dvARB;
PFNGLWINDOWPOS3DVPROC glWindowPos3dv;
PFNGLWINDOWPOS3FARBPROC glWindowPos3fARB;
PFNGLWINDOWPOS3FPROC glWindowPos3f;
PFNGLWINDOWPOS3FVARBPROC glWindowPos3fvARB;
PFNGLWINDOWPOS3FVPROC glWindowPos3fv;
PFNGLWINDOWPOS3IARBPROC glWindowPos3iARB;
PFNGLWINDOWPOS3IPROC glWindowPos3i;
PFNGLWINDOWPOS3IVARBPROC glWindowPos3ivARB;
PFNGLWINDOWPOS3IVPROC glWindowPos3iv;
PFNGLWINDOWPOS3SARBPROC glWindowPos3sARB;
PFNGLWINDOWPOS3SPROC glWindowPos3s;
PFNGLWINDOWPOS3SVARBPROC glWindowPos3svARB;
PFNGLWINDOWPOS3SVPROC glWindowPos3sv;
PFNGLWRITEMASKEXTPROC glWriteMaskEXT;
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC wglBindDisplayColorTableEXT;
PFNWGLBINDTEXIMAGEARBPROC wglBindTexImageARB;
PFNWGLCHOOSEPIXELFORMATARBPROC wglChoosePixelFormatARB;
PFNWGLCHOOSEPIXELFORMATEXTPROC wglChoosePixelFormatEXT;
PFNWGLCREATEBUFFERREGIONARBPROC wglCreateBufferRegionARB;
PFNWGLCREATECONTEXTATTRIBSARBPROC wglCreateContextAttribsARB;
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC wglCreateDisplayColorTableEXT;
PFNWGLCREATEPBUFFERARBPROC wglCreatePbufferARB;
PFNWGLCREATEPBUFFEREXTPROC wglCreatePbufferEXT;
PFNWGLDELETEBUFFERREGIONARBPROC wglDeleteBufferRegionARB;
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC wglDestroyDisplayColorTableEXT;
PFNWGLDESTROYPBUFFERARBPROC wglDestroyPbufferARB;
PFNWGLDESTROYPBUFFEREXTPROC wglDestroyPbufferEXT;
PFNWGLGETCURRENTREADDCARBPROC wglGetCurrentReadDCARB;
PFNWGLGETCURRENTREADDCEXTPROC wglGetCurrentReadDCEXT;
PFNWGLGETEXTENSIONSSTRINGARBPROC wglGetExtensionsStringARB;
PFNWGLGETEXTENSIONSSTRINGEXTPROC wglGetExtensionsStringEXT;
PFNWGLGETPBUFFERDCARBPROC wglGetPbufferDCARB;
PFNWGLGETPBUFFERDCEXTPROC wglGetPbufferDCEXT;
PFNWGLGETPIXELFORMATATTRIBFVARBPROC wglGetPixelFormatAttribfvARB;
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC wglGetPixelFormatAttribfvEXT;
PFNWGLGETPIXELFORMATATTRIBIVARBPROC wglGetPixelFormatAttribivARB;
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC wglGetPixelFormatAttribivEXT;
PFNWGLGETSWAPINTERVALEXTPROC wglGetSwapIntervalEXT;
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC wglLoadDisplayColorTableEXT;
PFNWGLMAKECONTEXTCURRENTARBPROC wglMakeContextCurrentARB;
PFNWGLMAKECONTEXTCURRENTEXTPROC wglMakeContextCurrentEXT;
PFNWGLQUERYPBUFFERARBPROC wglQueryPbufferARB;
PFNWGLQUERYPBUFFEREXTPROC wglQueryPbufferEXT;
PFNWGLRELEASEPBUFFERDCARBPROC wglReleasePbufferDCARB;
PFNWGLRELEASEPBUFFERDCEXTPROC wglReleasePbufferDCEXT;
PFNWGLRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
PFNWGLRESTOREBUFFERREGIONARBPROC wglRestoreBufferRegionARB;
PFNWGLSAVEBUFFERREGIONARBPROC wglSaveBufferRegionARB;
PFNWGLSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
PFNWGLSWAPINTERVALEXTPROC wglSwapIntervalEXT;

void LoadExtensionsCurrentContext() {
	glActiveProgramEXT = (PFNGLACTIVEPROGRAMEXTPROC)wglGetProcAddress("glActiveProgramEXT");
	glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC)wglGetProcAddress("glActiveShaderProgram");
	glActiveStencilFaceEXT = (PFNGLACTIVESTENCILFACEEXTPROC)wglGetProcAddress("glActiveStencilFaceEXT");
	glActiveTexture = (PFNGLACTIVETEXTUREPROC)wglGetProcAddress("glActiveTexture");
	glActiveTextureARB = (PFNGLACTIVETEXTUREARBPROC)wglGetProcAddress("glActiveTextureARB");
	glApplyTextureEXT = (PFNGLAPPLYTEXTUREEXTPROC)wglGetProcAddress("glApplyTextureEXT");
	glAreTexturesResidentEXT = (PFNGLARETEXTURESRESIDENTEXTPROC)wglGetProcAddress("glAreTexturesResidentEXT");
	glArrayElementEXT = (PFNGLARRAYELEMENTEXTPROC)wglGetProcAddress("glArrayElementEXT");
	glAttachObjectARB = (PFNGLATTACHOBJECTARBPROC)wglGetProcAddress("glAttachObjectARB");
	glAttachShader = (PFNGLATTACHSHADERPROC)wglGetProcAddress("glAttachShader");
	glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC)wglGetProcAddress("glBeginConditionalRender");
	glBeginQuery = (PFNGLBEGINQUERYPROC)wglGetProcAddress("glBeginQuery");
	glBeginQueryARB = (PFNGLBEGINQUERYARBPROC)wglGetProcAddress("glBeginQueryARB");
	glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC)wglGetProcAddress("glBeginQueryIndexed");
	glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC)wglGetProcAddress("glBeginTransformFeedback");
	glBeginTransformFeedbackEXT = (PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)wglGetProcAddress("glBeginTransformFeedbackEXT");
	glBeginVertexShaderEXT = (PFNGLBEGINVERTEXSHADEREXTPROC)wglGetProcAddress("glBeginVertexShaderEXT");
	glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)wglGetProcAddress("glBindAttribLocation");
	glBindAttribLocationARB = (PFNGLBINDATTRIBLOCATIONARBPROC)wglGetProcAddress("glBindAttribLocationARB");
	glBindBuffer = (PFNGLBINDBUFFERPROC)wglGetProcAddress("glBindBuffer");
	glBindBufferARB = (PFNGLBINDBUFFERARBPROC)wglGetProcAddress("glBindBufferARB");
	glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)wglGetProcAddress("glBindBufferBase");
	glBindBufferBaseEXT = (PFNGLBINDBUFFERBASEEXTPROC)wglGetProcAddress("glBindBufferBaseEXT");
	glBindBufferOffsetEXT = (PFNGLBINDBUFFEROFFSETEXTPROC)wglGetProcAddress("glBindBufferOffsetEXT");
	glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)wglGetProcAddress("glBindBufferRange");
	glBindBufferRangeEXT = (PFNGLBINDBUFFERRANGEEXTPROC)wglGetProcAddress("glBindBufferRangeEXT");
	glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC)wglGetProcAddress("glBindFragDataLocation");
	glBindFragDataLocationEXT = (PFNGLBINDFRAGDATALOCATIONEXTPROC)wglGetProcAddress("glBindFragDataLocationEXT");
	glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)wglGetProcAddress("glBindFragDataLocationIndexed");
	glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)wglGetProcAddress("glBindFramebuffer");
	glBindFramebufferEXT = (PFNGLBINDFRAMEBUFFEREXTPROC)wglGetProcAddress("glBindFramebufferEXT");
	glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC)wglGetProcAddress("glBindImageTexture");
	glBindImageTextureEXT = (PFNGLBINDIMAGETEXTUREEXTPROC)wglGetProcAddress("glBindImageTextureEXT");
	glBindLightParameterEXT = (PFNGLBINDLIGHTPARAMETEREXTPROC)wglGetProcAddress("glBindLightParameterEXT");
	glBindMaterialParameterEXT = (PFNGLBINDMATERIALPARAMETEREXTPROC)wglGetProcAddress("glBindMaterialParameterEXT");
	glBindMultiTextureEXT = (PFNGLBINDMULTITEXTUREEXTPROC)wglGetProcAddress("glBindMultiTextureEXT");
	glBindParameterEXT = (PFNGLBINDPARAMETEREXTPROC)wglGetProcAddress("glBindParameterEXT");
	glBindProgramARB = (PFNGLBINDPROGRAMARBPROC)wglGetProcAddress("glBindProgramARB");
	glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC)wglGetProcAddress("glBindProgramPipeline");
	glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)wglGetProcAddress("glBindRenderbuffer");
	glBindRenderbufferEXT = (PFNGLBINDRENDERBUFFEREXTPROC)wglGetProcAddress("glBindRenderbufferEXT");
	glBindSampler = (PFNGLBINDSAMPLERPROC)wglGetProcAddress("glBindSampler");
	glBindTexGenParameterEXT = (PFNGLBINDTEXGENPARAMETEREXTPROC)wglGetProcAddress("glBindTexGenParameterEXT");
	glBindTextureEXT = (PFNGLBINDTEXTUREEXTPROC)wglGetProcAddress("glBindTextureEXT");
	glBindTextureUnitParameterEXT = (PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)wglGetProcAddress("glBindTextureUnitParameterEXT");
	glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC)wglGetProcAddress("glBindTransformFeedback");
	glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)wglGetProcAddress("glBindVertexArray");
	glBindVertexShaderEXT = (PFNGLBINDVERTEXSHADEREXTPROC)wglGetProcAddress("glBindVertexShaderEXT");
	glBinormalPointerEXT = (PFNGLBINORMALPOINTEREXTPROC)wglGetProcAddress("glBinormalPointerEXT");
	glBlendColor = (PFNGLBLENDCOLORPROC)wglGetProcAddress("glBlendColor");
	glBlendColorEXT = (PFNGLBLENDCOLOREXTPROC)wglGetProcAddress("glBlendColorEXT");
	glBlendEquation = (PFNGLBLENDEQUATIONPROC)wglGetProcAddress("glBlendEquation");
	glBlendEquation = (PFNGLBLENDEQUATIONPROC)wglGetProcAddress("glBlendEquation");
	glBlendEquationEXT = (PFNGLBLENDEQUATIONEXTPROC)wglGetProcAddress("glBlendEquationEXT");
	glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)wglGetProcAddress("glBlendEquationi");
	glBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC)wglGetProcAddress("glBlendEquationiARB");
	glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)wglGetProcAddress("glBlendEquationSeparate");
	glBlendEquationSeparateEXT = (PFNGLBLENDEQUATIONSEPARATEEXTPROC)wglGetProcAddress("glBlendEquationSeparateEXT");
	glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC)wglGetProcAddress("glBlendEquationSeparatei");
	glBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC)wglGetProcAddress("glBlendEquationSeparateiARB");
	glBlendFunci = (PFNGLBLENDFUNCIPROC)wglGetProcAddress("glBlendFunci");
	glBlendFunciARB = (PFNGLBLENDFUNCIARBPROC)wglGetProcAddress("glBlendFunciARB");
	glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)wglGetProcAddress("glBlendFuncSeparate");
	glBlendFuncSeparateEXT = (PFNGLBLENDFUNCSEPARATEEXTPROC)wglGetProcAddress("glBlendFuncSeparateEXT");
	glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)wglGetProcAddress("glBlendFuncSeparatei");
	glBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC)wglGetProcAddress("glBlendFuncSeparateiARB");
	glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)wglGetProcAddress("glBlitFramebuffer");
	glBlitFramebufferEXT = (PFNGLBLITFRAMEBUFFEREXTPROC)wglGetProcAddress("glBlitFramebufferEXT");
	glBufferData = (PFNGLBUFFERDATAPROC)wglGetProcAddress("glBufferData");
	glBufferDataARB = (PFNGLBUFFERDATAARBPROC)wglGetProcAddress("glBufferDataARB");
	glBufferSubData = (PFNGLBUFFERSUBDATAPROC)wglGetProcAddress("glBufferSubData");
	glBufferSubDataARB = (PFNGLBUFFERSUBDATAARBPROC)wglGetProcAddress("glBufferSubDataARB");
	glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)wglGetProcAddress("glCheckFramebufferStatus");
	glCheckFramebufferStatusEXT = (PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)wglGetProcAddress("glCheckFramebufferStatusEXT");
	glCheckNamedFramebufferStatusEXT = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)wglGetProcAddress("glCheckNamedFramebufferStatusEXT");
	glClampColor = (PFNGLCLAMPCOLORPROC)wglGetProcAddress("glClampColor");
	glClampColorARB = (PFNGLCLAMPCOLORARBPROC)wglGetProcAddress("glClampColorARB");
	glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)wglGetProcAddress("glClearBufferfi");
	glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)wglGetProcAddress("glClearBufferfv");
	glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)wglGetProcAddress("glClearBufferiv");
	glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)wglGetProcAddress("glClearBufferuiv");
	glClearColorIiEXT = (PFNGLCLEARCOLORIIEXTPROC)wglGetProcAddress("glClearColorIiEXT");
	glClearColorIuiEXT = (PFNGLCLEARCOLORIUIEXTPROC)wglGetProcAddress("glClearColorIuiEXT");
	glClearDepthf = (PFNGLCLEARDEPTHFPROC)wglGetProcAddress("glClearDepthf");
	glClientActiveTexture = (PFNGLCLIENTACTIVETEXTUREPROC)wglGetProcAddress("glClientActiveTexture");
	glClientActiveTextureARB = (PFNGLCLIENTACTIVETEXTUREARBPROC)wglGetProcAddress("glClientActiveTextureARB");
	glClientAttribDefaultEXT = (PFNGLCLIENTATTRIBDEFAULTEXTPROC)wglGetProcAddress("glClientAttribDefaultEXT");
	glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)wglGetProcAddress("glClientWaitSync");
	glColorMaski = (PFNGLCOLORMASKIPROC)wglGetProcAddress("glColorMaski");
	glColorMaskIndexedEXT = (PFNGLCOLORMASKINDEXEDEXTPROC)wglGetProcAddress("glColorMaskIndexedEXT");
	glColorP3ui = (PFNGLCOLORP3UIPROC)wglGetProcAddress("glColorP3ui");
	glColorP3uiv = (PFNGLCOLORP3UIVPROC)wglGetProcAddress("glColorP3uiv");
	glColorP4ui = (PFNGLCOLORP4UIPROC)wglGetProcAddress("glColorP4ui");
	glColorP4uiv = (PFNGLCOLORP4UIVPROC)wglGetProcAddress("glColorP4uiv");
	glColorPointerEXT = (PFNGLCOLORPOINTEREXTPROC)wglGetProcAddress("glColorPointerEXT");
	glColorSubTable = (PFNGLCOLORSUBTABLEPROC)wglGetProcAddress("glColorSubTable");
	glColorSubTableEXT = (PFNGLCOLORSUBTABLEEXTPROC)wglGetProcAddress("glColorSubTableEXT");
	glColorTable = (PFNGLCOLORTABLEPROC)wglGetProcAddress("glColorTable");
	glColorTableEXT = (PFNGLCOLORTABLEEXTPROC)wglGetProcAddress("glColorTableEXT");
	glColorTableParameterfv = (PFNGLCOLORTABLEPARAMETERFVPROC)wglGetProcAddress("glColorTableParameterfv");
	glColorTableParameteriv = (PFNGLCOLORTABLEPARAMETERIVPROC)wglGetProcAddress("glColorTableParameteriv");
	glCompileShader = (PFNGLCOMPILESHADERPROC)wglGetProcAddress("glCompileShader");
	glCompileShaderARB = (PFNGLCOMPILESHADERARBPROC)wglGetProcAddress("glCompileShaderARB");
	glCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC)wglGetProcAddress("glCompileShaderIncludeARB");
	glCompressedMultiTexImage1DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)wglGetProcAddress("glCompressedMultiTexImage1DEXT");
	glCompressedMultiTexImage2DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)wglGetProcAddress("glCompressedMultiTexImage2DEXT");
	glCompressedMultiTexImage3DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)wglGetProcAddress("glCompressedMultiTexImage3DEXT");
	glCompressedMultiTexSubImage1DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)wglGetProcAddress("glCompressedMultiTexSubImage1DEXT");
	glCompressedMultiTexSubImage2DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)wglGetProcAddress("glCompressedMultiTexSubImage2DEXT");
	glCompressedMultiTexSubImage3DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)wglGetProcAddress("glCompressedMultiTexSubImage3DEXT");
	glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)wglGetProcAddress("glCompressedTexImage1D");
	glCompressedTexImage1DARB = (PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)wglGetProcAddress("glCompressedTexImage1DARB");
	glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)wglGetProcAddress("glCompressedTexImage2D");
	glCompressedTexImage2DARB = (PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)wglGetProcAddress("glCompressedTexImage2DARB");
	glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)wglGetProcAddress("glCompressedTexImage3D");
	glCompressedTexImage3DARB = (PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)wglGetProcAddress("glCompressedTexImage3DARB");
	glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)wglGetProcAddress("glCompressedTexSubImage1D");
	glCompressedTexSubImage1DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)wglGetProcAddress("glCompressedTexSubImage1DARB");
	glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)wglGetProcAddress("glCompressedTexSubImage2D");
	glCompressedTexSubImage2DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)wglGetProcAddress("glCompressedTexSubImage2DARB");
	glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)wglGetProcAddress("glCompressedTexSubImage3D");
	glCompressedTexSubImage3DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)wglGetProcAddress("glCompressedTexSubImage3DARB");
	glCompressedTextureImage1DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)wglGetProcAddress("glCompressedTextureImage1DEXT");
	glCompressedTextureImage2DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)wglGetProcAddress("glCompressedTextureImage2DEXT");
	glCompressedTextureImage3DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)wglGetProcAddress("glCompressedTextureImage3DEXT");
	glCompressedTextureSubImage1DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)wglGetProcAddress("glCompressedTextureSubImage1DEXT");
	glCompressedTextureSubImage2DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)wglGetProcAddress("glCompressedTextureSubImage2DEXT");
	glCompressedTextureSubImage3DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)wglGetProcAddress("glCompressedTextureSubImage3DEXT");
	glConvolutionFilter1D = (PFNGLCONVOLUTIONFILTER1DPROC)wglGetProcAddress("glConvolutionFilter1D");
	glConvolutionFilter1DEXT = (PFNGLCONVOLUTIONFILTER1DEXTPROC)wglGetProcAddress("glConvolutionFilter1DEXT");
	glConvolutionFilter2D = (PFNGLCONVOLUTIONFILTER2DPROC)wglGetProcAddress("glConvolutionFilter2D");
	glConvolutionFilter2DEXT = (PFNGLCONVOLUTIONFILTER2DEXTPROC)wglGetProcAddress("glConvolutionFilter2DEXT");
	glConvolutionParameterf = (PFNGLCONVOLUTIONPARAMETERFPROC)wglGetProcAddress("glConvolutionParameterf");
	glConvolutionParameterfEXT = (PFNGLCONVOLUTIONPARAMETERFEXTPROC)wglGetProcAddress("glConvolutionParameterfEXT");
	glConvolutionParameterfv = (PFNGLCONVOLUTIONPARAMETERFVPROC)wglGetProcAddress("glConvolutionParameterfv");
	glConvolutionParameterfvEXT = (PFNGLCONVOLUTIONPARAMETERFVEXTPROC)wglGetProcAddress("glConvolutionParameterfvEXT");
	glConvolutionParameteri = (PFNGLCONVOLUTIONPARAMETERIPROC)wglGetProcAddress("glConvolutionParameteri");
	glConvolutionParameteriEXT = (PFNGLCONVOLUTIONPARAMETERIEXTPROC)wglGetProcAddress("glConvolutionParameteriEXT");
	glConvolutionParameteriv = (PFNGLCONVOLUTIONPARAMETERIVPROC)wglGetProcAddress("glConvolutionParameteriv");
	glConvolutionParameterivEXT = (PFNGLCONVOLUTIONPARAMETERIVEXTPROC)wglGetProcAddress("glConvolutionParameterivEXT");
	glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC)wglGetProcAddress("glCopyBufferSubData");
	glCopyColorSubTable = (PFNGLCOPYCOLORSUBTABLEPROC)wglGetProcAddress("glCopyColorSubTable");
	glCopyColorSubTableEXT = (PFNGLCOPYCOLORSUBTABLEEXTPROC)wglGetProcAddress("glCopyColorSubTableEXT");
	glCopyColorTable = (PFNGLCOPYCOLORTABLEPROC)wglGetProcAddress("glCopyColorTable");
	glCopyConvolutionFilter1D = (PFNGLCOPYCONVOLUTIONFILTER1DPROC)wglGetProcAddress("glCopyConvolutionFilter1D");
	glCopyConvolutionFilter1DEXT = (PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)wglGetProcAddress("glCopyConvolutionFilter1DEXT");
	glCopyConvolutionFilter2D = (PFNGLCOPYCONVOLUTIONFILTER2DPROC)wglGetProcAddress("glCopyConvolutionFilter2D");
	glCopyConvolutionFilter2DEXT = (PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)wglGetProcAddress("glCopyConvolutionFilter2DEXT");
	glCopyMultiTexImage1DEXT = (PFNGLCOPYMULTITEXIMAGE1DEXTPROC)wglGetProcAddress("glCopyMultiTexImage1DEXT");
	glCopyMultiTexImage2DEXT = (PFNGLCOPYMULTITEXIMAGE2DEXTPROC)wglGetProcAddress("glCopyMultiTexImage2DEXT");
	glCopyMultiTexSubImage1DEXT = (PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)wglGetProcAddress("glCopyMultiTexSubImage1DEXT");
	glCopyMultiTexSubImage2DEXT = (PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)wglGetProcAddress("glCopyMultiTexSubImage2DEXT");
	glCopyMultiTexSubImage3DEXT = (PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)wglGetProcAddress("glCopyMultiTexSubImage3DEXT");
	glCopyTexImage1DEXT = (PFNGLCOPYTEXIMAGE1DEXTPROC)wglGetProcAddress("glCopyTexImage1DEXT");
	glCopyTexImage2DEXT = (PFNGLCOPYTEXIMAGE2DEXTPROC)wglGetProcAddress("glCopyTexImage2DEXT");
	glCopyTexSubImage1DEXT = (PFNGLCOPYTEXSUBIMAGE1DEXTPROC)wglGetProcAddress("glCopyTexSubImage1DEXT");
	glCopyTexSubImage2DEXT = (PFNGLCOPYTEXSUBIMAGE2DEXTPROC)wglGetProcAddress("glCopyTexSubImage2DEXT");
	glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC)wglGetProcAddress("glCopyTexSubImage3D");
	glCopyTexSubImage3DEXT = (PFNGLCOPYTEXSUBIMAGE3DEXTPROC)wglGetProcAddress("glCopyTexSubImage3DEXT");
	glCopyTextureImage1DEXT = (PFNGLCOPYTEXTUREIMAGE1DEXTPROC)wglGetProcAddress("glCopyTextureImage1DEXT");
	glCopyTextureImage2DEXT = (PFNGLCOPYTEXTUREIMAGE2DEXTPROC)wglGetProcAddress("glCopyTextureImage2DEXT");
	glCopyTextureSubImage1DEXT = (PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)wglGetProcAddress("glCopyTextureSubImage1DEXT");
	glCopyTextureSubImage2DEXT = (PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)wglGetProcAddress("glCopyTextureSubImage2DEXT");
	glCopyTextureSubImage3DEXT = (PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)wglGetProcAddress("glCopyTextureSubImage3DEXT");
	glCreateProgram = (PFNGLCREATEPROGRAMPROC)wglGetProcAddress("glCreateProgram");
	glCreateProgramObjectARB = (PFNGLCREATEPROGRAMOBJECTARBPROC)wglGetProcAddress("glCreateProgramObjectARB");
	glCreateShader = (PFNGLCREATESHADERPROC)wglGetProcAddress("glCreateShader");
	glCreateShaderObjectARB = (PFNGLCREATESHADEROBJECTARBPROC)wglGetProcAddress("glCreateShaderObjectARB");
	glCreateShaderProgramEXT = (PFNGLCREATESHADERPROGRAMEXTPROC)wglGetProcAddress("glCreateShaderProgramEXT");
	glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC)wglGetProcAddress("glCreateShaderProgramv");
	glCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC)wglGetProcAddress("glCreateSyncFromCLeventARB");
	glCullParameterdvEXT = (PFNGLCULLPARAMETERDVEXTPROC)wglGetProcAddress("glCullParameterdvEXT");
	glCullParameterfvEXT = (PFNGLCULLPARAMETERFVEXTPROC)wglGetProcAddress("glCullParameterfvEXT");
	glCurrentPaletteMatrixARB = (PFNGLCURRENTPALETTEMATRIXARBPROC)wglGetProcAddress("glCurrentPaletteMatrixARB");
	glDebugMessageCallbackARB = (PFNGLDEBUGMESSAGECALLBACKARBPROC)wglGetProcAddress("glDebugMessageCallbackARB");
	glDebugMessageControlARB = (PFNGLDEBUGMESSAGECONTROLARBPROC)wglGetProcAddress("glDebugMessageControlARB");
	glDebugMessageInsertARB = (PFNGLDEBUGMESSAGEINSERTARBPROC)wglGetProcAddress("glDebugMessageInsertARB");
	glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)wglGetProcAddress("glDeleteBuffers");
	glDeleteBuffersARB = (PFNGLDELETEBUFFERSARBPROC)wglGetProcAddress("glDeleteBuffersARB");
	glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)wglGetProcAddress("glDeleteFramebuffers");
	glDeleteFramebuffersEXT = (PFNGLDELETEFRAMEBUFFERSEXTPROC)wglGetProcAddress("glDeleteFramebuffersEXT");
	glDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC)wglGetProcAddress("glDeleteNamedStringARB");
	glDeleteObjectARB = (PFNGLDELETEOBJECTARBPROC)wglGetProcAddress("glDeleteObjectARB");
	glDeleteProgram = (PFNGLDELETEPROGRAMPROC)wglGetProcAddress("glDeleteProgram");
	glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC)wglGetProcAddress("glDeleteProgramPipelines");
	glDeleteProgramsARB = (PFNGLDELETEPROGRAMSARBPROC)wglGetProcAddress("glDeleteProgramsARB");
	glDeleteQueries = (PFNGLDELETEQUERIESPROC)wglGetProcAddress("glDeleteQueries");
	glDeleteQueriesARB = (PFNGLDELETEQUERIESARBPROC)wglGetProcAddress("glDeleteQueriesARB");
	glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)wglGetProcAddress("glDeleteRenderbuffers");
	glDeleteRenderbuffersEXT = (PFNGLDELETERENDERBUFFERSEXTPROC)wglGetProcAddress("glDeleteRenderbuffersEXT");
	glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)wglGetProcAddress("glDeleteSamplers");
	glDeleteShader = (PFNGLDELETESHADERPROC)wglGetProcAddress("glDeleteShader");
	glDeleteSync = (PFNGLDELETESYNCPROC)wglGetProcAddress("glDeleteSync");
	glDeleteTexturesEXT = (PFNGLDELETETEXTURESEXTPROC)wglGetProcAddress("glDeleteTexturesEXT");
	glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC)wglGetProcAddress("glDeleteTransformFeedbacks");
	glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)wglGetProcAddress("glDeleteVertexArrays");
	glDeleteVertexShaderEXT = (PFNGLDELETEVERTEXSHADEREXTPROC)wglGetProcAddress("glDeleteVertexShaderEXT");
	glDepthBoundsEXT = (PFNGLDEPTHBOUNDSEXTPROC)wglGetProcAddress("glDepthBoundsEXT");
	glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC)wglGetProcAddress("glDepthRangeArrayv");
	glDepthRangef = (PFNGLDEPTHRANGEFPROC)wglGetProcAddress("glDepthRangef");
	glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC)wglGetProcAddress("glDepthRangeIndexed");
	glDetachObjectARB = (PFNGLDETACHOBJECTARBPROC)wglGetProcAddress("glDetachObjectARB");
	glDetachShader = (PFNGLDETACHSHADERPROC)wglGetProcAddress("glDetachShader");
	glDisableClientStateIndexedEXT = (PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)wglGetProcAddress("glDisableClientStateIndexedEXT");
	glDisablei = (PFNGLDISABLEIPROC)wglGetProcAddress("glDisablei");
	glDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC)wglGetProcAddress("glDisableIndexedEXT");
	glDisableVariantClientStateEXT = (PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)wglGetProcAddress("glDisableVariantClientStateEXT");
	glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)wglGetProcAddress("glDisableVertexAttribArray");
	glDisableVertexAttribArrayARB = (PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)wglGetProcAddress("glDisableVertexAttribArrayARB");
	glDrawArraysEXT = (PFNGLDRAWARRAYSEXTPROC)wglGetProcAddress("glDrawArraysEXT");
	glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)wglGetProcAddress("glDrawArraysIndirect");
	glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)wglGetProcAddress("glDrawArraysInstanced");
	glDrawArraysInstancedARB = (PFNGLDRAWARRAYSINSTANCEDARBPROC)wglGetProcAddress("glDrawArraysInstancedARB");
	glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)wglGetProcAddress("glDrawArraysInstancedBaseInstance");
	glDrawArraysInstancedEXT = (PFNGLDRAWARRAYSINSTANCEDEXTPROC)wglGetProcAddress("glDrawArraysInstancedEXT");
	glDrawBuffers = (PFNGLDRAWBUFFERSPROC)wglGetProcAddress("glDrawBuffers");
	glDrawBuffersARB = (PFNGLDRAWBUFFERSARBPROC)wglGetProcAddress("glDrawBuffersARB");
	glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)wglGetProcAddress("glDrawElementsBaseVertex");
	glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)wglGetProcAddress("glDrawElementsIndirect");
	glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)wglGetProcAddress("glDrawElementsInstanced");
	glDrawElementsInstancedARB = (PFNGLDRAWELEMENTSINSTANCEDARBPROC)wglGetProcAddress("glDrawElementsInstancedARB");
	glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)wglGetProcAddress("glDrawElementsInstancedBaseInstance");
	glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)wglGetProcAddress("glDrawElementsInstancedBaseVertex");
	glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)wglGetProcAddress("glDrawElementsInstancedBaseVertexBaseInstance");
	glDrawElementsInstancedEXT = (PFNGLDRAWELEMENTSINSTANCEDEXTPROC)wglGetProcAddress("glDrawElementsInstancedEXT");
	glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)wglGetProcAddress("glDrawRangeElements");
	glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)wglGetProcAddress("glDrawRangeElementsBaseVertex");
	glDrawRangeElementsEXT = (PFNGLDRAWRANGEELEMENTSEXTPROC)wglGetProcAddress("glDrawRangeElementsEXT");
	glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC)wglGetProcAddress("glDrawTransformFeedback");
	glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)wglGetProcAddress("glDrawTransformFeedbackInstanced");
	glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)wglGetProcAddress("glDrawTransformFeedbackStream");
	glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)wglGetProcAddress("glDrawTransformFeedbackStreamInstanced");
	glEdgeFlagPointerEXT = (PFNGLEDGEFLAGPOINTEREXTPROC)wglGetProcAddress("glEdgeFlagPointerEXT");
	glEnableClientStateIndexedEXT = (PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)wglGetProcAddress("glEnableClientStateIndexedEXT");
	glEnablei = (PFNGLENABLEIPROC)wglGetProcAddress("glEnablei");
	glEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC)wglGetProcAddress("glEnableIndexedEXT");
	glEnableVariantClientStateEXT = (PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)wglGetProcAddress("glEnableVariantClientStateEXT");
	glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)wglGetProcAddress("glEnableVertexAttribArray");
	glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC)wglGetProcAddress("glEnableVertexAttribArrayARB");
	glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC)wglGetProcAddress("glEndConditionalRender");
	glEndQuery = (PFNGLENDQUERYPROC)wglGetProcAddress("glEndQuery");
	glEndQueryARB = (PFNGLENDQUERYARBPROC)wglGetProcAddress("glEndQueryARB");
	glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)wglGetProcAddress("glEndQueryIndexed");
	glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC)wglGetProcAddress("glEndTransformFeedback");
	glEndTransformFeedbackEXT = (PFNGLENDTRANSFORMFEEDBACKEXTPROC)wglGetProcAddress("glEndTransformFeedbackEXT");
	glEndVertexShaderEXT = (PFNGLENDVERTEXSHADEREXTPROC)wglGetProcAddress("glEndVertexShaderEXT");
	glExtractComponentEXT = (PFNGLEXTRACTCOMPONENTEXTPROC)wglGetProcAddress("glExtractComponentEXT");
	glFenceSync = (PFNGLFENCESYNCPROC)wglGetProcAddress("glFenceSync");
	glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)wglGetProcAddress("glFlushMappedBufferRange");
	glFlushMappedNamedBufferRangeEXT = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)wglGetProcAddress("glFlushMappedNamedBufferRangeEXT");
	glFogCoordd = (PFNGLFOGCOORDDPROC)wglGetProcAddress("glFogCoordd");
	glFogCoorddEXT = (PFNGLFOGCOORDDEXTPROC)wglGetProcAddress("glFogCoorddEXT");
	glFogCoorddv = (PFNGLFOGCOORDDVPROC)wglGetProcAddress("glFogCoorddv");
	glFogCoorddvEXT = (PFNGLFOGCOORDDVEXTPROC)wglGetProcAddress("glFogCoorddvEXT");
	glFogCoordf = (PFNGLFOGCOORDFPROC)wglGetProcAddress("glFogCoordf");
	glFogCoordfEXT = (PFNGLFOGCOORDFEXTPROC)wglGetProcAddress("glFogCoordfEXT");
	glFogCoordfv = (PFNGLFOGCOORDFVPROC)wglGetProcAddress("glFogCoordfv");
	glFogCoordfvEXT = (PFNGLFOGCOORDFVEXTPROC)wglGetProcAddress("glFogCoordfvEXT");
	glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC)wglGetProcAddress("glFogCoordPointer");
	glFogCoordPointerEXT = (PFNGLFOGCOORDPOINTEREXTPROC)wglGetProcAddress("glFogCoordPointerEXT");
	glFramebufferDrawBufferEXT = (PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)wglGetProcAddress("glFramebufferDrawBufferEXT");
	glFramebufferDrawBuffersEXT = (PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)wglGetProcAddress("glFramebufferDrawBuffersEXT");
	glFramebufferReadBufferEXT = (PFNGLFRAMEBUFFERREADBUFFEREXTPROC)wglGetProcAddress("glFramebufferReadBufferEXT");
	glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)wglGetProcAddress("glFramebufferRenderbuffer");
	glFramebufferRenderbufferEXT = (PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)wglGetProcAddress("glFramebufferRenderbufferEXT");
	glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC)wglGetProcAddress("glFramebufferTexture");
	glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)wglGetProcAddress("glFramebufferTexture1D");
	glFramebufferTexture1DEXT = (PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)wglGetProcAddress("glFramebufferTexture1DEXT");
	glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)wglGetProcAddress("glFramebufferTexture2D");
	glFramebufferTexture2DEXT = (PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)wglGetProcAddress("glFramebufferTexture2DEXT");
	glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)wglGetProcAddress("glFramebufferTexture3D");
	glFramebufferTexture3DEXT = (PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)wglGetProcAddress("glFramebufferTexture3DEXT");
	glFramebufferTextureARB = (PFNGLFRAMEBUFFERTEXTUREARBPROC)wglGetProcAddress("glFramebufferTextureARB");
	glFramebufferTextureEXT = (PFNGLFRAMEBUFFERTEXTUREEXTPROC)wglGetProcAddress("glFramebufferTextureEXT");
	glFramebufferTextureFaceARB = (PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)wglGetProcAddress("glFramebufferTextureFaceARB");
	glFramebufferTextureFaceEXT = (PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)wglGetProcAddress("glFramebufferTextureFaceEXT");
	glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)wglGetProcAddress("glFramebufferTextureLayer");
	glFramebufferTextureLayerARB = (PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)wglGetProcAddress("glFramebufferTextureLayerARB");
	glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)wglGetProcAddress("glFramebufferTextureLayerEXT");
	glGenBuffers = (PFNGLGENBUFFERSPROC)wglGetProcAddress("glGenBuffers");
	glGenBuffersARB = (PFNGLGENBUFFERSARBPROC)wglGetProcAddress("glGenBuffersARB");
	glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)wglGetProcAddress("glGenerateMipmap");
	glGenerateMipmapEXT = (PFNGLGENERATEMIPMAPEXTPROC)wglGetProcAddress("glGenerateMipmapEXT");
	glGenerateMultiTexMipmapEXT = (PFNGLGENERATEMULTITEXMIPMAPEXTPROC)wglGetProcAddress("glGenerateMultiTexMipmapEXT");
	glGenerateTextureMipmapEXT = (PFNGLGENERATETEXTUREMIPMAPEXTPROC)wglGetProcAddress("glGenerateTextureMipmapEXT");
	glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)wglGetProcAddress("glGenFramebuffers");
	glGenFramebuffersEXT = (PFNGLGENFRAMEBUFFERSEXTPROC)wglGetProcAddress("glGenFramebuffersEXT");
	glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC)wglGetProcAddress("glGenProgramPipelines");
	glGenProgramsARB = (PFNGLGENPROGRAMSARBPROC)wglGetProcAddress("glGenProgramsARB");
	glGenQueries = (PFNGLGENQUERIESPROC)wglGetProcAddress("glGenQueries");
	glGenQueriesARB = (PFNGLGENQUERIESARBPROC)wglGetProcAddress("glGenQueriesARB");
	glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)wglGetProcAddress("glGenRenderbuffers");
	glGenRenderbuffersEXT = (PFNGLGENRENDERBUFFERSEXTPROC)wglGetProcAddress("glGenRenderbuffersEXT");
	glGenSamplers = (PFNGLGENSAMPLERSPROC)wglGetProcAddress("glGenSamplers");
	glGenSymbolsEXT = (PFNGLGENSYMBOLSEXTPROC)wglGetProcAddress("glGenSymbolsEXT");
	glGenTexturesEXT = (PFNGLGENTEXTURESEXTPROC)wglGetProcAddress("glGenTexturesEXT");
	glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC)wglGetProcAddress("glGenTransformFeedbacks");
	glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)wglGetProcAddress("glGenVertexArrays");
	glGenVertexShadersEXT = (PFNGLGENVERTEXSHADERSEXTPROC)wglGetProcAddress("glGenVertexShadersEXT");
	glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)wglGetProcAddress("glGetActiveAtomicCounterBufferiv");
	glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)wglGetProcAddress("glGetActiveAttrib");
	glGetActiveAttribARB = (PFNGLGETACTIVEATTRIBARBPROC)wglGetProcAddress("glGetActiveAttribARB");
	glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC)wglGetProcAddress("glGetActiveSubroutineName");
	glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)wglGetProcAddress("glGetActiveSubroutineUniformiv");
	glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)wglGetProcAddress("glGetActiveSubroutineUniformName");
	glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)wglGetProcAddress("glGetActiveUniform");
	glGetActiveUniformARB = (PFNGLGETACTIVEUNIFORMARBPROC)wglGetProcAddress("glGetActiveUniformARB");
	glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)wglGetProcAddress("glGetActiveUniformBlockiv");
	glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)wglGetProcAddress("glGetActiveUniformBlockName");
	glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)wglGetProcAddress("glGetActiveUniformName");
	glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)wglGetProcAddress("glGetActiveUniformsiv");
	glGetAttachedObjectsARB = (PFNGLGETATTACHEDOBJECTSARBPROC)wglGetProcAddress("glGetAttachedObjectsARB");
	glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)wglGetProcAddress("glGetAttachedShaders");
	glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)wglGetProcAddress("glGetAttribLocation");
	glGetAttribLocationARB = (PFNGLGETATTRIBLOCATIONARBPROC)wglGetProcAddress("glGetAttribLocationARB");
	glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)wglGetProcAddress("glGetBooleani_v");
	glGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC)wglGetProcAddress("glGetBooleanIndexedvEXT");
	glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)wglGetProcAddress("glGetBufferParameteri64v");
	glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)wglGetProcAddress("glGetBufferParameteriv");
	glGetBufferParameterivARB = (PFNGLGETBUFFERPARAMETERIVARBPROC)wglGetProcAddress("glGetBufferParameterivARB");
	glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)wglGetProcAddress("glGetBufferPointerv");
	glGetBufferPointervARB = (PFNGLGETBUFFERPOINTERVARBPROC)wglGetProcAddress("glGetBufferPointervARB");
	glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)wglGetProcAddress("glGetBufferSubData");
	glGetBufferSubDataARB = (PFNGLGETBUFFERSUBDATAARBPROC)wglGetProcAddress("glGetBufferSubDataARB");
	glGetColorTable = (PFNGLGETCOLORTABLEPROC)wglGetProcAddress("glGetColorTable");
	glGetColorTableEXT = (PFNGLGETCOLORTABLEEXTPROC)wglGetProcAddress("glGetColorTableEXT");
	glGetColorTableParameterfv = (PFNGLGETCOLORTABLEPARAMETERFVPROC)wglGetProcAddress("glGetColorTableParameterfv");
	glGetColorTableParameterfvEXT = (PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)wglGetProcAddress("glGetColorTableParameterfvEXT");
	glGetColorTableParameteriv = (PFNGLGETCOLORTABLEPARAMETERIVPROC)wglGetProcAddress("glGetColorTableParameteriv");
	glGetColorTableParameterivEXT = (PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)wglGetProcAddress("glGetColorTableParameterivEXT");
	glGetCompressedMultiTexImageEXT = (PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)wglGetProcAddress("glGetCompressedMultiTexImageEXT");
	glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)wglGetProcAddress("glGetCompressedTexImage");
	glGetCompressedTexImageARB = (PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)wglGetProcAddress("glGetCompressedTexImageARB");
	glGetCompressedTextureImageEXT = (PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)wglGetProcAddress("glGetCompressedTextureImageEXT");
	glGetConvolutionFilter = (PFNGLGETCONVOLUTIONFILTERPROC)wglGetProcAddress("glGetConvolutionFilter");
	glGetConvolutionFilterEXT = (PFNGLGETCONVOLUTIONFILTEREXTPROC)wglGetProcAddress("glGetConvolutionFilterEXT");
	glGetConvolutionParameterfv = (PFNGLGETCONVOLUTIONPARAMETERFVPROC)wglGetProcAddress("glGetConvolutionParameterfv");
	glGetConvolutionParameterfvEXT = (PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)wglGetProcAddress("glGetConvolutionParameterfvEXT");
	glGetConvolutionParameteriv = (PFNGLGETCONVOLUTIONPARAMETERIVPROC)wglGetProcAddress("glGetConvolutionParameteriv");
	glGetConvolutionParameterivEXT = (PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)wglGetProcAddress("glGetConvolutionParameterivEXT");
	glGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC)wglGetProcAddress("glGetDebugMessageLogARB");
	glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)wglGetProcAddress("glGetDoublei_v");
	glGetDoubleIndexedvEXT = (PFNGLGETDOUBLEINDEXEDVEXTPROC)wglGetProcAddress("glGetDoubleIndexedvEXT");
	glGetFloati_v = (PFNGLGETFLOATI_VPROC)wglGetProcAddress("glGetFloati_v");
	glGetFloatIndexedvEXT = (PFNGLGETFLOATINDEXEDVEXTPROC)wglGetProcAddress("glGetFloatIndexedvEXT");
	glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)wglGetProcAddress("glGetFragDataIndex");
	glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC)wglGetProcAddress("glGetFragDataLocation");
	glGetFragDataLocationEXT = (PFNGLGETFRAGDATALOCATIONEXTPROC)wglGetProcAddress("glGetFragDataLocationEXT");
	glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)wglGetProcAddress("glGetFramebufferAttachmentParameteriv");
	glGetFramebufferAttachmentParameterivEXT = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)wglGetProcAddress("glGetFramebufferAttachmentParameterivEXT");
	glGetFramebufferParameterivEXT = (PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)wglGetProcAddress("glGetFramebufferParameterivEXT");
	glGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC)wglGetProcAddress("glGetGraphicsResetStatusARB");
	glGetHandleARB = (PFNGLGETHANDLEARBPROC)wglGetProcAddress("glGetHandleARB");
	glGetHistogram = (PFNGLGETHISTOGRAMPROC)wglGetProcAddress("glGetHistogram");
	glGetHistogramEXT = (PFNGLGETHISTOGRAMEXTPROC)wglGetProcAddress("glGetHistogramEXT");
	glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC)wglGetProcAddress("glGetHistogramParameterfv");
	glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)wglGetProcAddress("glGetHistogramParameterfvEXT");
	glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC)wglGetProcAddress("glGetHistogramParameteriv");
	glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)wglGetProcAddress("glGetHistogramParameterivEXT");
	glGetInfoLogARB = (PFNGLGETINFOLOGARBPROC)wglGetProcAddress("glGetInfoLogARB");
	glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)wglGetProcAddress("glGetInteger64i_v");
	glGetInteger64v = (PFNGLGETINTEGER64VPROC)wglGetProcAddress("glGetInteger64v");
	glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)wglGetProcAddress("glGetIntegeri_v");
	glGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC)wglGetProcAddress("glGetIntegerIndexedvEXT");
	glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC)wglGetProcAddress("glGetInternalformativ");
	glGetInvariantBooleanvEXT = (PFNGLGETINVARIANTBOOLEANVEXTPROC)wglGetProcAddress("glGetInvariantBooleanvEXT");
	glGetInvariantFloatvEXT = (PFNGLGETINVARIANTFLOATVEXTPROC)wglGetProcAddress("glGetInvariantFloatvEXT");
	glGetInvariantIntegervEXT = (PFNGLGETINVARIANTINTEGERVEXTPROC)wglGetProcAddress("glGetInvariantIntegervEXT");
	glGetLocalConstantBooleanvEXT = (PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)wglGetProcAddress("glGetLocalConstantBooleanvEXT");
	glGetLocalConstantFloatvEXT = (PFNGLGETLOCALCONSTANTFLOATVEXTPROC)wglGetProcAddress("glGetLocalConstantFloatvEXT");
	glGetLocalConstantIntegervEXT = (PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)wglGetProcAddress("glGetLocalConstantIntegervEXT");
	glGetMinmax = (PFNGLGETMINMAXPROC)wglGetProcAddress("glGetMinmax");
	glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)wglGetProcAddress("glGetMinmaxEXT");
	glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC)wglGetProcAddress("glGetMinmaxParameterfv");
	glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC)wglGetProcAddress("glGetMinmaxParameterfvEXT");
	glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC)wglGetProcAddress("glGetMinmaxParameteriv");
	glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC)wglGetProcAddress("glGetMinmaxParameterivEXT");
	glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)wglGetProcAddress("glGetMultisamplefv");
	glGetMultiTexEnvfvEXT = (PFNGLGETMULTITEXENVFVEXTPROC)wglGetProcAddress("glGetMultiTexEnvfvEXT");
	glGetMultiTexEnvivEXT = (PFNGLGETMULTITEXENVIVEXTPROC)wglGetProcAddress("glGetMultiTexEnvivEXT");
	glGetMultiTexGendvEXT = (PFNGLGETMULTITEXGENDVEXTPROC)wglGetProcAddress("glGetMultiTexGendvEXT");
	glGetMultiTexGenfvEXT = (PFNGLGETMULTITEXGENFVEXTPROC)wglGetProcAddress("glGetMultiTexGenfvEXT");
	glGetMultiTexGenivEXT = (PFNGLGETMULTITEXGENIVEXTPROC)wglGetProcAddress("glGetMultiTexGenivEXT");
	glGetMultiTexImageEXT = (PFNGLGETMULTITEXIMAGEEXTPROC)wglGetProcAddress("glGetMultiTexImageEXT");
	glGetMultiTexLevelParameterfvEXT = (PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)wglGetProcAddress("glGetMultiTexLevelParameterfvEXT");
	glGetMultiTexLevelParameterivEXT = (PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)wglGetProcAddress("glGetMultiTexLevelParameterivEXT");
	glGetMultiTexParameterfvEXT = (PFNGLGETMULTITEXPARAMETERFVEXTPROC)wglGetProcAddress("glGetMultiTexParameterfvEXT");
	glGetMultiTexParameterIivEXT = (PFNGLGETMULTITEXPARAMETERIIVEXTPROC)wglGetProcAddress("glGetMultiTexParameterIivEXT");
	glGetMultiTexParameterIuivEXT = (PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)wglGetProcAddress("glGetMultiTexParameterIuivEXT");
	glGetMultiTexParameterivEXT = (PFNGLGETMULTITEXPARAMETERIVEXTPROC)wglGetProcAddress("glGetMultiTexParameterivEXT");
	glGetNamedBufferParameterivEXT = (PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)wglGetProcAddress("glGetNamedBufferParameterivEXT");
	glGetNamedBufferPointervEXT = (PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)wglGetProcAddress("glGetNamedBufferPointervEXT");
	glGetNamedBufferSubDataEXT = (PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)wglGetProcAddress("glGetNamedBufferSubDataEXT");
	glGetNamedFramebufferAttachmentParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)wglGetProcAddress("glGetNamedFramebufferAttachmentParameterivEXT");
	glGetNamedProgramivEXT = (PFNGLGETNAMEDPROGRAMIVEXTPROC)wglGetProcAddress("glGetNamedProgramivEXT");
	glGetNamedProgramLocalParameterdvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)wglGetProcAddress("glGetNamedProgramLocalParameterdvEXT");
	glGetNamedProgramLocalParameterfvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)wglGetProcAddress("glGetNamedProgramLocalParameterfvEXT");
	glGetNamedProgramLocalParameterIivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)wglGetProcAddress("glGetNamedProgramLocalParameterIivEXT");
	glGetNamedProgramLocalParameterIuivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)wglGetProcAddress("glGetNamedProgramLocalParameterIuivEXT");
	glGetNamedProgramStringEXT = (PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)wglGetProcAddress("glGetNamedProgramStringEXT");
	glGetNamedRenderbufferParameterivEXT = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)wglGetProcAddress("glGetNamedRenderbufferParameterivEXT");
	glGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC)wglGetProcAddress("glGetNamedStringARB");
	glGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC)wglGetProcAddress("glGetNamedStringivARB");
	glGetnColorTableARB = (PFNGLGETNCOLORTABLEARBPROC)wglGetProcAddress("glGetnColorTableARB");
	glGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)wglGetProcAddress("glGetnCompressedTexImageARB");
	glGetnConvolutionFilterARB = (PFNGLGETNCONVOLUTIONFILTERARBPROC)wglGetProcAddress("glGetnConvolutionFilterARB");
	glGetnHistogramARB = (PFNGLGETNHISTOGRAMARBPROC)wglGetProcAddress("glGetnHistogramARB");
	glGetnMapdvARB = (PFNGLGETNMAPDVARBPROC)wglGetProcAddress("glGetnMapdvARB");
	glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC)wglGetProcAddress("glGetnMapfvARB");
	glGetnMapivARB = (PFNGLGETNMAPIVARBPROC)wglGetProcAddress("glGetnMapivARB");
	glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC)wglGetProcAddress("glGetnMinmaxARB");
	glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC)wglGetProcAddress("glGetnPixelMapfvARB");
	glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC)wglGetProcAddress("glGetnPixelMapuivARB");
	glGetnPixelMapusvARB = (PFNGLGETNPIXELMAPUSVARBPROC)wglGetProcAddress("glGetnPixelMapusvARB");
	glGetnPolygonStippleARB = (PFNGLGETNPOLYGONSTIPPLEARBPROC)wglGetProcAddress("glGetnPolygonStippleARB");
	glGetnSeparableFilterARB = (PFNGLGETNSEPARABLEFILTERARBPROC)wglGetProcAddress("glGetnSeparableFilterARB");
	glGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC)wglGetProcAddress("glGetnTexImageARB");
	glGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC)wglGetProcAddress("glGetnUniformdvARB");
	glGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC)wglGetProcAddress("glGetnUniformfvARB");
	glGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC)wglGetProcAddress("glGetnUniformivARB");
	glGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC)wglGetProcAddress("glGetnUniformuivARB");
	glGetObjectParameterfvARB = (PFNGLGETOBJECTPARAMETERFVARBPROC)wglGetProcAddress("glGetObjectParameterfvARB");
	glGetObjectParameterivARB = (PFNGLGETOBJECTPARAMETERIVARBPROC)wglGetProcAddress("glGetObjectParameterivARB");
	glGetPointerIndexedvEXT = (PFNGLGETPOINTERINDEXEDVEXTPROC)wglGetProcAddress("glGetPointerIndexedvEXT");
	glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC)wglGetProcAddress("glGetProgramBinary");
	glGetProgramEnvParameterdvARB = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC)wglGetProcAddress("glGetProgramEnvParameterdvARB");
	glGetProgramEnvParameterfvARB = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC)wglGetProcAddress("glGetProgramEnvParameterfvARB");
	glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)wglGetProcAddress("glGetProgramInfoLog");
	glGetProgramiv = (PFNGLGETPROGRAMIVPROC)wglGetProcAddress("glGetProgramiv");
	glGetProgramivARB = (PFNGLGETPROGRAMIVARBPROC)wglGetProcAddress("glGetProgramivARB");
	glGetProgramLocalParameterdvARB = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)wglGetProcAddress("glGetProgramLocalParameterdvARB");
	glGetProgramLocalParameterfvARB = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)wglGetProcAddress("glGetProgramLocalParameterfvARB");
	glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)wglGetProcAddress("glGetProgramPipelineInfoLog");
	glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC)wglGetProcAddress("glGetProgramPipelineiv");
	glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC)wglGetProcAddress("glGetProgramStageiv");
	glGetProgramStringARB = (PFNGLGETPROGRAMSTRINGARBPROC)wglGetProcAddress("glGetProgramStringARB");
	glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC)wglGetProcAddress("glGetQueryIndexediv");
	glGetQueryiv = (PFNGLGETQUERYIVPROC)wglGetProcAddress("glGetQueryiv");
	glGetQueryivARB = (PFNGLGETQUERYIVARBPROC)wglGetProcAddress("glGetQueryivARB");
	glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)wglGetProcAddress("glGetQueryObjecti64v");
	glGetQueryObjecti64vEXT = (PFNGLGETQUERYOBJECTI64VEXTPROC)wglGetProcAddress("glGetQueryObjecti64vEXT");
	glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)wglGetProcAddress("glGetQueryObjectiv");
	glGetQueryObjectivARB = (PFNGLGETQUERYOBJECTIVARBPROC)wglGetProcAddress("glGetQueryObjectivARB");
	glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)wglGetProcAddress("glGetQueryObjectui64v");
	glGetQueryObjectui64vEXT = (PFNGLGETQUERYOBJECTUI64VEXTPROC)wglGetProcAddress("glGetQueryObjectui64vEXT");
	glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC)wglGetProcAddress("glGetQueryObjectuiv");
	glGetQueryObjectuivARB = (PFNGLGETQUERYOBJECTUIVARBPROC)wglGetProcAddress("glGetQueryObjectuivARB");
	glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)wglGetProcAddress("glGetRenderbufferParameteriv");
	glGetRenderbufferParameterivEXT = (PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)wglGetProcAddress("glGetRenderbufferParameterivEXT");
	glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)wglGetProcAddress("glGetSamplerParameterfv");
	glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)wglGetProcAddress("glGetSamplerParameterIiv");
	glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)wglGetProcAddress("glGetSamplerParameterIuiv");
	glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)wglGetProcAddress("glGetSamplerParameteriv");
	glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC)wglGetProcAddress("glGetSeparableFilter");
	glGetSeparableFilterEXT = (PFNGLGETSEPARABLEFILTEREXTPROC)wglGetProcAddress("glGetSeparableFilterEXT");
	glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)wglGetProcAddress("glGetShaderInfoLog");
	glGetShaderiv = (PFNGLGETSHADERIVPROC)wglGetProcAddress("glGetShaderiv");
	glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC)wglGetProcAddress("glGetShaderPrecisionFormat");
	glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)wglGetProcAddress("glGetShaderSource");
	glGetShaderSourceARB = (PFNGLGETSHADERSOURCEARBPROC)wglGetProcAddress("glGetShaderSourceARB");
	glGetStringi = (PFNGLGETSTRINGIPROC)wglGetProcAddress("glGetStringi");
	glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC)wglGetProcAddress("glGetSubroutineIndex");
	glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)wglGetProcAddress("glGetSubroutineUniformLocation");
	glGetSynciv = (PFNGLGETSYNCIVPROC)wglGetProcAddress("glGetSynciv");
	glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC)wglGetProcAddress("glGetTexParameterIiv");
	glGetTexParameterIivEXT = (PFNGLGETTEXPARAMETERIIVEXTPROC)wglGetProcAddress("glGetTexParameterIivEXT");
	glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC)wglGetProcAddress("glGetTexParameterIuiv");
	glGetTexParameterIuivEXT = (PFNGLGETTEXPARAMETERIUIVEXTPROC)wglGetProcAddress("glGetTexParameterIuivEXT");
	glGetTextureImageEXT = (PFNGLGETTEXTUREIMAGEEXTPROC)wglGetProcAddress("glGetTextureImageEXT");
	glGetTextureLevelParameterfvEXT = (PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)wglGetProcAddress("glGetTextureLevelParameterfvEXT");
	glGetTextureLevelParameterivEXT = (PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)wglGetProcAddress("glGetTextureLevelParameterivEXT");
	glGetTextureParameterfvEXT = (PFNGLGETTEXTUREPARAMETERFVEXTPROC)wglGetProcAddress("glGetTextureParameterfvEXT");
	glGetTextureParameterIivEXT = (PFNGLGETTEXTUREPARAMETERIIVEXTPROC)wglGetProcAddress("glGetTextureParameterIivEXT");
	glGetTextureParameterIuivEXT = (PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)wglGetProcAddress("glGetTextureParameterIuivEXT");
	glGetTextureParameterivEXT = (PFNGLGETTEXTUREPARAMETERIVEXTPROC)wglGetProcAddress("glGetTextureParameterivEXT");
	glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)wglGetProcAddress("glGetTransformFeedbackVarying");
	glGetTransformFeedbackVaryingEXT = (PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)wglGetProcAddress("glGetTransformFeedbackVaryingEXT");
	glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)wglGetProcAddress("glGetUniformBlockIndex");
	glGetUniformBufferSizeEXT = (PFNGLGETUNIFORMBUFFERSIZEEXTPROC)wglGetProcAddress("glGetUniformBufferSizeEXT");
	glGetUniformdv = (PFNGLGETUNIFORMDVPROC)wglGetProcAddress("glGetUniformdv");
	glGetUniformfv = (PFNGLGETUNIFORMFVPROC)wglGetProcAddress("glGetUniformfv");
	glGetUniformfvARB = (PFNGLGETUNIFORMFVARBPROC)wglGetProcAddress("glGetUniformfvARB");
	glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)wglGetProcAddress("glGetUniformIndices");
	glGetUniformiv = (PFNGLGETUNIFORMIVPROC)wglGetProcAddress("glGetUniformiv");
	glGetUniformivARB = (PFNGLGETUNIFORMIVARBPROC)wglGetProcAddress("glGetUniformivARB");
	glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)wglGetProcAddress("glGetUniformLocation");
	glGetUniformLocationARB = (PFNGLGETUNIFORMLOCATIONARBPROC)wglGetProcAddress("glGetUniformLocationARB");
	glGetUniformOffsetEXT = (PFNGLGETUNIFORMOFFSETEXTPROC)wglGetProcAddress("glGetUniformOffsetEXT");
	glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)wglGetProcAddress("glGetUniformSubroutineuiv");
	glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)wglGetProcAddress("glGetUniformuiv");
	glGetUniformuivEXT = (PFNGLGETUNIFORMUIVEXTPROC)wglGetProcAddress("glGetUniformuivEXT");
	glGetVariantBooleanvEXT = (PFNGLGETVARIANTBOOLEANVEXTPROC)wglGetProcAddress("glGetVariantBooleanvEXT");
	glGetVariantFloatvEXT = (PFNGLGETVARIANTFLOATVEXTPROC)wglGetProcAddress("glGetVariantFloatvEXT");
	glGetVariantIntegervEXT = (PFNGLGETVARIANTINTEGERVEXTPROC)wglGetProcAddress("glGetVariantIntegervEXT");
	glGetVariantPointervEXT = (PFNGLGETVARIANTPOINTERVEXTPROC)wglGetProcAddress("glGetVariantPointervEXT");
	glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC)wglGetProcAddress("glGetVertexAttribdv");
	glGetVertexAttribdvARB = (PFNGLGETVERTEXATTRIBDVARBPROC)wglGetProcAddress("glGetVertexAttribdvARB");
	glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC)wglGetProcAddress("glGetVertexAttribfv");
	glGetVertexAttribfvARB = (PFNGLGETVERTEXATTRIBFVARBPROC)wglGetProcAddress("glGetVertexAttribfvARB");
	glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC)wglGetProcAddress("glGetVertexAttribIiv");
	glGetVertexAttribIivEXT = (PFNGLGETVERTEXATTRIBIIVEXTPROC)wglGetProcAddress("glGetVertexAttribIivEXT");
	glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC)wglGetProcAddress("glGetVertexAttribIuiv");
	glGetVertexAttribIuivEXT = (PFNGLGETVERTEXATTRIBIUIVEXTPROC)wglGetProcAddress("glGetVertexAttribIuivEXT");
	glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC)wglGetProcAddress("glGetVertexAttribiv");
	glGetVertexAttribivARB = (PFNGLGETVERTEXATTRIBIVARBPROC)wglGetProcAddress("glGetVertexAttribivARB");
	glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC)wglGetProcAddress("glGetVertexAttribLdv");
	glGetVertexAttribLdvEXT = (PFNGLGETVERTEXATTRIBLDVEXTPROC)wglGetProcAddress("glGetVertexAttribLdvEXT");
	glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC)wglGetProcAddress("glGetVertexAttribPointerv");
	glGetVertexAttribPointervARB = (PFNGLGETVERTEXATTRIBPOINTERVARBPROC)wglGetProcAddress("glGetVertexAttribPointervARB");
	glHistogram = (PFNGLHISTOGRAMPROC)wglGetProcAddress("glHistogram");
	glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)wglGetProcAddress("glHistogramEXT");
	glImportSyncEXT = (PFNGLIMPORTSYNCEXTPROC)wglGetProcAddress("glImportSyncEXT");
	glIndexFuncEXT = (PFNGLINDEXFUNCEXTPROC)wglGetProcAddress("glIndexFuncEXT");
	glIndexMaterialEXT = (PFNGLINDEXMATERIALEXTPROC)wglGetProcAddress("glIndexMaterialEXT");
	glIndexPointerEXT = (PFNGLINDEXPOINTEREXTPROC)wglGetProcAddress("glIndexPointerEXT");
	glInsertComponentEXT = (PFNGLINSERTCOMPONENTEXTPROC)wglGetProcAddress("glInsertComponentEXT");
	glIsBuffer = (PFNGLISBUFFERPROC)wglGetProcAddress("glIsBuffer");
	glIsBufferARB = (PFNGLISBUFFERARBPROC)wglGetProcAddress("glIsBufferARB");
	glIsEnabledi = (PFNGLISENABLEDIPROC)wglGetProcAddress("glIsEnabledi");
	glIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC)wglGetProcAddress("glIsEnabledIndexedEXT");
	glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)wglGetProcAddress("glIsFramebuffer");
	glIsFramebufferEXT = (PFNGLISFRAMEBUFFEREXTPROC)wglGetProcAddress("glIsFramebufferEXT");
	glIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC)wglGetProcAddress("glIsNamedStringARB");
	glIsProgram = (PFNGLISPROGRAMPROC)wglGetProcAddress("glIsProgram");
	glIsProgramARB = (PFNGLISPROGRAMARBPROC)wglGetProcAddress("glIsProgramARB");
	glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC)wglGetProcAddress("glIsProgramPipeline");
	glIsQuery = (PFNGLISQUERYPROC)wglGetProcAddress("glIsQuery");
	glIsQueryARB = (PFNGLISQUERYARBPROC)wglGetProcAddress("glIsQueryARB");
	glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)wglGetProcAddress("glIsRenderbuffer");
	glIsRenderbufferEXT = (PFNGLISRENDERBUFFEREXTPROC)wglGetProcAddress("glIsRenderbufferEXT");
	glIsSampler = (PFNGLISSAMPLERPROC)wglGetProcAddress("glIsSampler");
	glIsShader = (PFNGLISSHADERPROC)wglGetProcAddress("glIsShader");
	glIsSync = (PFNGLISSYNCPROC)wglGetProcAddress("glIsSync");
	glIsTextureEXT = (PFNGLISTEXTUREEXTPROC)wglGetProcAddress("glIsTextureEXT");
	glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC)wglGetProcAddress("glIsTransformFeedback");
	glIsVariantEnabledEXT = (PFNGLISVARIANTENABLEDEXTPROC)wglGetProcAddress("glIsVariantEnabledEXT");
	glIsVertexArray = (PFNGLISVERTEXARRAYPROC)wglGetProcAddress("glIsVertexArray");
	glLinkProgram = (PFNGLLINKPROGRAMPROC)wglGetProcAddress("glLinkProgram");
	glLinkProgramARB = (PFNGLLINKPROGRAMARBPROC)wglGetProcAddress("glLinkProgramARB");
	glLoadTransposeMatrixd = (PFNGLLOADTRANSPOSEMATRIXDPROC)wglGetProcAddress("glLoadTransposeMatrixd");
	glLoadTransposeMatrixdARB = (PFNGLLOADTRANSPOSEMATRIXDARBPROC)wglGetProcAddress("glLoadTransposeMatrixdARB");
	glLoadTransposeMatrixf = (PFNGLLOADTRANSPOSEMATRIXFPROC)wglGetProcAddress("glLoadTransposeMatrixf");
	glLoadTransposeMatrixfARB = (PFNGLLOADTRANSPOSEMATRIXFARBPROC)wglGetProcAddress("glLoadTransposeMatrixfARB");
	glLockArraysEXT = (PFNGLLOCKARRAYSEXTPROC)wglGetProcAddress("glLockArraysEXT");
	glMapBuffer = (PFNGLMAPBUFFERPROC)wglGetProcAddress("glMapBuffer");
	glMapBufferARB = (PFNGLMAPBUFFERARBPROC)wglGetProcAddress("glMapBufferARB");
	glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)wglGetProcAddress("glMapBufferRange");
	glMapNamedBufferEXT = (PFNGLMAPNAMEDBUFFEREXTPROC)wglGetProcAddress("glMapNamedBufferEXT");
	glMapNamedBufferRangeEXT = (PFNGLMAPNAMEDBUFFERRANGEEXTPROC)wglGetProcAddress("glMapNamedBufferRangeEXT");
	glMatrixFrustumEXT = (PFNGLMATRIXFRUSTUMEXTPROC)wglGetProcAddress("glMatrixFrustumEXT");
	glMatrixIndexPointerARB = (PFNGLMATRIXINDEXPOINTERARBPROC)wglGetProcAddress("glMatrixIndexPointerARB");
	glMatrixIndexubvARB = (PFNGLMATRIXINDEXUBVARBPROC)wglGetProcAddress("glMatrixIndexubvARB");
	glMatrixIndexuivARB = (PFNGLMATRIXINDEXUIVARBPROC)wglGetProcAddress("glMatrixIndexuivARB");
	glMatrixIndexusvARB = (PFNGLMATRIXINDEXUSVARBPROC)wglGetProcAddress("glMatrixIndexusvARB");
	glMatrixLoaddEXT = (PFNGLMATRIXLOADDEXTPROC)wglGetProcAddress("glMatrixLoaddEXT");
	glMatrixLoadfEXT = (PFNGLMATRIXLOADFEXTPROC)wglGetProcAddress("glMatrixLoadfEXT");
	glMatrixLoadIdentityEXT = (PFNGLMATRIXLOADIDENTITYEXTPROC)wglGetProcAddress("glMatrixLoadIdentityEXT");
	glMatrixLoadTransposedEXT = (PFNGLMATRIXLOADTRANSPOSEDEXTPROC)wglGetProcAddress("glMatrixLoadTransposedEXT");
	glMatrixLoadTransposefEXT = (PFNGLMATRIXLOADTRANSPOSEFEXTPROC)wglGetProcAddress("glMatrixLoadTransposefEXT");
	glMatrixMultdEXT = (PFNGLMATRIXMULTDEXTPROC)wglGetProcAddress("glMatrixMultdEXT");
	glMatrixMultfEXT = (PFNGLMATRIXMULTFEXTPROC)wglGetProcAddress("glMatrixMultfEXT");
	glMatrixMultTransposedEXT = (PFNGLMATRIXMULTTRANSPOSEDEXTPROC)wglGetProcAddress("glMatrixMultTransposedEXT");
	glMatrixMultTransposefEXT = (PFNGLMATRIXMULTTRANSPOSEFEXTPROC)wglGetProcAddress("glMatrixMultTransposefEXT");
	glMatrixOrthoEXT = (PFNGLMATRIXORTHOEXTPROC)wglGetProcAddress("glMatrixOrthoEXT");
	glMatrixPopEXT = (PFNGLMATRIXPOPEXTPROC)wglGetProcAddress("glMatrixPopEXT");
	glMatrixPushEXT = (PFNGLMATRIXPUSHEXTPROC)wglGetProcAddress("glMatrixPushEXT");
	glMatrixRotatedEXT = (PFNGLMATRIXROTATEDEXTPROC)wglGetProcAddress("glMatrixRotatedEXT");
	glMatrixRotatefEXT = (PFNGLMATRIXROTATEFEXTPROC)wglGetProcAddress("glMatrixRotatefEXT");
	glMatrixScaledEXT = (PFNGLMATRIXSCALEDEXTPROC)wglGetProcAddress("glMatrixScaledEXT");
	glMatrixScalefEXT = (PFNGLMATRIXSCALEFEXTPROC)wglGetProcAddress("glMatrixScalefEXT");
	glMatrixTranslatedEXT = (PFNGLMATRIXTRANSLATEDEXTPROC)wglGetProcAddress("glMatrixTranslatedEXT");
	glMatrixTranslatefEXT = (PFNGLMATRIXTRANSLATEFEXTPROC)wglGetProcAddress("glMatrixTranslatefEXT");
	glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)wglGetProcAddress("glMemoryBarrier");
	glMemoryBarrierEXT = (PFNGLMEMORYBARRIEREXTPROC)wglGetProcAddress("glMemoryBarrierEXT");
	glMinmax = (PFNGLMINMAXPROC)wglGetProcAddress("glMinmax");
	glMinmaxEXT = (PFNGLMINMAXEXTPROC)wglGetProcAddress("glMinmaxEXT");
	glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)wglGetProcAddress("glMinSampleShading");
	glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)wglGetProcAddress("glMinSampleShadingARB");
	glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)wglGetProcAddress("glMultiDrawArrays");
	glMultiDrawArraysEXT = (PFNGLMULTIDRAWARRAYSEXTPROC)wglGetProcAddress("glMultiDrawArraysEXT");
	glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC)wglGetProcAddress("glMultiDrawElements");
	glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)wglGetProcAddress("glMultiDrawElementsBaseVertex");
	glMultiDrawElementsEXT = (PFNGLMULTIDRAWELEMENTSEXTPROC)wglGetProcAddress("glMultiDrawElementsEXT");
	glMultiTexBufferEXT = (PFNGLMULTITEXBUFFEREXTPROC)wglGetProcAddress("glMultiTexBufferEXT");
	glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC)wglGetProcAddress("glMultiTexCoord1d");
	glMultiTexCoord1dARB = (PFNGLMULTITEXCOORD1DARBPROC)wglGetProcAddress("glMultiTexCoord1dARB");
	glMultiTexCoord1dv = (PFNGLMULTITEXCOORD1DVPROC)wglGetProcAddress("glMultiTexCoord1dv");
	glMultiTexCoord1dvARB = (PFNGLMULTITEXCOORD1DVARBPROC)wglGetProcAddress("glMultiTexCoord1dvARB");
	glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC)wglGetProcAddress("glMultiTexCoord1f");
	glMultiTexCoord1fARB = (PFNGLMULTITEXCOORD1FARBPROC)wglGetProcAddress("glMultiTexCoord1fARB");
	glMultiTexCoord1fv = (PFNGLMULTITEXCOORD1FVPROC)wglGetProcAddress("glMultiTexCoord1fv");
	glMultiTexCoord1fvARB = (PFNGLMULTITEXCOORD1FVARBPROC)wglGetProcAddress("glMultiTexCoord1fvARB");
	glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC)wglGetProcAddress("glMultiTexCoord1i");
	glMultiTexCoord1iARB = (PFNGLMULTITEXCOORD1IARBPROC)wglGetProcAddress("glMultiTexCoord1iARB");
	glMultiTexCoord1iv = (PFNGLMULTITEXCOORD1IVPROC)wglGetProcAddress("glMultiTexCoord1iv");
	glMultiTexCoord1ivARB = (PFNGLMULTITEXCOORD1IVARBPROC)wglGetProcAddress("glMultiTexCoord1ivARB");
	glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC)wglGetProcAddress("glMultiTexCoord1s");
	glMultiTexCoord1sARB = (PFNGLMULTITEXCOORD1SARBPROC)wglGetProcAddress("glMultiTexCoord1sARB");
	glMultiTexCoord1sv = (PFNGLMULTITEXCOORD1SVPROC)wglGetProcAddress("glMultiTexCoord1sv");
	glMultiTexCoord1svARB = (PFNGLMULTITEXCOORD1SVARBPROC)wglGetProcAddress("glMultiTexCoord1svARB");
	glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC)wglGetProcAddress("glMultiTexCoord2d");
	glMultiTexCoord2dARB = (PFNGLMULTITEXCOORD2DARBPROC)wglGetProcAddress("glMultiTexCoord2dARB");
	glMultiTexCoord2dv = (PFNGLMULTITEXCOORD2DVPROC)wglGetProcAddress("glMultiTexCoord2dv");
	glMultiTexCoord2dvARB = (PFNGLMULTITEXCOORD2DVARBPROC)wglGetProcAddress("glMultiTexCoord2dvARB");
	glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC)wglGetProcAddress("glMultiTexCoord2f");
	glMultiTexCoord2fARB = (PFNGLMULTITEXCOORD2FARBPROC)wglGetProcAddress("glMultiTexCoord2fARB");
	glMultiTexCoord2fv = (PFNGLMULTITEXCOORD2FVPROC)wglGetProcAddress("glMultiTexCoord2fv");
	glMultiTexCoord2fvARB = (PFNGLMULTITEXCOORD2FVARBPROC)wglGetProcAddress("glMultiTexCoord2fvARB");
	glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC)wglGetProcAddress("glMultiTexCoord2i");
	glMultiTexCoord2iARB = (PFNGLMULTITEXCOORD2IARBPROC)wglGetProcAddress("glMultiTexCoord2iARB");
	glMultiTexCoord2iv = (PFNGLMULTITEXCOORD2IVPROC)wglGetProcAddress("glMultiTexCoord2iv");
	glMultiTexCoord2ivARB = (PFNGLMULTITEXCOORD2IVARBPROC)wglGetProcAddress("glMultiTexCoord2ivARB");
	glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC)wglGetProcAddress("glMultiTexCoord2s");
	glMultiTexCoord2sARB = (PFNGLMULTITEXCOORD2SARBPROC)wglGetProcAddress("glMultiTexCoord2sARB");
	glMultiTexCoord2sv = (PFNGLMULTITEXCOORD2SVPROC)wglGetProcAddress("glMultiTexCoord2sv");
	glMultiTexCoord2svARB = (PFNGLMULTITEXCOORD2SVARBPROC)wglGetProcAddress("glMultiTexCoord2svARB");
	glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC)wglGetProcAddress("glMultiTexCoord3d");
	glMultiTexCoord3dARB = (PFNGLMULTITEXCOORD3DARBPROC)wglGetProcAddress("glMultiTexCoord3dARB");
	glMultiTexCoord3dv = (PFNGLMULTITEXCOORD3DVPROC)wglGetProcAddress("glMultiTexCoord3dv");
	glMultiTexCoord3dvARB = (PFNGLMULTITEXCOORD3DVARBPROC)wglGetProcAddress("glMultiTexCoord3dvARB");
	glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC)wglGetProcAddress("glMultiTexCoord3f");
	glMultiTexCoord3fARB = (PFNGLMULTITEXCOORD3FARBPROC)wglGetProcAddress("glMultiTexCoord3fARB");
	glMultiTexCoord3fv = (PFNGLMULTITEXCOORD3FVPROC)wglGetProcAddress("glMultiTexCoord3fv");
	glMultiTexCoord3fvARB = (PFNGLMULTITEXCOORD3FVARBPROC)wglGetProcAddress("glMultiTexCoord3fvARB");
	glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC)wglGetProcAddress("glMultiTexCoord3i");
	glMultiTexCoord3iARB = (PFNGLMULTITEXCOORD3IARBPROC)wglGetProcAddress("glMultiTexCoord3iARB");
	glMultiTexCoord3iv = (PFNGLMULTITEXCOORD3IVPROC)wglGetProcAddress("glMultiTexCoord3iv");
	glMultiTexCoord3ivARB = (PFNGLMULTITEXCOORD3IVARBPROC)wglGetProcAddress("glMultiTexCoord3ivARB");
	glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC)wglGetProcAddress("glMultiTexCoord3s");
	glMultiTexCoord3sARB = (PFNGLMULTITEXCOORD3SARBPROC)wglGetProcAddress("glMultiTexCoord3sARB");
	glMultiTexCoord3sv = (PFNGLMULTITEXCOORD3SVPROC)wglGetProcAddress("glMultiTexCoord3sv");
	glMultiTexCoord3svARB = (PFNGLMULTITEXCOORD3SVARBPROC)wglGetProcAddress("glMultiTexCoord3svARB");
	glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC)wglGetProcAddress("glMultiTexCoord4d");
	glMultiTexCoord4dARB = (PFNGLMULTITEXCOORD4DARBPROC)wglGetProcAddress("glMultiTexCoord4dARB");
	glMultiTexCoord4dv = (PFNGLMULTITEXCOORD4DVPROC)wglGetProcAddress("glMultiTexCoord4dv");
	glMultiTexCoord4dvARB = (PFNGLMULTITEXCOORD4DVARBPROC)wglGetProcAddress("glMultiTexCoord4dvARB");
	glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC)wglGetProcAddress("glMultiTexCoord4f");
	glMultiTexCoord4fARB = (PFNGLMULTITEXCOORD4FARBPROC)wglGetProcAddress("glMultiTexCoord4fARB");
	glMultiTexCoord4fv = (PFNGLMULTITEXCOORD4FVPROC)wglGetProcAddress("glMultiTexCoord4fv");
	glMultiTexCoord4fvARB = (PFNGLMULTITEXCOORD4FVARBPROC)wglGetProcAddress("glMultiTexCoord4fvARB");
	glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC)wglGetProcAddress("glMultiTexCoord4i");
	glMultiTexCoord4iARB = (PFNGLMULTITEXCOORD4IARBPROC)wglGetProcAddress("glMultiTexCoord4iARB");
	glMultiTexCoord4iv = (PFNGLMULTITEXCOORD4IVPROC)wglGetProcAddress("glMultiTexCoord4iv");
	glMultiTexCoord4ivARB = (PFNGLMULTITEXCOORD4IVARBPROC)wglGetProcAddress("glMultiTexCoord4ivARB");
	glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC)wglGetProcAddress("glMultiTexCoord4s");
	glMultiTexCoord4sARB = (PFNGLMULTITEXCOORD4SARBPROC)wglGetProcAddress("glMultiTexCoord4sARB");
	glMultiTexCoord4sv = (PFNGLMULTITEXCOORD4SVPROC)wglGetProcAddress("glMultiTexCoord4sv");
	glMultiTexCoord4svARB = (PFNGLMULTITEXCOORD4SVARBPROC)wglGetProcAddress("glMultiTexCoord4svARB");
	glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC)wglGetProcAddress("glMultiTexCoordP1ui");
	glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC)wglGetProcAddress("glMultiTexCoordP1uiv");
	glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC)wglGetProcAddress("glMultiTexCoordP2ui");
	glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC)wglGetProcAddress("glMultiTexCoordP2uiv");
	glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC)wglGetProcAddress("glMultiTexCoordP3ui");
	glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC)wglGetProcAddress("glMultiTexCoordP3uiv");
	glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC)wglGetProcAddress("glMultiTexCoordP4ui");
	glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC)wglGetProcAddress("glMultiTexCoordP4uiv");
	glMultiTexCoordPointerEXT = (PFNGLMULTITEXCOORDPOINTEREXTPROC)wglGetProcAddress("glMultiTexCoordPointerEXT");
	glMultiTexEnvfEXT = (PFNGLMULTITEXENVFEXTPROC)wglGetProcAddress("glMultiTexEnvfEXT");
	glMultiTexEnvfvEXT = (PFNGLMULTITEXENVFVEXTPROC)wglGetProcAddress("glMultiTexEnvfvEXT");
	glMultiTexEnviEXT = (PFNGLMULTITEXENVIEXTPROC)wglGetProcAddress("glMultiTexEnviEXT");
	glMultiTexEnvivEXT = (PFNGLMULTITEXENVIVEXTPROC)wglGetProcAddress("glMultiTexEnvivEXT");
	glMultiTexGendEXT = (PFNGLMULTITEXGENDEXTPROC)wglGetProcAddress("glMultiTexGendEXT");
	glMultiTexGendvEXT = (PFNGLMULTITEXGENDVEXTPROC)wglGetProcAddress("glMultiTexGendvEXT");
	glMultiTexGenfEXT = (PFNGLMULTITEXGENFEXTPROC)wglGetProcAddress("glMultiTexGenfEXT");
	glMultiTexGenfvEXT = (PFNGLMULTITEXGENFVEXTPROC)wglGetProcAddress("glMultiTexGenfvEXT");
	glMultiTexGeniEXT = (PFNGLMULTITEXGENIEXTPROC)wglGetProcAddress("glMultiTexGeniEXT");
	glMultiTexGenivEXT = (PFNGLMULTITEXGENIVEXTPROC)wglGetProcAddress("glMultiTexGenivEXT");
	glMultiTexImage1DEXT = (PFNGLMULTITEXIMAGE1DEXTPROC)wglGetProcAddress("glMultiTexImage1DEXT");
	glMultiTexImage2DEXT = (PFNGLMULTITEXIMAGE2DEXTPROC)wglGetProcAddress("glMultiTexImage2DEXT");
	glMultiTexImage3DEXT = (PFNGLMULTITEXIMAGE3DEXTPROC)wglGetProcAddress("glMultiTexImage3DEXT");
	glMultiTexParameterfEXT = (PFNGLMULTITEXPARAMETERFEXTPROC)wglGetProcAddress("glMultiTexParameterfEXT");
	glMultiTexParameterfvEXT = (PFNGLMULTITEXPARAMETERFVEXTPROC)wglGetProcAddress("glMultiTexParameterfvEXT");
	glMultiTexParameteriEXT = (PFNGLMULTITEXPARAMETERIEXTPROC)wglGetProcAddress("glMultiTexParameteriEXT");
	glMultiTexParameterIivEXT = (PFNGLMULTITEXPARAMETERIIVEXTPROC)wglGetProcAddress("glMultiTexParameterIivEXT");
	glMultiTexParameterIuivEXT = (PFNGLMULTITEXPARAMETERIUIVEXTPROC)wglGetProcAddress("glMultiTexParameterIuivEXT");
	glMultiTexParameterivEXT = (PFNGLMULTITEXPARAMETERIVEXTPROC)wglGetProcAddress("glMultiTexParameterivEXT");
	glMultiTexRenderbufferEXT = (PFNGLMULTITEXRENDERBUFFEREXTPROC)wglGetProcAddress("glMultiTexRenderbufferEXT");
	glMultiTexSubImage1DEXT = (PFNGLMULTITEXSUBIMAGE1DEXTPROC)wglGetProcAddress("glMultiTexSubImage1DEXT");
	glMultiTexSubImage2DEXT = (PFNGLMULTITEXSUBIMAGE2DEXTPROC)wglGetProcAddress("glMultiTexSubImage2DEXT");
	glMultiTexSubImage3DEXT = (PFNGLMULTITEXSUBIMAGE3DEXTPROC)wglGetProcAddress("glMultiTexSubImage3DEXT");
	glMultTransposeMatrixd = (PFNGLMULTTRANSPOSEMATRIXDPROC)wglGetProcAddress("glMultTransposeMatrixd");
	glMultTransposeMatrixdARB = (PFNGLMULTTRANSPOSEMATRIXDARBPROC)wglGetProcAddress("glMultTransposeMatrixdARB");
	glMultTransposeMatrixf = (PFNGLMULTTRANSPOSEMATRIXFPROC)wglGetProcAddress("glMultTransposeMatrixf");
	glMultTransposeMatrixfARB = (PFNGLMULTTRANSPOSEMATRIXFARBPROC)wglGetProcAddress("glMultTransposeMatrixfARB");
	glNamedBufferDataEXT = (PFNGLNAMEDBUFFERDATAEXTPROC)wglGetProcAddress("glNamedBufferDataEXT");
	glNamedBufferSubDataEXT = (PFNGLNAMEDBUFFERSUBDATAEXTPROC)wglGetProcAddress("glNamedBufferSubDataEXT");
	glNamedCopyBufferSubDataEXT = (PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)wglGetProcAddress("glNamedCopyBufferSubDataEXT");
	glNamedFramebufferRenderbufferEXT = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)wglGetProcAddress("glNamedFramebufferRenderbufferEXT");
	glNamedFramebufferTexture1DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)wglGetProcAddress("glNamedFramebufferTexture1DEXT");
	glNamedFramebufferTexture2DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)wglGetProcAddress("glNamedFramebufferTexture2DEXT");
	glNamedFramebufferTexture3DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)wglGetProcAddress("glNamedFramebufferTexture3DEXT");
	glNamedFramebufferTextureEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)wglGetProcAddress("glNamedFramebufferTextureEXT");
	glNamedFramebufferTextureFaceEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)wglGetProcAddress("glNamedFramebufferTextureFaceEXT");
	glNamedFramebufferTextureLayerEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)wglGetProcAddress("glNamedFramebufferTextureLayerEXT");
	glNamedProgramLocalParameter4dEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)wglGetProcAddress("glNamedProgramLocalParameter4dEXT");
	glNamedProgramLocalParameter4dvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)wglGetProcAddress("glNamedProgramLocalParameter4dvEXT");
	glNamedProgramLocalParameter4fEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)wglGetProcAddress("glNamedProgramLocalParameter4fEXT");
	glNamedProgramLocalParameter4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)wglGetProcAddress("glNamedProgramLocalParameter4fvEXT");
	glNamedProgramLocalParameterI4iEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)wglGetProcAddress("glNamedProgramLocalParameterI4iEXT");
	glNamedProgramLocalParameterI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)wglGetProcAddress("glNamedProgramLocalParameterI4ivEXT");
	glNamedProgramLocalParameterI4uiEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)wglGetProcAddress("glNamedProgramLocalParameterI4uiEXT");
	glNamedProgramLocalParameterI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)wglGetProcAddress("glNamedProgramLocalParameterI4uivEXT");
	glNamedProgramLocalParameters4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)wglGetProcAddress("glNamedProgramLocalParameters4fvEXT");
	glNamedProgramLocalParametersI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)wglGetProcAddress("glNamedProgramLocalParametersI4ivEXT");
	glNamedProgramLocalParametersI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)wglGetProcAddress("glNamedProgramLocalParametersI4uivEXT");
	glNamedProgramStringEXT = (PFNGLNAMEDPROGRAMSTRINGEXTPROC)wglGetProcAddress("glNamedProgramStringEXT");
	glNamedRenderbufferStorageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)wglGetProcAddress("glNamedRenderbufferStorageEXT");
	glNamedRenderbufferStorageMultisampleCoverageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)wglGetProcAddress("glNamedRenderbufferStorageMultisampleCoverageEXT");
	glNamedRenderbufferStorageMultisampleEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)wglGetProcAddress("glNamedRenderbufferStorageMultisampleEXT");
	glNamedStringARB = (PFNGLNAMEDSTRINGARBPROC)wglGetProcAddress("glNamedStringARB");
	glNormalP3ui = (PFNGLNORMALP3UIPROC)wglGetProcAddress("glNormalP3ui");
	glNormalP3uiv = (PFNGLNORMALP3UIVPROC)wglGetProcAddress("glNormalP3uiv");
	glNormalPointerEXT = (PFNGLNORMALPOINTEREXTPROC)wglGetProcAddress("glNormalPointerEXT");
	glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC)wglGetProcAddress("glPatchParameterfv");
	glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)wglGetProcAddress("glPatchParameteri");
	glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC)wglGetProcAddress("glPauseTransformFeedback");
	glPixelTransformParameterfEXT = (PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)wglGetProcAddress("glPixelTransformParameterfEXT");
	glPixelTransformParameterfvEXT = (PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)wglGetProcAddress("glPixelTransformParameterfvEXT");
	glPixelTransformParameteriEXT = (PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)wglGetProcAddress("glPixelTransformParameteriEXT");
	glPixelTransformParameterivEXT = (PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)wglGetProcAddress("glPixelTransformParameterivEXT");
	glPointParameterf = (PFNGLPOINTPARAMETERFPROC)wglGetProcAddress("glPointParameterf");
	glPointParameterfARB = (PFNGLPOINTPARAMETERFARBPROC)wglGetProcAddress("glPointParameterfARB");
	glPointParameterfEXT = (PFNGLPOINTPARAMETERFEXTPROC)wglGetProcAddress("glPointParameterfEXT");
	glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC)wglGetProcAddress("glPointParameterfv");
	glPointParameterfvARB = (PFNGLPOINTPARAMETERFVARBPROC)wglGetProcAddress("glPointParameterfvARB");
	glPointParameterfvEXT = (PFNGLPOINTPARAMETERFVEXTPROC)wglGetProcAddress("glPointParameterfvEXT");
	glPointParameteri = (PFNGLPOINTPARAMETERIPROC)wglGetProcAddress("glPointParameteri");
	glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC)wglGetProcAddress("glPointParameteriv");
	glPolygonOffsetEXT = (PFNGLPOLYGONOFFSETEXTPROC)wglGetProcAddress("glPolygonOffsetEXT");
	glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC)wglGetProcAddress("glPrimitiveRestartIndex");
	glPrioritizeTexturesEXT = (PFNGLPRIORITIZETEXTURESEXTPROC)wglGetProcAddress("glPrioritizeTexturesEXT");
	glProgramBinary = (PFNGLPROGRAMBINARYPROC)wglGetProcAddress("glProgramBinary");
	glProgramEnvParameter4dARB = (PFNGLPROGRAMENVPARAMETER4DARBPROC)wglGetProcAddress("glProgramEnvParameter4dARB");
	glProgramEnvParameter4dvARB = (PFNGLPROGRAMENVPARAMETER4DVARBPROC)wglGetProcAddress("glProgramEnvParameter4dvARB");
	glProgramEnvParameter4fARB = (PFNGLPROGRAMENVPARAMETER4FARBPROC)wglGetProcAddress("glProgramEnvParameter4fARB");
	glProgramEnvParameter4fvARB = (PFNGLPROGRAMENVPARAMETER4FVARBPROC)wglGetProcAddress("glProgramEnvParameter4fvARB");
	glProgramEnvParameters4fvEXT = (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)wglGetProcAddress("glProgramEnvParameters4fvEXT");
	glProgramLocalParameter4dARB = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC)wglGetProcAddress("glProgramLocalParameter4dARB");
	glProgramLocalParameter4dvARB = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)wglGetProcAddress("glProgramLocalParameter4dvARB");
	glProgramLocalParameter4fARB = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC)wglGetProcAddress("glProgramLocalParameter4fARB");
	glProgramLocalParameter4fvARB = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)wglGetProcAddress("glProgramLocalParameter4fvARB");
	glProgramLocalParameters4fvEXT = (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)wglGetProcAddress("glProgramLocalParameters4fvEXT");
	glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)wglGetProcAddress("glProgramParameteri");
	glProgramParameteriARB = (PFNGLPROGRAMPARAMETERIARBPROC)wglGetProcAddress("glProgramParameteriARB");
	glProgramParameteriEXT = (PFNGLPROGRAMPARAMETERIEXTPROC)wglGetProcAddress("glProgramParameteriEXT");
	glProgramStringARB = (PFNGLPROGRAMSTRINGARBPROC)wglGetProcAddress("glProgramStringARB");
	glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC)wglGetProcAddress("glProgramUniform1d");
	glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC)wglGetProcAddress("glProgramUniform1dv");
	glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC)wglGetProcAddress("glProgramUniform1f");
	glProgramUniform1fEXT = (PFNGLPROGRAMUNIFORM1FEXTPROC)wglGetProcAddress("glProgramUniform1fEXT");
	glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC)wglGetProcAddress("glProgramUniform1fv");
	glProgramUniform1fvEXT = (PFNGLPROGRAMUNIFORM1FVEXTPROC)wglGetProcAddress("glProgramUniform1fvEXT");
	glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC)wglGetProcAddress("glProgramUniform1i");
	glProgramUniform1iEXT = (PFNGLPROGRAMUNIFORM1IEXTPROC)wglGetProcAddress("glProgramUniform1iEXT");
	glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC)wglGetProcAddress("glProgramUniform1iv");
	glProgramUniform1ivEXT = (PFNGLPROGRAMUNIFORM1IVEXTPROC)wglGetProcAddress("glProgramUniform1ivEXT");
	glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC)wglGetProcAddress("glProgramUniform1ui");
	glProgramUniform1uiEXT = (PFNGLPROGRAMUNIFORM1UIEXTPROC)wglGetProcAddress("glProgramUniform1uiEXT");
	glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC)wglGetProcAddress("glProgramUniform1uiv");
	glProgramUniform1uivEXT = (PFNGLPROGRAMUNIFORM1UIVEXTPROC)wglGetProcAddress("glProgramUniform1uivEXT");
	glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC)wglGetProcAddress("glProgramUniform2d");
	glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC)wglGetProcAddress("glProgramUniform2dv");
	glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC)wglGetProcAddress("glProgramUniform2f");
	glProgramUniform2fEXT = (PFNGLPROGRAMUNIFORM2FEXTPROC)wglGetProcAddress("glProgramUniform2fEXT");
	glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC)wglGetProcAddress("glProgramUniform2fv");
	glProgramUniform2fvEXT = (PFNGLPROGRAMUNIFORM2FVEXTPROC)wglGetProcAddress("glProgramUniform2fvEXT");
	glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC)wglGetProcAddress("glProgramUniform2i");
	glProgramUniform2iEXT = (PFNGLPROGRAMUNIFORM2IEXTPROC)wglGetProcAddress("glProgramUniform2iEXT");
	glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC)wglGetProcAddress("glProgramUniform2iv");
	glProgramUniform2ivEXT = (PFNGLPROGRAMUNIFORM2IVEXTPROC)wglGetProcAddress("glProgramUniform2ivEXT");
	glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC)wglGetProcAddress("glProgramUniform2ui");
	glProgramUniform2uiEXT = (PFNGLPROGRAMUNIFORM2UIEXTPROC)wglGetProcAddress("glProgramUniform2uiEXT");
	glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC)wglGetProcAddress("glProgramUniform2uiv");
	glProgramUniform2uivEXT = (PFNGLPROGRAMUNIFORM2UIVEXTPROC)wglGetProcAddress("glProgramUniform2uivEXT");
	glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC)wglGetProcAddress("glProgramUniform3d");
	glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC)wglGetProcAddress("glProgramUniform3dv");
	glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC)wglGetProcAddress("glProgramUniform3f");
	glProgramUniform3fEXT = (PFNGLPROGRAMUNIFORM3FEXTPROC)wglGetProcAddress("glProgramUniform3fEXT");
	glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC)wglGetProcAddress("glProgramUniform3fv");
	glProgramUniform3fvEXT = (PFNGLPROGRAMUNIFORM3FVEXTPROC)wglGetProcAddress("glProgramUniform3fvEXT");
	glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC)wglGetProcAddress("glProgramUniform3i");
	glProgramUniform3iEXT = (PFNGLPROGRAMUNIFORM3IEXTPROC)wglGetProcAddress("glProgramUniform3iEXT");
	glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC)wglGetProcAddress("glProgramUniform3iv");
	glProgramUniform3ivEXT = (PFNGLPROGRAMUNIFORM3IVEXTPROC)wglGetProcAddress("glProgramUniform3ivEXT");
	glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC)wglGetProcAddress("glProgramUniform3ui");
	glProgramUniform3uiEXT = (PFNGLPROGRAMUNIFORM3UIEXTPROC)wglGetProcAddress("glProgramUniform3uiEXT");
	glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC)wglGetProcAddress("glProgramUniform3uiv");
	glProgramUniform3uivEXT = (PFNGLPROGRAMUNIFORM3UIVEXTPROC)wglGetProcAddress("glProgramUniform3uivEXT");
	glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC)wglGetProcAddress("glProgramUniform4d");
	glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC)wglGetProcAddress("glProgramUniform4dv");
	glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC)wglGetProcAddress("glProgramUniform4f");
	glProgramUniform4fEXT = (PFNGLPROGRAMUNIFORM4FEXTPROC)wglGetProcAddress("glProgramUniform4fEXT");
	glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC)wglGetProcAddress("glProgramUniform4fv");
	glProgramUniform4fvEXT = (PFNGLPROGRAMUNIFORM4FVEXTPROC)wglGetProcAddress("glProgramUniform4fvEXT");
	glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC)wglGetProcAddress("glProgramUniform4i");
	glProgramUniform4iEXT = (PFNGLPROGRAMUNIFORM4IEXTPROC)wglGetProcAddress("glProgramUniform4iEXT");
	glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC)wglGetProcAddress("glProgramUniform4iv");
	glProgramUniform4ivEXT = (PFNGLPROGRAMUNIFORM4IVEXTPROC)wglGetProcAddress("glProgramUniform4ivEXT");
	glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC)wglGetProcAddress("glProgramUniform4ui");
	glProgramUniform4uiEXT = (PFNGLPROGRAMUNIFORM4UIEXTPROC)wglGetProcAddress("glProgramUniform4uiEXT");
	glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC)wglGetProcAddress("glProgramUniform4uiv");
	glProgramUniform4uivEXT = (PFNGLPROGRAMUNIFORM4UIVEXTPROC)wglGetProcAddress("glProgramUniform4uivEXT");
	glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)wglGetProcAddress("glProgramUniformMatrix2dv");
	glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)wglGetProcAddress("glProgramUniformMatrix2fv");
	glProgramUniformMatrix2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)wglGetProcAddress("glProgramUniformMatrix2fvEXT");
	glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)wglGetProcAddress("glProgramUniformMatrix2x3dv");
	glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)wglGetProcAddress("glProgramUniformMatrix2x3fv");
	glProgramUniformMatrix2x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)wglGetProcAddress("glProgramUniformMatrix2x3fvEXT");
	glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)wglGetProcAddress("glProgramUniformMatrix2x4dv");
	glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)wglGetProcAddress("glProgramUniformMatrix2x4fv");
	glProgramUniformMatrix2x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)wglGetProcAddress("glProgramUniformMatrix2x4fvEXT");
	glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)wglGetProcAddress("glProgramUniformMatrix3dv");
	glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)wglGetProcAddress("glProgramUniformMatrix3fv");
	glProgramUniformMatrix3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)wglGetProcAddress("glProgramUniformMatrix3fvEXT");
	glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)wglGetProcAddress("glProgramUniformMatrix3x2dv");
	glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)wglGetProcAddress("glProgramUniformMatrix3x2fv");
	glProgramUniformMatrix3x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)wglGetProcAddress("glProgramUniformMatrix3x2fvEXT");
	glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)wglGetProcAddress("glProgramUniformMatrix3x4dv");
	glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)wglGetProcAddress("glProgramUniformMatrix3x4fv");
	glProgramUniformMatrix3x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)wglGetProcAddress("glProgramUniformMatrix3x4fvEXT");
	glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)wglGetProcAddress("glProgramUniformMatrix4dv");
	glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)wglGetProcAddress("glProgramUniformMatrix4fv");
	glProgramUniformMatrix4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)wglGetProcAddress("glProgramUniformMatrix4fvEXT");
	glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)wglGetProcAddress("glProgramUniformMatrix4x2dv");
	glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)wglGetProcAddress("glProgramUniformMatrix4x2fv");
	glProgramUniformMatrix4x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)wglGetProcAddress("glProgramUniformMatrix4x2fvEXT");
	glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)wglGetProcAddress("glProgramUniformMatrix4x3dv");
	glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)wglGetProcAddress("glProgramUniformMatrix4x3fv");
	glProgramUniformMatrix4x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)wglGetProcAddress("glProgramUniformMatrix4x3fvEXT");
	glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)wglGetProcAddress("glProvokingVertex");
	glProvokingVertexEXT = (PFNGLPROVOKINGVERTEXEXTPROC)wglGetProcAddress("glProvokingVertexEXT");
	glPushClientAttribDefaultEXT = (PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)wglGetProcAddress("glPushClientAttribDefaultEXT");
	glQueryCounter = (PFNGLQUERYCOUNTERPROC)wglGetProcAddress("glQueryCounter");
	glReadnPixelsARB = (PFNGLREADNPIXELSARBPROC)wglGetProcAddress("glReadnPixelsARB");
	glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC)wglGetProcAddress("glReleaseShaderCompiler");
	glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)wglGetProcAddress("glRenderbufferStorage");
	glRenderbufferStorageEXT = (PFNGLRENDERBUFFERSTORAGEEXTPROC)wglGetProcAddress("glRenderbufferStorageEXT");
	glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)wglGetProcAddress("glRenderbufferStorageMultisample");
	glRenderbufferStorageMultisampleEXT = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)wglGetProcAddress("glRenderbufferStorageMultisampleEXT");
	glResetHistogram = (PFNGLRESETHISTOGRAMPROC)wglGetProcAddress("glResetHistogram");
	glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC)wglGetProcAddress("glResetHistogramEXT");
	glResetMinmax = (PFNGLRESETMINMAXPROC)wglGetProcAddress("glResetMinmax");
	glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)wglGetProcAddress("glResetMinmaxEXT");
	glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC)wglGetProcAddress("glResumeTransformFeedback");
	glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)wglGetProcAddress("glSampleCoverage");
	glSampleCoverageARB = (PFNGLSAMPLECOVERAGEARBPROC)wglGetProcAddress("glSampleCoverageARB");
	glSampleMaskEXT = (PFNGLSAMPLEMASKEXTPROC)wglGetProcAddress("glSampleMaskEXT");
	glSampleMaski = (PFNGLSAMPLEMASKIPROC)wglGetProcAddress("glSampleMaski");
	glSamplePatternEXT = (PFNGLSAMPLEPATTERNEXTPROC)wglGetProcAddress("glSamplePatternEXT");
	glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)wglGetProcAddress("glSamplerParameterf");
	glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)wglGetProcAddress("glSamplerParameterfv");
	glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)wglGetProcAddress("glSamplerParameteri");
	glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)wglGetProcAddress("glSamplerParameterIiv");
	glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)wglGetProcAddress("glSamplerParameterIuiv");
	glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)wglGetProcAddress("glSamplerParameteriv");
	glScissorArrayv = (PFNGLSCISSORARRAYVPROC)wglGetProcAddress("glScissorArrayv");
	glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)wglGetProcAddress("glScissorIndexed");
	glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)wglGetProcAddress("glScissorIndexedv");
	glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC)wglGetProcAddress("glSecondaryColor3b");
	glSecondaryColor3bEXT = (PFNGLSECONDARYCOLOR3BEXTPROC)wglGetProcAddress("glSecondaryColor3bEXT");
	glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC)wglGetProcAddress("glSecondaryColor3bv");
	glSecondaryColor3bvEXT = (PFNGLSECONDARYCOLOR3BVEXTPROC)wglGetProcAddress("glSecondaryColor3bvEXT");
	glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC)wglGetProcAddress("glSecondaryColor3d");
	glSecondaryColor3dEXT = (PFNGLSECONDARYCOLOR3DEXTPROC)wglGetProcAddress("glSecondaryColor3dEXT");
	glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC)wglGetProcAddress("glSecondaryColor3dv");
	glSecondaryColor3dvEXT = (PFNGLSECONDARYCOLOR3DVEXTPROC)wglGetProcAddress("glSecondaryColor3dvEXT");
	glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC)wglGetProcAddress("glSecondaryColor3f");
	glSecondaryColor3fEXT = (PFNGLSECONDARYCOLOR3FEXTPROC)wglGetProcAddress("glSecondaryColor3fEXT");
	glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC)wglGetProcAddress("glSecondaryColor3fv");
	glSecondaryColor3fvEXT = (PFNGLSECONDARYCOLOR3FVEXTPROC)wglGetProcAddress("glSecondaryColor3fvEXT");
	glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC)wglGetProcAddress("glSecondaryColor3i");
	glSecondaryColor3iEXT = (PFNGLSECONDARYCOLOR3IEXTPROC)wglGetProcAddress("glSecondaryColor3iEXT");
	glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC)wglGetProcAddress("glSecondaryColor3iv");
	glSecondaryColor3ivEXT = (PFNGLSECONDARYCOLOR3IVEXTPROC)wglGetProcAddress("glSecondaryColor3ivEXT");
	glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC)wglGetProcAddress("glSecondaryColor3s");
	glSecondaryColor3sEXT = (PFNGLSECONDARYCOLOR3SEXTPROC)wglGetProcAddress("glSecondaryColor3sEXT");
	glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC)wglGetProcAddress("glSecondaryColor3sv");
	glSecondaryColor3svEXT = (PFNGLSECONDARYCOLOR3SVEXTPROC)wglGetProcAddress("glSecondaryColor3svEXT");
	glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC)wglGetProcAddress("glSecondaryColor3ub");
	glSecondaryColor3ubEXT = (PFNGLSECONDARYCOLOR3UBEXTPROC)wglGetProcAddress("glSecondaryColor3ubEXT");
	glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC)wglGetProcAddress("glSecondaryColor3ubv");
	glSecondaryColor3ubvEXT = (PFNGLSECONDARYCOLOR3UBVEXTPROC)wglGetProcAddress("glSecondaryColor3ubvEXT");
	glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC)wglGetProcAddress("glSecondaryColor3ui");
	glSecondaryColor3uiEXT = (PFNGLSECONDARYCOLOR3UIEXTPROC)wglGetProcAddress("glSecondaryColor3uiEXT");
	glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC)wglGetProcAddress("glSecondaryColor3uiv");
	glSecondaryColor3uivEXT = (PFNGLSECONDARYCOLOR3UIVEXTPROC)wglGetProcAddress("glSecondaryColor3uivEXT");
	glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC)wglGetProcAddress("glSecondaryColor3us");
	glSecondaryColor3usEXT = (PFNGLSECONDARYCOLOR3USEXTPROC)wglGetProcAddress("glSecondaryColor3usEXT");
	glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC)wglGetProcAddress("glSecondaryColor3usv");
	glSecondaryColor3usvEXT = (PFNGLSECONDARYCOLOR3USVEXTPROC)wglGetProcAddress("glSecondaryColor3usvEXT");
	glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC)wglGetProcAddress("glSecondaryColorP3ui");
	glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC)wglGetProcAddress("glSecondaryColorP3uiv");
	glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC)wglGetProcAddress("glSecondaryColorPointer");
	glSecondaryColorPointerEXT = (PFNGLSECONDARYCOLORPOINTEREXTPROC)wglGetProcAddress("glSecondaryColorPointerEXT");
	glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC)wglGetProcAddress("glSeparableFilter2D");
	glSeparableFilter2DEXT = (PFNGLSEPARABLEFILTER2DEXTPROC)wglGetProcAddress("glSeparableFilter2DEXT");
	glSetInvariantEXT = (PFNGLSETINVARIANTEXTPROC)wglGetProcAddress("glSetInvariantEXT");
	glSetLocalConstantEXT = (PFNGLSETLOCALCONSTANTEXTPROC)wglGetProcAddress("glSetLocalConstantEXT");
	glShaderBinary = (PFNGLSHADERBINARYPROC)wglGetProcAddress("glShaderBinary");
	glShaderOp1EXT = (PFNGLSHADEROP1EXTPROC)wglGetProcAddress("glShaderOp1EXT");
	glShaderOp2EXT = (PFNGLSHADEROP2EXTPROC)wglGetProcAddress("glShaderOp2EXT");
	glShaderOp3EXT = (PFNGLSHADEROP3EXTPROC)wglGetProcAddress("glShaderOp3EXT");
	glShaderSource = (PFNGLSHADERSOURCEPROC)wglGetProcAddress("glShaderSource");
	glShaderSourceARB = (PFNGLSHADERSOURCEARBPROC)wglGetProcAddress("glShaderSourceARB");
	glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC)wglGetProcAddress("glStencilFuncSeparate");
	glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC)wglGetProcAddress("glStencilMaskSeparate");
	glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC)wglGetProcAddress("glStencilOpSeparate");
	glSwizzleEXT = (PFNGLSWIZZLEEXTPROC)wglGetProcAddress("glSwizzleEXT");
	glTangentPointerEXT = (PFNGLTANGENTPOINTEREXTPROC)wglGetProcAddress("glTangentPointerEXT");
	glTbufferMask3DFX = (PFNGLTBUFFERMASK3DFXPROC)wglGetProcAddress("glTbufferMask3DFX");
	glTexBuffer = (PFNGLTEXBUFFERPROC)wglGetProcAddress("glTexBuffer");
	glTexBufferARB = (PFNGLTEXBUFFERARBPROC)wglGetProcAddress("glTexBufferARB");
	glTexBufferEXT = (PFNGLTEXBUFFEREXTPROC)wglGetProcAddress("glTexBufferEXT");
	glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)wglGetProcAddress("glTexCoordP1ui");
	glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)wglGetProcAddress("glTexCoordP1uiv");
	glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)wglGetProcAddress("glTexCoordP2ui");
	glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)wglGetProcAddress("glTexCoordP2uiv");
	glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)wglGetProcAddress("glTexCoordP3ui");
	glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)wglGetProcAddress("glTexCoordP3uiv");
	glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)wglGetProcAddress("glTexCoordP4ui");
	glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)wglGetProcAddress("glTexCoordP4uiv");
	glTexCoordPointerEXT = (PFNGLTEXCOORDPOINTEREXTPROC)wglGetProcAddress("glTexCoordPointerEXT");
	glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)wglGetProcAddress("glTexImage2DMultisample");
	glTexImage3D = (PFNGLTEXIMAGE3DPROC)wglGetProcAddress("glTexImage3D");
	glTexImage3DEXT = (PFNGLTEXIMAGE3DEXTPROC)wglGetProcAddress("glTexImage3DEXT");
	glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)wglGetProcAddress("glTexImage3DMultisample");
	glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)wglGetProcAddress("glTexParameterIiv");
	glTexParameterIivEXT = (PFNGLTEXPARAMETERIIVEXTPROC)wglGetProcAddress("glTexParameterIivEXT");
	glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC)wglGetProcAddress("glTexParameterIuiv");
	glTexParameterIuivEXT = (PFNGLTEXPARAMETERIUIVEXTPROC)wglGetProcAddress("glTexParameterIuivEXT");
	glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)wglGetProcAddress("glTexStorage1D");
	glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)wglGetProcAddress("glTexStorage2D");
	glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)wglGetProcAddress("glTexStorage3D");
	glTexSubImage1DEXT = (PFNGLTEXSUBIMAGE1DEXTPROC)wglGetProcAddress("glTexSubImage1DEXT");
	glTexSubImage2DEXT = (PFNGLTEXSUBIMAGE2DEXTPROC)wglGetProcAddress("glTexSubImage2DEXT");
	glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)wglGetProcAddress("glTexSubImage3D");
	glTexSubImage3DEXT = (PFNGLTEXSUBIMAGE3DEXTPROC)wglGetProcAddress("glTexSubImage3DEXT");
	glTextureBufferEXT = (PFNGLTEXTUREBUFFEREXTPROC)wglGetProcAddress("glTextureBufferEXT");
	glTextureImage1DEXT = (PFNGLTEXTUREIMAGE1DEXTPROC)wglGetProcAddress("glTextureImage1DEXT");
	glTextureImage2DEXT = (PFNGLTEXTUREIMAGE2DEXTPROC)wglGetProcAddress("glTextureImage2DEXT");
	glTextureImage3DEXT = (PFNGLTEXTUREIMAGE3DEXTPROC)wglGetProcAddress("glTextureImage3DEXT");
	glTextureLightEXT = (PFNGLTEXTURELIGHTEXTPROC)wglGetProcAddress("glTextureLightEXT");
	glTextureMaterialEXT = (PFNGLTEXTUREMATERIALEXTPROC)wglGetProcAddress("glTextureMaterialEXT");
	glTextureNormalEXT = (PFNGLTEXTURENORMALEXTPROC)wglGetProcAddress("glTextureNormalEXT");
	glTextureParameterfEXT = (PFNGLTEXTUREPARAMETERFEXTPROC)wglGetProcAddress("glTextureParameterfEXT");
	glTextureParameterfvEXT = (PFNGLTEXTUREPARAMETERFVEXTPROC)wglGetProcAddress("glTextureParameterfvEXT");
	glTextureParameteriEXT = (PFNGLTEXTUREPARAMETERIEXTPROC)wglGetProcAddress("glTextureParameteriEXT");
	glTextureParameterIivEXT = (PFNGLTEXTUREPARAMETERIIVEXTPROC)wglGetProcAddress("glTextureParameterIivEXT");
	glTextureParameterIuivEXT = (PFNGLTEXTUREPARAMETERIUIVEXTPROC)wglGetProcAddress("glTextureParameterIuivEXT");
	glTextureParameterivEXT = (PFNGLTEXTUREPARAMETERIVEXTPROC)wglGetProcAddress("glTextureParameterivEXT");
	glTextureRenderbufferEXT = (PFNGLTEXTURERENDERBUFFEREXTPROC)wglGetProcAddress("glTextureRenderbufferEXT");
	glTextureStorage1DEXT = (PFNGLTEXTURESTORAGE1DEXTPROC)wglGetProcAddress("glTextureStorage1DEXT");
	glTextureStorage2DEXT = (PFNGLTEXTURESTORAGE2DEXTPROC)wglGetProcAddress("glTextureStorage2DEXT");
	glTextureStorage3DEXT = (PFNGLTEXTURESTORAGE3DEXTPROC)wglGetProcAddress("glTextureStorage3DEXT");
	glTextureSubImage1DEXT = (PFNGLTEXTURESUBIMAGE1DEXTPROC)wglGetProcAddress("glTextureSubImage1DEXT");
	glTextureSubImage2DEXT = (PFNGLTEXTURESUBIMAGE2DEXTPROC)wglGetProcAddress("glTextureSubImage2DEXT");
	glTextureSubImage3DEXT = (PFNGLTEXTURESUBIMAGE3DEXTPROC)wglGetProcAddress("glTextureSubImage3DEXT");
	glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)wglGetProcAddress("glTransformFeedbackVaryings");
	glTransformFeedbackVaryingsEXT = (PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)wglGetProcAddress("glTransformFeedbackVaryingsEXT");
	glUniform1d = (PFNGLUNIFORM1DPROC)wglGetProcAddress("glUniform1d");
	glUniform1dv = (PFNGLUNIFORM1DVPROC)wglGetProcAddress("glUniform1dv");
	glUniform1f = (PFNGLUNIFORM1FPROC)wglGetProcAddress("glUniform1f");
	glUniform1fARB = (PFNGLUNIFORM1FARBPROC)wglGetProcAddress("glUniform1fARB");
	glUniform1fv = (PFNGLUNIFORM1FVPROC)wglGetProcAddress("glUniform1fv");
	glUniform1fvARB = (PFNGLUNIFORM1FVARBPROC)wglGetProcAddress("glUniform1fvARB");
	glUniform1i = (PFNGLUNIFORM1IPROC)wglGetProcAddress("glUniform1i");
	glUniform1iARB = (PFNGLUNIFORM1IARBPROC)wglGetProcAddress("glUniform1iARB");
	glUniform1iv = (PFNGLUNIFORM1IVPROC)wglGetProcAddress("glUniform1iv");
	glUniform1ivARB = (PFNGLUNIFORM1IVARBPROC)wglGetProcAddress("glUniform1ivARB");
	glUniform1ui = (PFNGLUNIFORM1UIPROC)wglGetProcAddress("glUniform1ui");
	glUniform1uiEXT = (PFNGLUNIFORM1UIEXTPROC)wglGetProcAddress("glUniform1uiEXT");
	glUniform1uiv = (PFNGLUNIFORM1UIVPROC)wglGetProcAddress("glUniform1uiv");
	glUniform1uivEXT = (PFNGLUNIFORM1UIVEXTPROC)wglGetProcAddress("glUniform1uivEXT");
	glUniform2d = (PFNGLUNIFORM2DPROC)wglGetProcAddress("glUniform2d");
	glUniform2dv = (PFNGLUNIFORM2DVPROC)wglGetProcAddress("glUniform2dv");
	glUniform2f = (PFNGLUNIFORM2FPROC)wglGetProcAddress("glUniform2f");
	glUniform2fARB = (PFNGLUNIFORM2FARBPROC)wglGetProcAddress("glUniform2fARB");
	glUniform2fv = (PFNGLUNIFORM2FVPROC)wglGetProcAddress("glUniform2fv");
	glUniform2fvARB = (PFNGLUNIFORM2FVARBPROC)wglGetProcAddress("glUniform2fvARB");
	glUniform2i = (PFNGLUNIFORM2IPROC)wglGetProcAddress("glUniform2i");
	glUniform2iARB = (PFNGLUNIFORM2IARBPROC)wglGetProcAddress("glUniform2iARB");
	glUniform2iv = (PFNGLUNIFORM2IVPROC)wglGetProcAddress("glUniform2iv");
	glUniform2ivARB = (PFNGLUNIFORM2IVARBPROC)wglGetProcAddress("glUniform2ivARB");
	glUniform2ui = (PFNGLUNIFORM2UIPROC)wglGetProcAddress("glUniform2ui");
	glUniform2uiEXT = (PFNGLUNIFORM2UIEXTPROC)wglGetProcAddress("glUniform2uiEXT");
	glUniform2uiv = (PFNGLUNIFORM2UIVPROC)wglGetProcAddress("glUniform2uiv");
	glUniform2uivEXT = (PFNGLUNIFORM2UIVEXTPROC)wglGetProcAddress("glUniform2uivEXT");
	glUniform3d = (PFNGLUNIFORM3DPROC)wglGetProcAddress("glUniform3d");
	glUniform3dv = (PFNGLUNIFORM3DVPROC)wglGetProcAddress("glUniform3dv");
	glUniform3f = (PFNGLUNIFORM3FPROC)wglGetProcAddress("glUniform3f");
	glUniform3fARB = (PFNGLUNIFORM3FARBPROC)wglGetProcAddress("glUniform3fARB");
	glUniform3fv = (PFNGLUNIFORM3FVPROC)wglGetProcAddress("glUniform3fv");
	glUniform3fvARB = (PFNGLUNIFORM3FVARBPROC)wglGetProcAddress("glUniform3fvARB");
	glUniform3i = (PFNGLUNIFORM3IPROC)wglGetProcAddress("glUniform3i");
	glUniform3iARB = (PFNGLUNIFORM3IARBPROC)wglGetProcAddress("glUniform3iARB");
	glUniform3iv = (PFNGLUNIFORM3IVPROC)wglGetProcAddress("glUniform3iv");
	glUniform3ivARB = (PFNGLUNIFORM3IVARBPROC)wglGetProcAddress("glUniform3ivARB");
	glUniform3ui = (PFNGLUNIFORM3UIPROC)wglGetProcAddress("glUniform3ui");
	glUniform3uiEXT = (PFNGLUNIFORM3UIEXTPROC)wglGetProcAddress("glUniform3uiEXT");
	glUniform3uiv = (PFNGLUNIFORM3UIVPROC)wglGetProcAddress("glUniform3uiv");
	glUniform3uivEXT = (PFNGLUNIFORM3UIVEXTPROC)wglGetProcAddress("glUniform3uivEXT");
	glUniform4d = (PFNGLUNIFORM4DPROC)wglGetProcAddress("glUniform4d");
	glUniform4dv = (PFNGLUNIFORM4DVPROC)wglGetProcAddress("glUniform4dv");
	glUniform4f = (PFNGLUNIFORM4FPROC)wglGetProcAddress("glUniform4f");
	glUniform4fARB = (PFNGLUNIFORM4FARBPROC)wglGetProcAddress("glUniform4fARB");
	glUniform4fv = (PFNGLUNIFORM4FVPROC)wglGetProcAddress("glUniform4fv");
	glUniform4fvARB = (PFNGLUNIFORM4FVARBPROC)wglGetProcAddress("glUniform4fvARB");
	glUniform4i = (PFNGLUNIFORM4IPROC)wglGetProcAddress("glUniform4i");
	glUniform4iARB = (PFNGLUNIFORM4IARBPROC)wglGetProcAddress("glUniform4iARB");
	glUniform4iv = (PFNGLUNIFORM4IVPROC)wglGetProcAddress("glUniform4iv");
	glUniform4ivARB = (PFNGLUNIFORM4IVARBPROC)wglGetProcAddress("glUniform4ivARB");
	glUniform4ui = (PFNGLUNIFORM4UIPROC)wglGetProcAddress("glUniform4ui");
	glUniform4uiEXT = (PFNGLUNIFORM4UIEXTPROC)wglGetProcAddress("glUniform4uiEXT");
	glUniform4uiv = (PFNGLUNIFORM4UIVPROC)wglGetProcAddress("glUniform4uiv");
	glUniform4uivEXT = (PFNGLUNIFORM4UIVEXTPROC)wglGetProcAddress("glUniform4uivEXT");
	glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)wglGetProcAddress("glUniformBlockBinding");
	glUniformBufferEXT = (PFNGLUNIFORMBUFFEREXTPROC)wglGetProcAddress("glUniformBufferEXT");
	glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC)wglGetProcAddress("glUniformMatrix2dv");
	glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)wglGetProcAddress("glUniformMatrix2fv");
	glUniformMatrix2fvARB = (PFNGLUNIFORMMATRIX2FVARBPROC)wglGetProcAddress("glUniformMatrix2fvARB");
	glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC)wglGetProcAddress("glUniformMatrix2x3dv");
	glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC)wglGetProcAddress("glUniformMatrix2x3fv");
	glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC)wglGetProcAddress("glUniformMatrix2x4dv");
	glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC)wglGetProcAddress("glUniformMatrix2x4fv");
	glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC)wglGetProcAddress("glUniformMatrix3dv");
	glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)wglGetProcAddress("glUniformMatrix3fv");
	glUniformMatrix3fvARB = (PFNGLUNIFORMMATRIX3FVARBPROC)wglGetProcAddress("glUniformMatrix3fvARB");
	glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC)wglGetProcAddress("glUniformMatrix3x2dv");
	glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC)wglGetProcAddress("glUniformMatrix3x2fv");
	glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC)wglGetProcAddress("glUniformMatrix3x4dv");
	glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC)wglGetProcAddress("glUniformMatrix3x4fv");
	glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC)wglGetProcAddress("glUniformMatrix4dv");
	glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)wglGetProcAddress("glUniformMatrix4fv");
	glUniformMatrix4fvARB = (PFNGLUNIFORMMATRIX4FVARBPROC)wglGetProcAddress("glUniformMatrix4fvARB");
	glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC)wglGetProcAddress("glUniformMatrix4x2dv");
	glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC)wglGetProcAddress("glUniformMatrix4x2fv");
	glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC)wglGetProcAddress("glUniformMatrix4x3dv");
	glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC)wglGetProcAddress("glUniformMatrix4x3fv");
	glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC)wglGetProcAddress("glUniformSubroutinesuiv");
	glUnlockArraysEXT = (PFNGLUNLOCKARRAYSEXTPROC)wglGetProcAddress("glUnlockArraysEXT");
	glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)wglGetProcAddress("glUnmapBuffer");
	glUnmapBufferARB = (PFNGLUNMAPBUFFERARBPROC)wglGetProcAddress("glUnmapBufferARB");
	glUnmapNamedBufferEXT = (PFNGLUNMAPNAMEDBUFFEREXTPROC)wglGetProcAddress("glUnmapNamedBufferEXT");
	glUseProgram = (PFNGLUSEPROGRAMPROC)wglGetProcAddress("glUseProgram");
	glUseProgramObjectARB = (PFNGLUSEPROGRAMOBJECTARBPROC)wglGetProcAddress("glUseProgramObjectARB");
	glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC)wglGetProcAddress("glUseProgramStages");
	glUseShaderProgramEXT = (PFNGLUSESHADERPROGRAMEXTPROC)wglGetProcAddress("glUseShaderProgramEXT");
	glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)wglGetProcAddress("glValidateProgram");
	glValidateProgramARB = (PFNGLVALIDATEPROGRAMARBPROC)wglGetProcAddress("glValidateProgramARB");
	glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC)wglGetProcAddress("glValidateProgramPipeline");
	glVariantbvEXT = (PFNGLVARIANTBVEXTPROC)wglGetProcAddress("glVariantbvEXT");
	glVariantdvEXT = (PFNGLVARIANTDVEXTPROC)wglGetProcAddress("glVariantdvEXT");
	glVariantfvEXT = (PFNGLVARIANTFVEXTPROC)wglGetProcAddress("glVariantfvEXT");
	glVariantivEXT = (PFNGLVARIANTIVEXTPROC)wglGetProcAddress("glVariantivEXT");
	glVariantPointerEXT = (PFNGLVARIANTPOINTEREXTPROC)wglGetProcAddress("glVariantPointerEXT");
	glVariantsvEXT = (PFNGLVARIANTSVEXTPROC)wglGetProcAddress("glVariantsvEXT");
	glVariantubvEXT = (PFNGLVARIANTUBVEXTPROC)wglGetProcAddress("glVariantubvEXT");
	glVariantuivEXT = (PFNGLVARIANTUIVEXTPROC)wglGetProcAddress("glVariantuivEXT");
	glVariantusvEXT = (PFNGLVARIANTUSVEXTPROC)wglGetProcAddress("glVariantusvEXT");
	glVertexArrayVertexAttribLOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)wglGetProcAddress("glVertexArrayVertexAttribLOffsetEXT");
	glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)wglGetProcAddress("glVertexAttrib1d");
	glVertexAttrib1dARB = (PFNGLVERTEXATTRIB1DARBPROC)wglGetProcAddress("glVertexAttrib1dARB");
	glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)wglGetProcAddress("glVertexAttrib1dv");
	glVertexAttrib1dvARB = (PFNGLVERTEXATTRIB1DVARBPROC)wglGetProcAddress("glVertexAttrib1dvARB");
	glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)wglGetProcAddress("glVertexAttrib1f");
	glVertexAttrib1fARB = (PFNGLVERTEXATTRIB1FARBPROC)wglGetProcAddress("glVertexAttrib1fARB");
	glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)wglGetProcAddress("glVertexAttrib1fv");
	glVertexAttrib1fvARB = (PFNGLVERTEXATTRIB1FVARBPROC)wglGetProcAddress("glVertexAttrib1fvARB");
	glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)wglGetProcAddress("glVertexAttrib1s");
	glVertexAttrib1sARB = (PFNGLVERTEXATTRIB1SARBPROC)wglGetProcAddress("glVertexAttrib1sARB");
	glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)wglGetProcAddress("glVertexAttrib1sv");
	glVertexAttrib1svARB = (PFNGLVERTEXATTRIB1SVARBPROC)wglGetProcAddress("glVertexAttrib1svARB");
	glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)wglGetProcAddress("glVertexAttrib2d");
	glVertexAttrib2dARB = (PFNGLVERTEXATTRIB2DARBPROC)wglGetProcAddress("glVertexAttrib2dARB");
	glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)wglGetProcAddress("glVertexAttrib2dv");
	glVertexAttrib2dvARB = (PFNGLVERTEXATTRIB2DVARBPROC)wglGetProcAddress("glVertexAttrib2dvARB");
	glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)wglGetProcAddress("glVertexAttrib2f");
	glVertexAttrib2fARB = (PFNGLVERTEXATTRIB2FARBPROC)wglGetProcAddress("glVertexAttrib2fARB");
	glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)wglGetProcAddress("glVertexAttrib2fv");
	glVertexAttrib2fvARB = (PFNGLVERTEXATTRIB2FVARBPROC)wglGetProcAddress("glVertexAttrib2fvARB");
	glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)wglGetProcAddress("glVertexAttrib2s");
	glVertexAttrib2sARB = (PFNGLVERTEXATTRIB2SARBPROC)wglGetProcAddress("glVertexAttrib2sARB");
	glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)wglGetProcAddress("glVertexAttrib2sv");
	glVertexAttrib2svARB = (PFNGLVERTEXATTRIB2SVARBPROC)wglGetProcAddress("glVertexAttrib2svARB");
	glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)wglGetProcAddress("glVertexAttrib3d");
	glVertexAttrib3dARB = (PFNGLVERTEXATTRIB3DARBPROC)wglGetProcAddress("glVertexAttrib3dARB");
	glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)wglGetProcAddress("glVertexAttrib3dv");
	glVertexAttrib3dvARB = (PFNGLVERTEXATTRIB3DVARBPROC)wglGetProcAddress("glVertexAttrib3dvARB");
	glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)wglGetProcAddress("glVertexAttrib3f");
	glVertexAttrib3fARB = (PFNGLVERTEXATTRIB3FARBPROC)wglGetProcAddress("glVertexAttrib3fARB");
	glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)wglGetProcAddress("glVertexAttrib3fv");
	glVertexAttrib3fvARB = (PFNGLVERTEXATTRIB3FVARBPROC)wglGetProcAddress("glVertexAttrib3fvARB");
	glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)wglGetProcAddress("glVertexAttrib3s");
	glVertexAttrib3sARB = (PFNGLVERTEXATTRIB3SARBPROC)wglGetProcAddress("glVertexAttrib3sARB");
	glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)wglGetProcAddress("glVertexAttrib3sv");
	glVertexAttrib3svARB = (PFNGLVERTEXATTRIB3SVARBPROC)wglGetProcAddress("glVertexAttrib3svARB");
	glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)wglGetProcAddress("glVertexAttrib4bv");
	glVertexAttrib4bvARB = (PFNGLVERTEXATTRIB4BVARBPROC)wglGetProcAddress("glVertexAttrib4bvARB");
	glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)wglGetProcAddress("glVertexAttrib4d");
	glVertexAttrib4dARB = (PFNGLVERTEXATTRIB4DARBPROC)wglGetProcAddress("glVertexAttrib4dARB");
	glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)wglGetProcAddress("glVertexAttrib4dv");
	glVertexAttrib4dvARB = (PFNGLVERTEXATTRIB4DVARBPROC)wglGetProcAddress("glVertexAttrib4dvARB");
	glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)wglGetProcAddress("glVertexAttrib4f");
	glVertexAttrib4fARB = (PFNGLVERTEXATTRIB4FARBPROC)wglGetProcAddress("glVertexAttrib4fARB");
	glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)wglGetProcAddress("glVertexAttrib4fv");
	glVertexAttrib4fvARB = (PFNGLVERTEXATTRIB4FVARBPROC)wglGetProcAddress("glVertexAttrib4fvARB");
	glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)wglGetProcAddress("glVertexAttrib4iv");
	glVertexAttrib4ivARB = (PFNGLVERTEXATTRIB4IVARBPROC)wglGetProcAddress("glVertexAttrib4ivARB");
	glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC)wglGetProcAddress("glVertexAttrib4Nbv");
	glVertexAttrib4NbvARB = (PFNGLVERTEXATTRIB4NBVARBPROC)wglGetProcAddress("glVertexAttrib4NbvARB");
	glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC)wglGetProcAddress("glVertexAttrib4Niv");
	glVertexAttrib4NivARB = (PFNGLVERTEXATTRIB4NIVARBPROC)wglGetProcAddress("glVertexAttrib4NivARB");
	glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC)wglGetProcAddress("glVertexAttrib4Nsv");
	glVertexAttrib4NsvARB = (PFNGLVERTEXATTRIB4NSVARBPROC)wglGetProcAddress("glVertexAttrib4NsvARB");
	glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC)wglGetProcAddress("glVertexAttrib4Nub");
	glVertexAttrib4NubARB = (PFNGLVERTEXATTRIB4NUBARBPROC)wglGetProcAddress("glVertexAttrib4NubARB");
	glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC)wglGetProcAddress("glVertexAttrib4Nubv");
	glVertexAttrib4NubvARB = (PFNGLVERTEXATTRIB4NUBVARBPROC)wglGetProcAddress("glVertexAttrib4NubvARB");
	glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC)wglGetProcAddress("glVertexAttrib4Nuiv");
	glVertexAttrib4NuivARB = (PFNGLVERTEXATTRIB4NUIVARBPROC)wglGetProcAddress("glVertexAttrib4NuivARB");
	glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC)wglGetProcAddress("glVertexAttrib4Nusv");
	glVertexAttrib4NusvARB = (PFNGLVERTEXATTRIB4NUSVARBPROC)wglGetProcAddress("glVertexAttrib4NusvARB");
	glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)wglGetProcAddress("glVertexAttrib4s");
	glVertexAttrib4sARB = (PFNGLVERTEXATTRIB4SARBPROC)wglGetProcAddress("glVertexAttrib4sARB");
	glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)wglGetProcAddress("glVertexAttrib4sv");
	glVertexAttrib4svARB = (PFNGLVERTEXATTRIB4SVARBPROC)wglGetProcAddress("glVertexAttrib4svARB");
	glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC)wglGetProcAddress("glVertexAttrib4ubv");
	glVertexAttrib4ubvARB = (PFNGLVERTEXATTRIB4UBVARBPROC)wglGetProcAddress("glVertexAttrib4ubvARB");
	glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)wglGetProcAddress("glVertexAttrib4uiv");
	glVertexAttrib4uivARB = (PFNGLVERTEXATTRIB4UIVARBPROC)wglGetProcAddress("glVertexAttrib4uivARB");
	glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC)wglGetProcAddress("glVertexAttrib4usv");
	glVertexAttrib4usvARB = (PFNGLVERTEXATTRIB4USVARBPROC)wglGetProcAddress("glVertexAttrib4usvARB");
	glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC)wglGetProcAddress("glVertexAttribDivisor");
	glVertexAttribDivisorARB = (PFNGLVERTEXATTRIBDIVISORARBPROC)wglGetProcAddress("glVertexAttribDivisorARB");
	glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)wglGetProcAddress("glVertexAttribI1i");
	glVertexAttribI1iEXT = (PFNGLVERTEXATTRIBI1IEXTPROC)wglGetProcAddress("glVertexAttribI1iEXT");
	glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC)wglGetProcAddress("glVertexAttribI1iv");
	glVertexAttribI1ivEXT = (PFNGLVERTEXATTRIBI1IVEXTPROC)wglGetProcAddress("glVertexAttribI1ivEXT");
	glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC)wglGetProcAddress("glVertexAttribI1ui");
	glVertexAttribI1uiEXT = (PFNGLVERTEXATTRIBI1UIEXTPROC)wglGetProcAddress("glVertexAttribI1uiEXT");
	glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC)wglGetProcAddress("glVertexAttribI1uiv");
	glVertexAttribI1uivEXT = (PFNGLVERTEXATTRIBI1UIVEXTPROC)wglGetProcAddress("glVertexAttribI1uivEXT");
	glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)wglGetProcAddress("glVertexAttribI2i");
	glVertexAttribI2iEXT = (PFNGLVERTEXATTRIBI2IEXTPROC)wglGetProcAddress("glVertexAttribI2iEXT");
	glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC)wglGetProcAddress("glVertexAttribI2iv");
	glVertexAttribI2ivEXT = (PFNGLVERTEXATTRIBI2IVEXTPROC)wglGetProcAddress("glVertexAttribI2ivEXT");
	glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC)wglGetProcAddress("glVertexAttribI2ui");
	glVertexAttribI2uiEXT = (PFNGLVERTEXATTRIBI2UIEXTPROC)wglGetProcAddress("glVertexAttribI2uiEXT");
	glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC)wglGetProcAddress("glVertexAttribI2uiv");
	glVertexAttribI2uivEXT = (PFNGLVERTEXATTRIBI2UIVEXTPROC)wglGetProcAddress("glVertexAttribI2uivEXT");
	glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)wglGetProcAddress("glVertexAttribI3i");
	glVertexAttribI3iEXT = (PFNGLVERTEXATTRIBI3IEXTPROC)wglGetProcAddress("glVertexAttribI3iEXT");
	glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC)wglGetProcAddress("glVertexAttribI3iv");
	glVertexAttribI3ivEXT = (PFNGLVERTEXATTRIBI3IVEXTPROC)wglGetProcAddress("glVertexAttribI3ivEXT");
	glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC)wglGetProcAddress("glVertexAttribI3ui");
	glVertexAttribI3uiEXT = (PFNGLVERTEXATTRIBI3UIEXTPROC)wglGetProcAddress("glVertexAttribI3uiEXT");
	glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC)wglGetProcAddress("glVertexAttribI3uiv");
	glVertexAttribI3uivEXT = (PFNGLVERTEXATTRIBI3UIVEXTPROC)wglGetProcAddress("glVertexAttribI3uivEXT");
	glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC)wglGetProcAddress("glVertexAttribI4bv");
	glVertexAttribI4bvEXT = (PFNGLVERTEXATTRIBI4BVEXTPROC)wglGetProcAddress("glVertexAttribI4bvEXT");
	glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)wglGetProcAddress("glVertexAttribI4i");
	glVertexAttribI4iEXT = (PFNGLVERTEXATTRIBI4IEXTPROC)wglGetProcAddress("glVertexAttribI4iEXT");
	glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC)wglGetProcAddress("glVertexAttribI4iv");
	glVertexAttribI4ivEXT = (PFNGLVERTEXATTRIBI4IVEXTPROC)wglGetProcAddress("glVertexAttribI4ivEXT");
	glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC)wglGetProcAddress("glVertexAttribI4sv");
	glVertexAttribI4svEXT = (PFNGLVERTEXATTRIBI4SVEXTPROC)wglGetProcAddress("glVertexAttribI4svEXT");
	glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC)wglGetProcAddress("glVertexAttribI4ubv");
	glVertexAttribI4ubvEXT = (PFNGLVERTEXATTRIBI4UBVEXTPROC)wglGetProcAddress("glVertexAttribI4ubvEXT");
	glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC)wglGetProcAddress("glVertexAttribI4ui");
	glVertexAttribI4uiEXT = (PFNGLVERTEXATTRIBI4UIEXTPROC)wglGetProcAddress("glVertexAttribI4uiEXT");
	glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC)wglGetProcAddress("glVertexAttribI4uiv");
	glVertexAttribI4uivEXT = (PFNGLVERTEXATTRIBI4UIVEXTPROC)wglGetProcAddress("glVertexAttribI4uivEXT");
	glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC)wglGetProcAddress("glVertexAttribI4usv");
	glVertexAttribI4usvEXT = (PFNGLVERTEXATTRIBI4USVEXTPROC)wglGetProcAddress("glVertexAttribI4usvEXT");
	glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC)wglGetProcAddress("glVertexAttribIPointer");
	glVertexAttribIPointerEXT = (PFNGLVERTEXATTRIBIPOINTEREXTPROC)wglGetProcAddress("glVertexAttribIPointerEXT");
	glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)wglGetProcAddress("glVertexAttribL1d");
	glVertexAttribL1dEXT = (PFNGLVERTEXATTRIBL1DEXTPROC)wglGetProcAddress("glVertexAttribL1dEXT");
	glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC)wglGetProcAddress("glVertexAttribL1dv");
	glVertexAttribL1dvEXT = (PFNGLVERTEXATTRIBL1DVEXTPROC)wglGetProcAddress("glVertexAttribL1dvEXT");
	glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)wglGetProcAddress("glVertexAttribL2d");
	glVertexAttribL2dEXT = (PFNGLVERTEXATTRIBL2DEXTPROC)wglGetProcAddress("glVertexAttribL2dEXT");
	glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC)wglGetProcAddress("glVertexAttribL2dv");
	glVertexAttribL2dvEXT = (PFNGLVERTEXATTRIBL2DVEXTPROC)wglGetProcAddress("glVertexAttribL2dvEXT");
	glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)wglGetProcAddress("glVertexAttribL3d");
	glVertexAttribL3dEXT = (PFNGLVERTEXATTRIBL3DEXTPROC)wglGetProcAddress("glVertexAttribL3dEXT");
	glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC)wglGetProcAddress("glVertexAttribL3dv");
	glVertexAttribL3dvEXT = (PFNGLVERTEXATTRIBL3DVEXTPROC)wglGetProcAddress("glVertexAttribL3dvEXT");
	glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)wglGetProcAddress("glVertexAttribL4d");
	glVertexAttribL4dEXT = (PFNGLVERTEXATTRIBL4DEXTPROC)wglGetProcAddress("glVertexAttribL4dEXT");
	glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC)wglGetProcAddress("glVertexAttribL4dv");
	glVertexAttribL4dvEXT = (PFNGLVERTEXATTRIBL4DVEXTPROC)wglGetProcAddress("glVertexAttribL4dvEXT");
	glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC)wglGetProcAddress("glVertexAttribLPointer");
	glVertexAttribLPointerEXT = (PFNGLVERTEXATTRIBLPOINTEREXTPROC)wglGetProcAddress("glVertexAttribLPointerEXT");
	glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)wglGetProcAddress("glVertexAttribP1ui");
	glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)wglGetProcAddress("glVertexAttribP1uiv");
	glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)wglGetProcAddress("glVertexAttribP2ui");
	glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)wglGetProcAddress("glVertexAttribP2uiv");
	glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)wglGetProcAddress("glVertexAttribP3ui");
	glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)wglGetProcAddress("glVertexAttribP3uiv");
	glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)wglGetProcAddress("glVertexAttribP4ui");
	glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC)wglGetProcAddress("glVertexAttribP4uiv");
	glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)wglGetProcAddress("glVertexAttribPointer");
	glVertexAttribPointerARB = (PFNGLVERTEXATTRIBPOINTERARBPROC)wglGetProcAddress("glVertexAttribPointerARB");
	glVertexBlendARB = (PFNGLVERTEXBLENDARBPROC)wglGetProcAddress("glVertexBlendARB");
	glVertexP2ui = (PFNGLVERTEXP2UIPROC)wglGetProcAddress("glVertexP2ui");
	glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)wglGetProcAddress("glVertexP2uiv");
	glVertexP3ui = (PFNGLVERTEXP3UIPROC)wglGetProcAddress("glVertexP3ui");
	glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)wglGetProcAddress("glVertexP3uiv");
	glVertexP4ui = (PFNGLVERTEXP4UIPROC)wglGetProcAddress("glVertexP4ui");
	glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)wglGetProcAddress("glVertexP4uiv");
	glVertexPointerEXT = (PFNGLVERTEXPOINTEREXTPROC)wglGetProcAddress("glVertexPointerEXT");
	glVertexWeightfEXT = (PFNGLVERTEXWEIGHTFEXTPROC)wglGetProcAddress("glVertexWeightfEXT");
	glVertexWeightfvEXT = (PFNGLVERTEXWEIGHTFVEXTPROC)wglGetProcAddress("glVertexWeightfvEXT");
	glVertexWeightPointerEXT = (PFNGLVERTEXWEIGHTPOINTEREXTPROC)wglGetProcAddress("glVertexWeightPointerEXT");
	glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)wglGetProcAddress("glViewportArrayv");
	glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)wglGetProcAddress("glViewportIndexedf");
	glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)wglGetProcAddress("glViewportIndexedfv");
	glWaitSync = (PFNGLWAITSYNCPROC)wglGetProcAddress("glWaitSync");
	glWeightbvARB = (PFNGLWEIGHTBVARBPROC)wglGetProcAddress("glWeightbvARB");
	glWeightdvARB = (PFNGLWEIGHTDVARBPROC)wglGetProcAddress("glWeightdvARB");
	glWeightfvARB = (PFNGLWEIGHTFVARBPROC)wglGetProcAddress("glWeightfvARB");
	glWeightivARB = (PFNGLWEIGHTIVARBPROC)wglGetProcAddress("glWeightivARB");
	glWeightPointerARB = (PFNGLWEIGHTPOINTERARBPROC)wglGetProcAddress("glWeightPointerARB");
	glWeightsvARB = (PFNGLWEIGHTSVARBPROC)wglGetProcAddress("glWeightsvARB");
	glWeightubvARB = (PFNGLWEIGHTUBVARBPROC)wglGetProcAddress("glWeightubvARB");
	glWeightuivARB = (PFNGLWEIGHTUIVARBPROC)wglGetProcAddress("glWeightuivARB");
	glWeightusvARB = (PFNGLWEIGHTUSVARBPROC)wglGetProcAddress("glWeightusvARB");
	glWindowPos2d = (PFNGLWINDOWPOS2DPROC)wglGetProcAddress("glWindowPos2d");
	glWindowPos2dARB = (PFNGLWINDOWPOS2DARBPROC)wglGetProcAddress("glWindowPos2dARB");
	glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC)wglGetProcAddress("glWindowPos2dv");
	glWindowPos2dvARB = (PFNGLWINDOWPOS2DVARBPROC)wglGetProcAddress("glWindowPos2dvARB");
	glWindowPos2f = (PFNGLWINDOWPOS2FPROC)wglGetProcAddress("glWindowPos2f");
	glWindowPos2fARB = (PFNGLWINDOWPOS2FARBPROC)wglGetProcAddress("glWindowPos2fARB");
	glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC)wglGetProcAddress("glWindowPos2fv");
	glWindowPos2fvARB = (PFNGLWINDOWPOS2FVARBPROC)wglGetProcAddress("glWindowPos2fvARB");
	glWindowPos2i = (PFNGLWINDOWPOS2IPROC)wglGetProcAddress("glWindowPos2i");
	glWindowPos2iARB = (PFNGLWINDOWPOS2IARBPROC)wglGetProcAddress("glWindowPos2iARB");
	glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC)wglGetProcAddress("glWindowPos2iv");
	glWindowPos2ivARB = (PFNGLWINDOWPOS2IVARBPROC)wglGetProcAddress("glWindowPos2ivARB");
	glWindowPos2s = (PFNGLWINDOWPOS2SPROC)wglGetProcAddress("glWindowPos2s");
	glWindowPos2sARB = (PFNGLWINDOWPOS2SARBPROC)wglGetProcAddress("glWindowPos2sARB");
	glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC)wglGetProcAddress("glWindowPos2sv");
	glWindowPos2svARB = (PFNGLWINDOWPOS2SVARBPROC)wglGetProcAddress("glWindowPos2svARB");
	glWindowPos3d = (PFNGLWINDOWPOS3DPROC)wglGetProcAddress("glWindowPos3d");
	glWindowPos3dARB = (PFNGLWINDOWPOS3DARBPROC)wglGetProcAddress("glWindowPos3dARB");
	glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC)wglGetProcAddress("glWindowPos3dv");
	glWindowPos3dvARB = (PFNGLWINDOWPOS3DVARBPROC)wglGetProcAddress("glWindowPos3dvARB");
	glWindowPos3f = (PFNGLWINDOWPOS3FPROC)wglGetProcAddress("glWindowPos3f");
	glWindowPos3fARB = (PFNGLWINDOWPOS3FARBPROC)wglGetProcAddress("glWindowPos3fARB");
	glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC)wglGetProcAddress("glWindowPos3fv");
	glWindowPos3fvARB = (PFNGLWINDOWPOS3FVARBPROC)wglGetProcAddress("glWindowPos3fvARB");
	glWindowPos3i = (PFNGLWINDOWPOS3IPROC)wglGetProcAddress("glWindowPos3i");
	glWindowPos3iARB = (PFNGLWINDOWPOS3IARBPROC)wglGetProcAddress("glWindowPos3iARB");
	glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC)wglGetProcAddress("glWindowPos3iv");
	glWindowPos3ivARB = (PFNGLWINDOWPOS3IVARBPROC)wglGetProcAddress("glWindowPos3ivARB");
	glWindowPos3s = (PFNGLWINDOWPOS3SPROC)wglGetProcAddress("glWindowPos3s");
	glWindowPos3sARB = (PFNGLWINDOWPOS3SARBPROC)wglGetProcAddress("glWindowPos3sARB");
	glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC)wglGetProcAddress("glWindowPos3sv");
	glWindowPos3svARB = (PFNGLWINDOWPOS3SVARBPROC)wglGetProcAddress("glWindowPos3svARB");
	glWriteMaskEXT = (PFNGLWRITEMASKEXTPROC)wglGetProcAddress("glWriteMaskEXT");
	wglBindDisplayColorTableEXT = (PFNWGLBINDDISPLAYCOLORTABLEEXTPROC)wglGetProcAddress("wglBindDisplayColorTableEXT");
	wglBindTexImageARB = (PFNWGLBINDTEXIMAGEARBPROC)wglGetProcAddress("wglBindTexImageARB");
	wglChoosePixelFormatARB = (PFNWGLCHOOSEPIXELFORMATARBPROC)wglGetProcAddress("wglChoosePixelFormatARB");
	wglChoosePixelFormatEXT = (PFNWGLCHOOSEPIXELFORMATEXTPROC)wglGetProcAddress("wglChoosePixelFormatEXT");
	wglCreateBufferRegionARB = (PFNWGLCREATEBUFFERREGIONARBPROC)wglGetProcAddress("wglCreateBufferRegionARB");
	wglCreateContextAttribsARB = (PFNWGLCREATECONTEXTATTRIBSARBPROC)wglGetProcAddress("wglCreateContextAttribsARB");
	wglCreateDisplayColorTableEXT = (PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC)wglGetProcAddress("wglCreateDisplayColorTableEXT");
	wglCreatePbufferARB = (PFNWGLCREATEPBUFFERARBPROC)wglGetProcAddress("wglCreatePbufferARB");
	wglCreatePbufferEXT = (PFNWGLCREATEPBUFFEREXTPROC)wglGetProcAddress("wglCreatePbufferEXT");
	wglDeleteBufferRegionARB = (PFNWGLDELETEBUFFERREGIONARBPROC)wglGetProcAddress("wglDeleteBufferRegionARB");
	wglDestroyDisplayColorTableEXT = (PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC)wglGetProcAddress("wglDestroyDisplayColorTableEXT");
	wglDestroyPbufferARB = (PFNWGLDESTROYPBUFFERARBPROC)wglGetProcAddress("wglDestroyPbufferARB");
	wglDestroyPbufferEXT = (PFNWGLDESTROYPBUFFEREXTPROC)wglGetProcAddress("wglDestroyPbufferEXT");
	wglGetCurrentReadDCARB = (PFNWGLGETCURRENTREADDCARBPROC)wglGetProcAddress("wglGetCurrentReadDCARB");
	wglGetCurrentReadDCEXT = (PFNWGLGETCURRENTREADDCEXTPROC)wglGetProcAddress("wglGetCurrentReadDCEXT");
	wglGetExtensionsStringARB = (PFNWGLGETEXTENSIONSSTRINGARBPROC)wglGetProcAddress("wglGetExtensionsStringARB");
	wglGetExtensionsStringEXT = (PFNWGLGETEXTENSIONSSTRINGEXTPROC)wglGetProcAddress("wglGetExtensionsStringEXT");
	wglGetPbufferDCARB = (PFNWGLGETPBUFFERDCARBPROC)wglGetProcAddress("wglGetPbufferDCARB");
	wglGetPbufferDCEXT = (PFNWGLGETPBUFFERDCEXTPROC)wglGetProcAddress("wglGetPbufferDCEXT");
	wglGetPixelFormatAttribfvARB = (PFNWGLGETPIXELFORMATATTRIBFVARBPROC)wglGetProcAddress("wglGetPixelFormatAttribfvARB");
	wglGetPixelFormatAttribfvEXT = (PFNWGLGETPIXELFORMATATTRIBFVEXTPROC)wglGetProcAddress("wglGetPixelFormatAttribfvEXT");
	wglGetPixelFormatAttribivARB = (PFNWGLGETPIXELFORMATATTRIBIVARBPROC)wglGetProcAddress("wglGetPixelFormatAttribivARB");
	wglGetPixelFormatAttribivEXT = (PFNWGLGETPIXELFORMATATTRIBIVEXTPROC)wglGetProcAddress("wglGetPixelFormatAttribivEXT");
	wglGetSwapIntervalEXT = (PFNWGLGETSWAPINTERVALEXTPROC)wglGetProcAddress("wglGetSwapIntervalEXT");
	wglLoadDisplayColorTableEXT = (PFNWGLLOADDISPLAYCOLORTABLEEXTPROC)wglGetProcAddress("wglLoadDisplayColorTableEXT");
	wglMakeContextCurrentARB = (PFNWGLMAKECONTEXTCURRENTARBPROC)wglGetProcAddress("wglMakeContextCurrentARB");
	wglMakeContextCurrentEXT = (PFNWGLMAKECONTEXTCURRENTEXTPROC)wglGetProcAddress("wglMakeContextCurrentEXT");
	wglQueryPbufferARB = (PFNWGLQUERYPBUFFERARBPROC)wglGetProcAddress("wglQueryPbufferARB");
	wglQueryPbufferEXT = (PFNWGLQUERYPBUFFEREXTPROC)wglGetProcAddress("wglQueryPbufferEXT");
	wglReleasePbufferDCARB = (PFNWGLRELEASEPBUFFERDCARBPROC)wglGetProcAddress("wglReleasePbufferDCARB");
	wglReleasePbufferDCEXT = (PFNWGLRELEASEPBUFFERDCEXTPROC)wglGetProcAddress("wglReleasePbufferDCEXT");
	wglReleaseTexImageARB = (PFNWGLRELEASETEXIMAGEARBPROC)wglGetProcAddress("wglReleaseTexImageARB");
	wglRestoreBufferRegionARB = (PFNWGLRESTOREBUFFERREGIONARBPROC)wglGetProcAddress("wglRestoreBufferRegionARB");
	wglSaveBufferRegionARB = (PFNWGLSAVEBUFFERREGIONARBPROC)wglGetProcAddress("wglSaveBufferRegionARB");
	wglSetPbufferAttribARB = (PFNWGLSETPBUFFERATTRIBARBPROC)wglGetProcAddress("wglSetPbufferAttribARB");
	wglSwapIntervalEXT = (PFNWGLSWAPINTERVALEXTPROC)wglGetProcAddress("wglSwapIntervalEXT");
}

void LoadExtensions() {
	HINSTANCE hinst = GetModuleHandle(0);
	WNDCLASS wndClass = {
		CS_OWNDC,							// style
		DefWindowProc,						// lpfnWndProc
		0,									// cbClsExtra
		0,									// cbWndExtra
		hinst,								// hInstance
		0,									// hIcon
		0,									// hCursor
		0,									// hbrBackground
		0,									// lpszMenuName
		"ExtensionLoader",					// lpszClassName
	};

	RegisterClass(&wndClass);

	HWND hwnd = CreateWindow(
		"ExtensionLoader",		// lpClassName
		0,						// lpWindowName
		0,						// dwStyle
		0,						// x
		0,						// y
		0,						// nWidth
		0,						// nHeight
		0,						// hWndParent
		0,						// hMenu
		hinst,					// hInstance
		0						// lpParam
	);

	PIXELFORMATDESCRIPTOR pfd = {
		sizeof(PIXELFORMATDESCRIPTOR),	// nSize
		1,								// nVersion
		PFD_DRAW_TO_WINDOW |
		PFD_SUPPORT_OPENGL |
		PFD_GENERIC_ACCELERATED |
		PFD_DOUBLEBUFFER,				// dwFlags
		0,								// iPixelType
		32,								// cColorBits
		0,								// cRedBits
		0,								// cRedShift
		0,								// cGreenBits
		0,								// cGreenShift
		0,								// cBlueBits
		0,								// cBlueShift
		0,								// cAlphaBits
		0,								// cAlphaShift
		32,								// cAccumBits
		0,								// cAccumRedBits
		0,								// cAccumGreenBits
		0,								// cAccumBlueBits
		0,								// cAccumAlphaBits
		32,								// cDepthBits
		32,								// cStencilBits
		0,								// cAuxBuffers
		0,								// iLayerType
		0,								// bReserved
		0,								// dwLayerMask
		0,								// dwVisibleMask
		0								// dwDamageMask
	};

	HDC hdc = GetDC(hwnd);

	int pixelformat = ::ChoosePixelFormat(hdc, &pfd);
	SetPixelFormat(hdc, pixelformat, &pfd);

	HDC old_hdc = wglGetCurrentDC();
	HGLRC old_hglrc = wglGetCurrentContext();

	HGLRC hglrc = wglCreateContext(hdc);
	wglMakeCurrent(hdc, hglrc);

	LoadExtensionsCurrentContext();

	wglMakeCurrent(old_hdc, old_hglrc);
	wglDeleteContext(hglrc);
}

void ListExtensions() {
	if (glActiveProgramEXT) SupportedMessage("glActiveProgramEXT");
	if (glActiveShaderProgram) SupportedMessage("glActiveShaderProgram");
	if (glActiveStencilFaceEXT) SupportedMessage("glActiveStencilFaceEXT");
	if (glActiveTexture) SupportedMessage("glActiveTexture");
	if (glActiveTextureARB) SupportedMessage("glActiveTextureARB");
	if (glApplyTextureEXT) SupportedMessage("glApplyTextureEXT");
	if (glAreTexturesResidentEXT) SupportedMessage("glAreTexturesResidentEXT");
	if (glArrayElementEXT) SupportedMessage("glArrayElementEXT");
	if (glAttachObjectARB) SupportedMessage("glAttachObjectARB");
	if (glAttachShader) SupportedMessage("glAttachShader");
	if (glBeginConditionalRender) SupportedMessage("glBeginConditionalRender");
	if (glBeginQuery) SupportedMessage("glBeginQuery");
	if (glBeginQueryARB) SupportedMessage("glBeginQueryARB");
	if (glBeginQueryIndexed) SupportedMessage("glBeginQueryIndexed");
	if (glBeginTransformFeedback) SupportedMessage("glBeginTransformFeedback");
	if (glBeginTransformFeedbackEXT) SupportedMessage("glBeginTransformFeedbackEXT");
	if (glBeginVertexShaderEXT) SupportedMessage("glBeginVertexShaderEXT");
	if (glBindAttribLocation) SupportedMessage("glBindAttribLocation");
	if (glBindAttribLocationARB) SupportedMessage("glBindAttribLocationARB");
	if (glBindBuffer) SupportedMessage("glBindBuffer");
	if (glBindBufferARB) SupportedMessage("glBindBufferARB");
	if (glBindBufferBase) SupportedMessage("glBindBufferBase");
	if (glBindBufferBaseEXT) SupportedMessage("glBindBufferBaseEXT");
	if (glBindBufferOffsetEXT) SupportedMessage("glBindBufferOffsetEXT");
	if (glBindBufferRange) SupportedMessage("glBindBufferRange");
	if (glBindBufferRangeEXT) SupportedMessage("glBindBufferRangeEXT");
	if (glBindFragDataLocation) SupportedMessage("glBindFragDataLocation");
	if (glBindFragDataLocationEXT) SupportedMessage("glBindFragDataLocationEXT");
	if (glBindFragDataLocationIndexed) SupportedMessage("glBindFragDataLocationIndexed");
	if (glBindFramebuffer) SupportedMessage("glBindFramebuffer");
	if (glBindFramebufferEXT) SupportedMessage("glBindFramebufferEXT");
	if (glBindImageTexture) SupportedMessage("glBindImageTexture");
	if (glBindImageTextureEXT) SupportedMessage("glBindImageTextureEXT");
	if (glBindLightParameterEXT) SupportedMessage("glBindLightParameterEXT");
	if (glBindMaterialParameterEXT) SupportedMessage("glBindMaterialParameterEXT");
	if (glBindMultiTextureEXT) SupportedMessage("glBindMultiTextureEXT");
	if (glBindParameterEXT) SupportedMessage("glBindParameterEXT");
	if (glBindProgramARB) SupportedMessage("glBindProgramARB");
	if (glBindProgramPipeline) SupportedMessage("glBindProgramPipeline");
	if (glBindRenderbuffer) SupportedMessage("glBindRenderbuffer");
	if (glBindRenderbufferEXT) SupportedMessage("glBindRenderbufferEXT");
	if (glBindSampler) SupportedMessage("glBindSampler");
	if (glBindTexGenParameterEXT) SupportedMessage("glBindTexGenParameterEXT");
	if (glBindTextureEXT) SupportedMessage("glBindTextureEXT");
	if (glBindTextureUnitParameterEXT) SupportedMessage("glBindTextureUnitParameterEXT");
	if (glBindTransformFeedback) SupportedMessage("glBindTransformFeedback");
	if (glBindVertexArray) SupportedMessage("glBindVertexArray");
	if (glBindVertexShaderEXT) SupportedMessage("glBindVertexShaderEXT");
	if (glBinormalPointerEXT) SupportedMessage("glBinormalPointerEXT");
	if (glBlendColor) SupportedMessage("glBlendColor");
	if (glBlendColorEXT) SupportedMessage("glBlendColorEXT");
	if (glBlendEquation) SupportedMessage("glBlendEquation");
	if (glBlendEquation) SupportedMessage("glBlendEquation");
	if (glBlendEquationEXT) SupportedMessage("glBlendEquationEXT");
	if (glBlendEquationi) SupportedMessage("glBlendEquationi");
	if (glBlendEquationiARB) SupportedMessage("glBlendEquationiARB");
	if (glBlendEquationSeparate) SupportedMessage("glBlendEquationSeparate");
	if (glBlendEquationSeparateEXT) SupportedMessage("glBlendEquationSeparateEXT");
	if (glBlendEquationSeparatei) SupportedMessage("glBlendEquationSeparatei");
	if (glBlendEquationSeparateiARB) SupportedMessage("glBlendEquationSeparateiARB");
	if (glBlendFunci) SupportedMessage("glBlendFunci");
	if (glBlendFunciARB) SupportedMessage("glBlendFunciARB");
	if (glBlendFuncSeparate) SupportedMessage("glBlendFuncSeparate");
	if (glBlendFuncSeparateEXT) SupportedMessage("glBlendFuncSeparateEXT");
	if (glBlendFuncSeparatei) SupportedMessage("glBlendFuncSeparatei");
	if (glBlendFuncSeparateiARB) SupportedMessage("glBlendFuncSeparateiARB");
	if (glBlitFramebuffer) SupportedMessage("glBlitFramebuffer");
	if (glBlitFramebufferEXT) SupportedMessage("glBlitFramebufferEXT");
	if (glBufferData) SupportedMessage("glBufferData");
	if (glBufferDataARB) SupportedMessage("glBufferDataARB");
	if (glBufferSubData) SupportedMessage("glBufferSubData");
	if (glBufferSubDataARB) SupportedMessage("glBufferSubDataARB");
	if (glCheckFramebufferStatus) SupportedMessage("glCheckFramebufferStatus");
	if (glCheckFramebufferStatusEXT) SupportedMessage("glCheckFramebufferStatusEXT");
	if (glCheckNamedFramebufferStatusEXT) SupportedMessage("glCheckNamedFramebufferStatusEXT");
	if (glClampColor) SupportedMessage("glClampColor");
	if (glClampColorARB) SupportedMessage("glClampColorARB");
	if (glClearBufferfi) SupportedMessage("glClearBufferfi");
	if (glClearBufferfv) SupportedMessage("glClearBufferfv");
	if (glClearBufferiv) SupportedMessage("glClearBufferiv");
	if (glClearBufferuiv) SupportedMessage("glClearBufferuiv");
	if (glClearColorIiEXT) SupportedMessage("glClearColorIiEXT");
	if (glClearColorIuiEXT) SupportedMessage("glClearColorIuiEXT");
	if (glClearDepthf) SupportedMessage("glClearDepthf");
	if (glClientActiveTexture) SupportedMessage("glClientActiveTexture");
	if (glClientActiveTextureARB) SupportedMessage("glClientActiveTextureARB");
	if (glClientAttribDefaultEXT) SupportedMessage("glClientAttribDefaultEXT");
	if (glClientWaitSync) SupportedMessage("glClientWaitSync");
	if (glColorMaski) SupportedMessage("glColorMaski");
	if (glColorMaskIndexedEXT) SupportedMessage("glColorMaskIndexedEXT");
	if (glColorP3ui) SupportedMessage("glColorP3ui");
	if (glColorP3uiv) SupportedMessage("glColorP3uiv");
	if (glColorP4ui) SupportedMessage("glColorP4ui");
	if (glColorP4uiv) SupportedMessage("glColorP4uiv");
	if (glColorPointerEXT) SupportedMessage("glColorPointerEXT");
	if (glColorSubTable) SupportedMessage("glColorSubTable");
	if (glColorSubTableEXT) SupportedMessage("glColorSubTableEXT");
	if (glColorTable) SupportedMessage("glColorTable");
	if (glColorTableEXT) SupportedMessage("glColorTableEXT");
	if (glColorTableParameterfv) SupportedMessage("glColorTableParameterfv");
	if (glColorTableParameteriv) SupportedMessage("glColorTableParameteriv");
	if (glCompileShader) SupportedMessage("glCompileShader");
	if (glCompileShaderARB) SupportedMessage("glCompileShaderARB");
	if (glCompileShaderIncludeARB) SupportedMessage("glCompileShaderIncludeARB");
	if (glCompressedMultiTexImage1DEXT) SupportedMessage("glCompressedMultiTexImage1DEXT");
	if (glCompressedMultiTexImage2DEXT) SupportedMessage("glCompressedMultiTexImage2DEXT");
	if (glCompressedMultiTexImage3DEXT) SupportedMessage("glCompressedMultiTexImage3DEXT");
	if (glCompressedMultiTexSubImage1DEXT) SupportedMessage("glCompressedMultiTexSubImage1DEXT");
	if (glCompressedMultiTexSubImage2DEXT) SupportedMessage("glCompressedMultiTexSubImage2DEXT");
	if (glCompressedMultiTexSubImage3DEXT) SupportedMessage("glCompressedMultiTexSubImage3DEXT");
	if (glCompressedTexImage1D) SupportedMessage("glCompressedTexImage1D");
	if (glCompressedTexImage1DARB) SupportedMessage("glCompressedTexImage1DARB");
	if (glCompressedTexImage2D) SupportedMessage("glCompressedTexImage2D");
	if (glCompressedTexImage2DARB) SupportedMessage("glCompressedTexImage2DARB");
	if (glCompressedTexImage3D) SupportedMessage("glCompressedTexImage3D");
	if (glCompressedTexImage3DARB) SupportedMessage("glCompressedTexImage3DARB");
	if (glCompressedTexSubImage1D) SupportedMessage("glCompressedTexSubImage1D");
	if (glCompressedTexSubImage1DARB) SupportedMessage("glCompressedTexSubImage1DARB");
	if (glCompressedTexSubImage2D) SupportedMessage("glCompressedTexSubImage2D");
	if (glCompressedTexSubImage2DARB) SupportedMessage("glCompressedTexSubImage2DARB");
	if (glCompressedTexSubImage3D) SupportedMessage("glCompressedTexSubImage3D");
	if (glCompressedTexSubImage3DARB) SupportedMessage("glCompressedTexSubImage3DARB");
	if (glCompressedTextureImage1DEXT) SupportedMessage("glCompressedTextureImage1DEXT");
	if (glCompressedTextureImage2DEXT) SupportedMessage("glCompressedTextureImage2DEXT");
	if (glCompressedTextureImage3DEXT) SupportedMessage("glCompressedTextureImage3DEXT");
	if (glCompressedTextureSubImage1DEXT) SupportedMessage("glCompressedTextureSubImage1DEXT");
	if (glCompressedTextureSubImage2DEXT) SupportedMessage("glCompressedTextureSubImage2DEXT");
	if (glCompressedTextureSubImage3DEXT) SupportedMessage("glCompressedTextureSubImage3DEXT");
	if (glConvolutionFilter1D) SupportedMessage("glConvolutionFilter1D");
	if (glConvolutionFilter1DEXT) SupportedMessage("glConvolutionFilter1DEXT");
	if (glConvolutionFilter2D) SupportedMessage("glConvolutionFilter2D");
	if (glConvolutionFilter2DEXT) SupportedMessage("glConvolutionFilter2DEXT");
	if (glConvolutionParameterf) SupportedMessage("glConvolutionParameterf");
	if (glConvolutionParameterfEXT) SupportedMessage("glConvolutionParameterfEXT");
	if (glConvolutionParameterfv) SupportedMessage("glConvolutionParameterfv");
	if (glConvolutionParameterfvEXT) SupportedMessage("glConvolutionParameterfvEXT");
	if (glConvolutionParameteri) SupportedMessage("glConvolutionParameteri");
	if (glConvolutionParameteriEXT) SupportedMessage("glConvolutionParameteriEXT");
	if (glConvolutionParameteriv) SupportedMessage("glConvolutionParameteriv");
	if (glConvolutionParameterivEXT) SupportedMessage("glConvolutionParameterivEXT");
	if (glCopyBufferSubData) SupportedMessage("glCopyBufferSubData");
	if (glCopyColorSubTable) SupportedMessage("glCopyColorSubTable");
	if (glCopyColorSubTableEXT) SupportedMessage("glCopyColorSubTableEXT");
	if (glCopyColorTable) SupportedMessage("glCopyColorTable");
	if (glCopyConvolutionFilter1D) SupportedMessage("glCopyConvolutionFilter1D");
	if (glCopyConvolutionFilter1DEXT) SupportedMessage("glCopyConvolutionFilter1DEXT");
	if (glCopyConvolutionFilter2D) SupportedMessage("glCopyConvolutionFilter2D");
	if (glCopyConvolutionFilter2DEXT) SupportedMessage("glCopyConvolutionFilter2DEXT");
	if (glCopyMultiTexImage1DEXT) SupportedMessage("glCopyMultiTexImage1DEXT");
	if (glCopyMultiTexImage2DEXT) SupportedMessage("glCopyMultiTexImage2DEXT");
	if (glCopyMultiTexSubImage1DEXT) SupportedMessage("glCopyMultiTexSubImage1DEXT");
	if (glCopyMultiTexSubImage2DEXT) SupportedMessage("glCopyMultiTexSubImage2DEXT");
	if (glCopyMultiTexSubImage3DEXT) SupportedMessage("glCopyMultiTexSubImage3DEXT");
	if (glCopyTexImage1DEXT) SupportedMessage("glCopyTexImage1DEXT");
	if (glCopyTexImage2DEXT) SupportedMessage("glCopyTexImage2DEXT");
	if (glCopyTexSubImage1DEXT) SupportedMessage("glCopyTexSubImage1DEXT");
	if (glCopyTexSubImage2DEXT) SupportedMessage("glCopyTexSubImage2DEXT");
	if (glCopyTexSubImage3D) SupportedMessage("glCopyTexSubImage3D");
	if (glCopyTexSubImage3DEXT) SupportedMessage("glCopyTexSubImage3DEXT");
	if (glCopyTextureImage1DEXT) SupportedMessage("glCopyTextureImage1DEXT");
	if (glCopyTextureImage2DEXT) SupportedMessage("glCopyTextureImage2DEXT");
	if (glCopyTextureSubImage1DEXT) SupportedMessage("glCopyTextureSubImage1DEXT");
	if (glCopyTextureSubImage2DEXT) SupportedMessage("glCopyTextureSubImage2DEXT");
	if (glCopyTextureSubImage3DEXT) SupportedMessage("glCopyTextureSubImage3DEXT");
	if (glCreateProgram) SupportedMessage("glCreateProgram");
	if (glCreateProgramObjectARB) SupportedMessage("glCreateProgramObjectARB");
	if (glCreateShader) SupportedMessage("glCreateShader");
	if (glCreateShaderObjectARB) SupportedMessage("glCreateShaderObjectARB");
	if (glCreateShaderProgramEXT) SupportedMessage("glCreateShaderProgramEXT");
	if (glCreateShaderProgramv) SupportedMessage("glCreateShaderProgramv");
	if (glCreateSyncFromCLeventARB) SupportedMessage("glCreateSyncFromCLeventARB");
	if (glCullParameterdvEXT) SupportedMessage("glCullParameterdvEXT");
	if (glCullParameterfvEXT) SupportedMessage("glCullParameterfvEXT");
	if (glCurrentPaletteMatrixARB) SupportedMessage("glCurrentPaletteMatrixARB");
	if (glDebugMessageCallbackARB) SupportedMessage("glDebugMessageCallbackARB");
	if (glDebugMessageControlARB) SupportedMessage("glDebugMessageControlARB");
	if (glDebugMessageInsertARB) SupportedMessage("glDebugMessageInsertARB");
	if (glDeleteBuffers) SupportedMessage("glDeleteBuffers");
	if (glDeleteBuffersARB) SupportedMessage("glDeleteBuffersARB");
	if (glDeleteFramebuffers) SupportedMessage("glDeleteFramebuffers");
	if (glDeleteFramebuffersEXT) SupportedMessage("glDeleteFramebuffersEXT");
	if (glDeleteNamedStringARB) SupportedMessage("glDeleteNamedStringARB");
	if (glDeleteObjectARB) SupportedMessage("glDeleteObjectARB");
	if (glDeleteProgram) SupportedMessage("glDeleteProgram");
	if (glDeleteProgramPipelines) SupportedMessage("glDeleteProgramPipelines");
	if (glDeleteProgramsARB) SupportedMessage("glDeleteProgramsARB");
	if (glDeleteQueries) SupportedMessage("glDeleteQueries");
	if (glDeleteQueriesARB) SupportedMessage("glDeleteQueriesARB");
	if (glDeleteRenderbuffers) SupportedMessage("glDeleteRenderbuffers");
	if (glDeleteRenderbuffersEXT) SupportedMessage("glDeleteRenderbuffersEXT");
	if (glDeleteSamplers) SupportedMessage("glDeleteSamplers");
	if (glDeleteShader) SupportedMessage("glDeleteShader");
	if (glDeleteSync) SupportedMessage("glDeleteSync");
	if (glDeleteTexturesEXT) SupportedMessage("glDeleteTexturesEXT");
	if (glDeleteTransformFeedbacks) SupportedMessage("glDeleteTransformFeedbacks");
	if (glDeleteVertexArrays) SupportedMessage("glDeleteVertexArrays");
	if (glDeleteVertexShaderEXT) SupportedMessage("glDeleteVertexShaderEXT");
	if (glDepthBoundsEXT) SupportedMessage("glDepthBoundsEXT");
	if (glDepthRangeArrayv) SupportedMessage("glDepthRangeArrayv");
	if (glDepthRangef) SupportedMessage("glDepthRangef");
	if (glDepthRangeIndexed) SupportedMessage("glDepthRangeIndexed");
	if (glDetachObjectARB) SupportedMessage("glDetachObjectARB");
	if (glDetachShader) SupportedMessage("glDetachShader");
	if (glDisableClientStateIndexedEXT) SupportedMessage("glDisableClientStateIndexedEXT");
	if (glDisablei) SupportedMessage("glDisablei");
	if (glDisableIndexedEXT) SupportedMessage("glDisableIndexedEXT");
	if (glDisableVariantClientStateEXT) SupportedMessage("glDisableVariantClientStateEXT");
	if (glDisableVertexAttribArray) SupportedMessage("glDisableVertexAttribArray");
	if (glDisableVertexAttribArrayARB) SupportedMessage("glDisableVertexAttribArrayARB");
	if (glDrawArraysEXT) SupportedMessage("glDrawArraysEXT");
	if (glDrawArraysIndirect) SupportedMessage("glDrawArraysIndirect");
	if (glDrawArraysInstanced) SupportedMessage("glDrawArraysInstanced");
	if (glDrawArraysInstancedARB) SupportedMessage("glDrawArraysInstancedARB");
	if (glDrawArraysInstancedBaseInstance) SupportedMessage("glDrawArraysInstancedBaseInstance");
	if (glDrawArraysInstancedEXT) SupportedMessage("glDrawArraysInstancedEXT");
	if (glDrawBuffers) SupportedMessage("glDrawBuffers");
	if (glDrawBuffersARB) SupportedMessage("glDrawBuffersARB");
	if (glDrawElementsBaseVertex) SupportedMessage("glDrawElementsBaseVertex");
	if (glDrawElementsIndirect) SupportedMessage("glDrawElementsIndirect");
	if (glDrawElementsInstanced) SupportedMessage("glDrawElementsInstanced");
	if (glDrawElementsInstancedARB) SupportedMessage("glDrawElementsInstancedARB");
	if (glDrawElementsInstancedBaseInstance) SupportedMessage("glDrawElementsInstancedBaseInstance");
	if (glDrawElementsInstancedBaseVertex) SupportedMessage("glDrawElementsInstancedBaseVertex");
	if (glDrawElementsInstancedBaseVertexBaseInstance) SupportedMessage("glDrawElementsInstancedBaseVertexBaseInstance");
	if (glDrawElementsInstancedEXT) SupportedMessage("glDrawElementsInstancedEXT");
	if (glDrawRangeElements) SupportedMessage("glDrawRangeElements");
	if (glDrawRangeElementsBaseVertex) SupportedMessage("glDrawRangeElementsBaseVertex");
	if (glDrawRangeElementsEXT) SupportedMessage("glDrawRangeElementsEXT");
	if (glDrawTransformFeedback) SupportedMessage("glDrawTransformFeedback");
	if (glDrawTransformFeedbackInstanced) SupportedMessage("glDrawTransformFeedbackInstanced");
	if (glDrawTransformFeedbackStream) SupportedMessage("glDrawTransformFeedbackStream");
	if (glDrawTransformFeedbackStreamInstanced) SupportedMessage("glDrawTransformFeedbackStreamInstanced");
	if (glEdgeFlagPointerEXT) SupportedMessage("glEdgeFlagPointerEXT");
	if (glEnableClientStateIndexedEXT) SupportedMessage("glEnableClientStateIndexedEXT");
	if (glEnablei) SupportedMessage("glEnablei");
	if (glEnableIndexedEXT) SupportedMessage("glEnableIndexedEXT");
	if (glEnableVariantClientStateEXT) SupportedMessage("glEnableVariantClientStateEXT");
	if (glEnableVertexAttribArray) SupportedMessage("glEnableVertexAttribArray");
	if (glEnableVertexAttribArrayARB) SupportedMessage("glEnableVertexAttribArrayARB");
	if (glEndConditionalRender) SupportedMessage("glEndConditionalRender");
	if (glEndQuery) SupportedMessage("glEndQuery");
	if (glEndQueryARB) SupportedMessage("glEndQueryARB");
	if (glEndQueryIndexed) SupportedMessage("glEndQueryIndexed");
	if (glEndTransformFeedback) SupportedMessage("glEndTransformFeedback");
	if (glEndTransformFeedbackEXT) SupportedMessage("glEndTransformFeedbackEXT");
	if (glEndVertexShaderEXT) SupportedMessage("glEndVertexShaderEXT");
	if (glExtractComponentEXT) SupportedMessage("glExtractComponentEXT");
	if (glFenceSync) SupportedMessage("glFenceSync");
	if (glFlushMappedBufferRange) SupportedMessage("glFlushMappedBufferRange");
	if (glFlushMappedNamedBufferRangeEXT) SupportedMessage("glFlushMappedNamedBufferRangeEXT");
	if (glFogCoordd) SupportedMessage("glFogCoordd");
	if (glFogCoorddEXT) SupportedMessage("glFogCoorddEXT");
	if (glFogCoorddv) SupportedMessage("glFogCoorddv");
	if (glFogCoorddvEXT) SupportedMessage("glFogCoorddvEXT");
	if (glFogCoordf) SupportedMessage("glFogCoordf");
	if (glFogCoordfEXT) SupportedMessage("glFogCoordfEXT");
	if (glFogCoordfv) SupportedMessage("glFogCoordfv");
	if (glFogCoordfvEXT) SupportedMessage("glFogCoordfvEXT");
	if (glFogCoordPointer) SupportedMessage("glFogCoordPointer");
	if (glFogCoordPointerEXT) SupportedMessage("glFogCoordPointerEXT");
	if (glFramebufferDrawBufferEXT) SupportedMessage("glFramebufferDrawBufferEXT");
	if (glFramebufferDrawBuffersEXT) SupportedMessage("glFramebufferDrawBuffersEXT");
	if (glFramebufferReadBufferEXT) SupportedMessage("glFramebufferReadBufferEXT");
	if (glFramebufferRenderbuffer) SupportedMessage("glFramebufferRenderbuffer");
	if (glFramebufferRenderbufferEXT) SupportedMessage("glFramebufferRenderbufferEXT");
	if (glFramebufferTexture) SupportedMessage("glFramebufferTexture");
	if (glFramebufferTexture1D) SupportedMessage("glFramebufferTexture1D");
	if (glFramebufferTexture1DEXT) SupportedMessage("glFramebufferTexture1DEXT");
	if (glFramebufferTexture2D) SupportedMessage("glFramebufferTexture2D");
	if (glFramebufferTexture2DEXT) SupportedMessage("glFramebufferTexture2DEXT");
	if (glFramebufferTexture3D) SupportedMessage("glFramebufferTexture3D");
	if (glFramebufferTexture3DEXT) SupportedMessage("glFramebufferTexture3DEXT");
	if (glFramebufferTextureARB) SupportedMessage("glFramebufferTextureARB");
	if (glFramebufferTextureEXT) SupportedMessage("glFramebufferTextureEXT");
	if (glFramebufferTextureFaceARB) SupportedMessage("glFramebufferTextureFaceARB");
	if (glFramebufferTextureFaceEXT) SupportedMessage("glFramebufferTextureFaceEXT");
	if (glFramebufferTextureLayer) SupportedMessage("glFramebufferTextureLayer");
	if (glFramebufferTextureLayerARB) SupportedMessage("glFramebufferTextureLayerARB");
	if (glFramebufferTextureLayerEXT) SupportedMessage("glFramebufferTextureLayerEXT");
	if (glGenBuffers) SupportedMessage("glGenBuffers");
	if (glGenBuffersARB) SupportedMessage("glGenBuffersARB");
	if (glGenerateMipmap) SupportedMessage("glGenerateMipmap");
	if (glGenerateMipmapEXT) SupportedMessage("glGenerateMipmapEXT");
	if (glGenerateMultiTexMipmapEXT) SupportedMessage("glGenerateMultiTexMipmapEXT");
	if (glGenerateTextureMipmapEXT) SupportedMessage("glGenerateTextureMipmapEXT");
	if (glGenFramebuffers) SupportedMessage("glGenFramebuffers");
	if (glGenFramebuffersEXT) SupportedMessage("glGenFramebuffersEXT");
	if (glGenProgramPipelines) SupportedMessage("glGenProgramPipelines");
	if (glGenProgramsARB) SupportedMessage("glGenProgramsARB");
	if (glGenQueries) SupportedMessage("glGenQueries");
	if (glGenQueriesARB) SupportedMessage("glGenQueriesARB");
	if (glGenRenderbuffers) SupportedMessage("glGenRenderbuffers");
	if (glGenRenderbuffersEXT) SupportedMessage("glGenRenderbuffersEXT");
	if (glGenSamplers) SupportedMessage("glGenSamplers");
	if (glGenSymbolsEXT) SupportedMessage("glGenSymbolsEXT");
	if (glGenTexturesEXT) SupportedMessage("glGenTexturesEXT");
	if (glGenTransformFeedbacks) SupportedMessage("glGenTransformFeedbacks");
	if (glGenVertexArrays) SupportedMessage("glGenVertexArrays");
	if (glGenVertexShadersEXT) SupportedMessage("glGenVertexShadersEXT");
	if (glGetActiveAtomicCounterBufferiv) SupportedMessage("glGetActiveAtomicCounterBufferiv");
	if (glGetActiveAttrib) SupportedMessage("glGetActiveAttrib");
	if (glGetActiveAttribARB) SupportedMessage("glGetActiveAttribARB");
	if (glGetActiveSubroutineName) SupportedMessage("glGetActiveSubroutineName");
	if (glGetActiveSubroutineUniformiv) SupportedMessage("glGetActiveSubroutineUniformiv");
	if (glGetActiveSubroutineUniformName) SupportedMessage("glGetActiveSubroutineUniformName");
	if (glGetActiveUniform) SupportedMessage("glGetActiveUniform");
	if (glGetActiveUniformARB) SupportedMessage("glGetActiveUniformARB");
	if (glGetActiveUniformBlockiv) SupportedMessage("glGetActiveUniformBlockiv");
	if (glGetActiveUniformBlockName) SupportedMessage("glGetActiveUniformBlockName");
	if (glGetActiveUniformName) SupportedMessage("glGetActiveUniformName");
	if (glGetActiveUniformsiv) SupportedMessage("glGetActiveUniformsiv");
	if (glGetAttachedObjectsARB) SupportedMessage("glGetAttachedObjectsARB");
	if (glGetAttachedShaders) SupportedMessage("glGetAttachedShaders");
	if (glGetAttribLocation) SupportedMessage("glGetAttribLocation");
	if (glGetAttribLocationARB) SupportedMessage("glGetAttribLocationARB");
	if (glGetBooleani_v) SupportedMessage("glGetBooleani_v");
	if (glGetBooleanIndexedvEXT) SupportedMessage("glGetBooleanIndexedvEXT");
	if (glGetBufferParameteri64v) SupportedMessage("glGetBufferParameteri64v");
	if (glGetBufferParameteriv) SupportedMessage("glGetBufferParameteriv");
	if (glGetBufferParameterivARB) SupportedMessage("glGetBufferParameterivARB");
	if (glGetBufferPointerv) SupportedMessage("glGetBufferPointerv");
	if (glGetBufferPointervARB) SupportedMessage("glGetBufferPointervARB");
	if (glGetBufferSubData) SupportedMessage("glGetBufferSubData");
	if (glGetBufferSubDataARB) SupportedMessage("glGetBufferSubDataARB");
	if (glGetColorTable) SupportedMessage("glGetColorTable");
	if (glGetColorTableEXT) SupportedMessage("glGetColorTableEXT");
	if (glGetColorTableParameterfv) SupportedMessage("glGetColorTableParameterfv");
	if (glGetColorTableParameterfvEXT) SupportedMessage("glGetColorTableParameterfvEXT");
	if (glGetColorTableParameteriv) SupportedMessage("glGetColorTableParameteriv");
	if (glGetColorTableParameterivEXT) SupportedMessage("glGetColorTableParameterivEXT");
	if (glGetCompressedMultiTexImageEXT) SupportedMessage("glGetCompressedMultiTexImageEXT");
	if (glGetCompressedTexImage) SupportedMessage("glGetCompressedTexImage");
	if (glGetCompressedTexImageARB) SupportedMessage("glGetCompressedTexImageARB");
	if (glGetCompressedTextureImageEXT) SupportedMessage("glGetCompressedTextureImageEXT");
	if (glGetConvolutionFilter) SupportedMessage("glGetConvolutionFilter");
	if (glGetConvolutionFilterEXT) SupportedMessage("glGetConvolutionFilterEXT");
	if (glGetConvolutionParameterfv) SupportedMessage("glGetConvolutionParameterfv");
	if (glGetConvolutionParameterfvEXT) SupportedMessage("glGetConvolutionParameterfvEXT");
	if (glGetConvolutionParameteriv) SupportedMessage("glGetConvolutionParameteriv");
	if (glGetConvolutionParameterivEXT) SupportedMessage("glGetConvolutionParameterivEXT");
	if (glGetDebugMessageLogARB) SupportedMessage("glGetDebugMessageLogARB");
	if (glGetDoublei_v) SupportedMessage("glGetDoublei_v");
	if (glGetDoubleIndexedvEXT) SupportedMessage("glGetDoubleIndexedvEXT");
	if (glGetFloati_v) SupportedMessage("glGetFloati_v");
	if (glGetFloatIndexedvEXT) SupportedMessage("glGetFloatIndexedvEXT");
	if (glGetFragDataIndex) SupportedMessage("glGetFragDataIndex");
	if (glGetFragDataLocation) SupportedMessage("glGetFragDataLocation");
	if (glGetFragDataLocationEXT) SupportedMessage("glGetFragDataLocationEXT");
	if (glGetFramebufferAttachmentParameteriv) SupportedMessage("glGetFramebufferAttachmentParameteriv");
	if (glGetFramebufferAttachmentParameterivEXT) SupportedMessage("glGetFramebufferAttachmentParameterivEXT");
	if (glGetFramebufferParameterivEXT) SupportedMessage("glGetFramebufferParameterivEXT");
	if (glGetGraphicsResetStatusARB) SupportedMessage("glGetGraphicsResetStatusARB");
	if (glGetHandleARB) SupportedMessage("glGetHandleARB");
	if (glGetHistogram) SupportedMessage("glGetHistogram");
	if (glGetHistogramEXT) SupportedMessage("glGetHistogramEXT");
	if (glGetHistogramParameterfv) SupportedMessage("glGetHistogramParameterfv");
	if (glGetHistogramParameterfvEXT) SupportedMessage("glGetHistogramParameterfvEXT");
	if (glGetHistogramParameteriv) SupportedMessage("glGetHistogramParameteriv");
	if (glGetHistogramParameterivEXT) SupportedMessage("glGetHistogramParameterivEXT");
	if (glGetInfoLogARB) SupportedMessage("glGetInfoLogARB");
	if (glGetInteger64i_v) SupportedMessage("glGetInteger64i_v");
	if (glGetInteger64v) SupportedMessage("glGetInteger64v");
	if (glGetIntegeri_v) SupportedMessage("glGetIntegeri_v");
	if (glGetIntegerIndexedvEXT) SupportedMessage("glGetIntegerIndexedvEXT");
	if (glGetInternalformativ) SupportedMessage("glGetInternalformativ");
	if (glGetInvariantBooleanvEXT) SupportedMessage("glGetInvariantBooleanvEXT");
	if (glGetInvariantFloatvEXT) SupportedMessage("glGetInvariantFloatvEXT");
	if (glGetInvariantIntegervEXT) SupportedMessage("glGetInvariantIntegervEXT");
	if (glGetLocalConstantBooleanvEXT) SupportedMessage("glGetLocalConstantBooleanvEXT");
	if (glGetLocalConstantFloatvEXT) SupportedMessage("glGetLocalConstantFloatvEXT");
	if (glGetLocalConstantIntegervEXT) SupportedMessage("glGetLocalConstantIntegervEXT");
	if (glGetMinmax) SupportedMessage("glGetMinmax");
	if (glGetMinmaxEXT) SupportedMessage("glGetMinmaxEXT");
	if (glGetMinmaxParameterfv) SupportedMessage("glGetMinmaxParameterfv");
	if (glGetMinmaxParameterfvEXT) SupportedMessage("glGetMinmaxParameterfvEXT");
	if (glGetMinmaxParameteriv) SupportedMessage("glGetMinmaxParameteriv");
	if (glGetMinmaxParameterivEXT) SupportedMessage("glGetMinmaxParameterivEXT");
	if (glGetMultisamplefv) SupportedMessage("glGetMultisamplefv");
	if (glGetMultiTexEnvfvEXT) SupportedMessage("glGetMultiTexEnvfvEXT");
	if (glGetMultiTexEnvivEXT) SupportedMessage("glGetMultiTexEnvivEXT");
	if (glGetMultiTexGendvEXT) SupportedMessage("glGetMultiTexGendvEXT");
	if (glGetMultiTexGenfvEXT) SupportedMessage("glGetMultiTexGenfvEXT");
	if (glGetMultiTexGenivEXT) SupportedMessage("glGetMultiTexGenivEXT");
	if (glGetMultiTexImageEXT) SupportedMessage("glGetMultiTexImageEXT");
	if (glGetMultiTexLevelParameterfvEXT) SupportedMessage("glGetMultiTexLevelParameterfvEXT");
	if (glGetMultiTexLevelParameterivEXT) SupportedMessage("glGetMultiTexLevelParameterivEXT");
	if (glGetMultiTexParameterfvEXT) SupportedMessage("glGetMultiTexParameterfvEXT");
	if (glGetMultiTexParameterIivEXT) SupportedMessage("glGetMultiTexParameterIivEXT");
	if (glGetMultiTexParameterIuivEXT) SupportedMessage("glGetMultiTexParameterIuivEXT");
	if (glGetMultiTexParameterivEXT) SupportedMessage("glGetMultiTexParameterivEXT");
	if (glGetNamedBufferParameterivEXT) SupportedMessage("glGetNamedBufferParameterivEXT");
	if (glGetNamedBufferPointervEXT) SupportedMessage("glGetNamedBufferPointervEXT");
	if (glGetNamedBufferSubDataEXT) SupportedMessage("glGetNamedBufferSubDataEXT");
	if (glGetNamedFramebufferAttachmentParameterivEXT) SupportedMessage("glGetNamedFramebufferAttachmentParameterivEXT");
	if (glGetNamedProgramivEXT) SupportedMessage("glGetNamedProgramivEXT");
	if (glGetNamedProgramLocalParameterdvEXT) SupportedMessage("glGetNamedProgramLocalParameterdvEXT");
	if (glGetNamedProgramLocalParameterfvEXT) SupportedMessage("glGetNamedProgramLocalParameterfvEXT");
	if (glGetNamedProgramLocalParameterIivEXT) SupportedMessage("glGetNamedProgramLocalParameterIivEXT");
	if (glGetNamedProgramLocalParameterIuivEXT) SupportedMessage("glGetNamedProgramLocalParameterIuivEXT");
	if (glGetNamedProgramStringEXT) SupportedMessage("glGetNamedProgramStringEXT");
	if (glGetNamedRenderbufferParameterivEXT) SupportedMessage("glGetNamedRenderbufferParameterivEXT");
	if (glGetNamedStringARB) SupportedMessage("glGetNamedStringARB");
	if (glGetNamedStringivARB) SupportedMessage("glGetNamedStringivARB");
	if (glGetnColorTableARB) SupportedMessage("glGetnColorTableARB");
	if (glGetnCompressedTexImageARB) SupportedMessage("glGetnCompressedTexImageARB");
	if (glGetnConvolutionFilterARB) SupportedMessage("glGetnConvolutionFilterARB");
	if (glGetnHistogramARB) SupportedMessage("glGetnHistogramARB");
	if (glGetnMapdvARB) SupportedMessage("glGetnMapdvARB");
	if (glGetnMapfvARB) SupportedMessage("glGetnMapfvARB");
	if (glGetnMapivARB) SupportedMessage("glGetnMapivARB");
	if (glGetnMinmaxARB) SupportedMessage("glGetnMinmaxARB");
	if (glGetnPixelMapfvARB) SupportedMessage("glGetnPixelMapfvARB");
	if (glGetnPixelMapuivARB) SupportedMessage("glGetnPixelMapuivARB");
	if (glGetnPixelMapusvARB) SupportedMessage("glGetnPixelMapusvARB");
	if (glGetnPolygonStippleARB) SupportedMessage("glGetnPolygonStippleARB");
	if (glGetnSeparableFilterARB) SupportedMessage("glGetnSeparableFilterARB");
	if (glGetnTexImageARB) SupportedMessage("glGetnTexImageARB");
	if (glGetnUniformdvARB) SupportedMessage("glGetnUniformdvARB");
	if (glGetnUniformfvARB) SupportedMessage("glGetnUniformfvARB");
	if (glGetnUniformivARB) SupportedMessage("glGetnUniformivARB");
	if (glGetnUniformuivARB) SupportedMessage("glGetnUniformuivARB");
	if (glGetObjectParameterfvARB) SupportedMessage("glGetObjectParameterfvARB");
	if (glGetObjectParameterivARB) SupportedMessage("glGetObjectParameterivARB");
	if (glGetPointerIndexedvEXT) SupportedMessage("glGetPointerIndexedvEXT");
	if (glGetProgramBinary) SupportedMessage("glGetProgramBinary");
	if (glGetProgramEnvParameterdvARB) SupportedMessage("glGetProgramEnvParameterdvARB");
	if (glGetProgramEnvParameterfvARB) SupportedMessage("glGetProgramEnvParameterfvARB");
	if (glGetProgramInfoLog) SupportedMessage("glGetProgramInfoLog");
	if (glGetProgramiv) SupportedMessage("glGetProgramiv");
	if (glGetProgramivARB) SupportedMessage("glGetProgramivARB");
	if (glGetProgramLocalParameterdvARB) SupportedMessage("glGetProgramLocalParameterdvARB");
	if (glGetProgramLocalParameterfvARB) SupportedMessage("glGetProgramLocalParameterfvARB");
	if (glGetProgramPipelineInfoLog) SupportedMessage("glGetProgramPipelineInfoLog");
	if (glGetProgramPipelineiv) SupportedMessage("glGetProgramPipelineiv");
	if (glGetProgramStageiv) SupportedMessage("glGetProgramStageiv");
	if (glGetProgramStringARB) SupportedMessage("glGetProgramStringARB");
	if (glGetQueryIndexediv) SupportedMessage("glGetQueryIndexediv");
	if (glGetQueryiv) SupportedMessage("glGetQueryiv");
	if (glGetQueryivARB) SupportedMessage("glGetQueryivARB");
	if (glGetQueryObjecti64v) SupportedMessage("glGetQueryObjecti64v");
	if (glGetQueryObjecti64vEXT) SupportedMessage("glGetQueryObjecti64vEXT");
	if (glGetQueryObjectiv) SupportedMessage("glGetQueryObjectiv");
	if (glGetQueryObjectivARB) SupportedMessage("glGetQueryObjectivARB");
	if (glGetQueryObjectui64v) SupportedMessage("glGetQueryObjectui64v");
	if (glGetQueryObjectui64vEXT) SupportedMessage("glGetQueryObjectui64vEXT");
	if (glGetQueryObjectuiv) SupportedMessage("glGetQueryObjectuiv");
	if (glGetQueryObjectuivARB) SupportedMessage("glGetQueryObjectuivARB");
	if (glGetRenderbufferParameteriv) SupportedMessage("glGetRenderbufferParameteriv");
	if (glGetRenderbufferParameterivEXT) SupportedMessage("glGetRenderbufferParameterivEXT");
	if (glGetSamplerParameterfv) SupportedMessage("glGetSamplerParameterfv");
	if (glGetSamplerParameterIiv) SupportedMessage("glGetSamplerParameterIiv");
	if (glGetSamplerParameterIuiv) SupportedMessage("glGetSamplerParameterIuiv");
	if (glGetSamplerParameteriv) SupportedMessage("glGetSamplerParameteriv");
	if (glGetSeparableFilter) SupportedMessage("glGetSeparableFilter");
	if (glGetSeparableFilterEXT) SupportedMessage("glGetSeparableFilterEXT");
	if (glGetShaderInfoLog) SupportedMessage("glGetShaderInfoLog");
	if (glGetShaderiv) SupportedMessage("glGetShaderiv");
	if (glGetShaderPrecisionFormat) SupportedMessage("glGetShaderPrecisionFormat");
	if (glGetShaderSource) SupportedMessage("glGetShaderSource");
	if (glGetShaderSourceARB) SupportedMessage("glGetShaderSourceARB");
	if (glGetStringi) SupportedMessage("glGetStringi");
	if (glGetSubroutineIndex) SupportedMessage("glGetSubroutineIndex");
	if (glGetSubroutineUniformLocation) SupportedMessage("glGetSubroutineUniformLocation");
	if (glGetSynciv) SupportedMessage("glGetSynciv");
	if (glGetTexParameterIiv) SupportedMessage("glGetTexParameterIiv");
	if (glGetTexParameterIivEXT) SupportedMessage("glGetTexParameterIivEXT");
	if (glGetTexParameterIuiv) SupportedMessage("glGetTexParameterIuiv");
	if (glGetTexParameterIuivEXT) SupportedMessage("glGetTexParameterIuivEXT");
	if (glGetTextureImageEXT) SupportedMessage("glGetTextureImageEXT");
	if (glGetTextureLevelParameterfvEXT) SupportedMessage("glGetTextureLevelParameterfvEXT");
	if (glGetTextureLevelParameterivEXT) SupportedMessage("glGetTextureLevelParameterivEXT");
	if (glGetTextureParameterfvEXT) SupportedMessage("glGetTextureParameterfvEXT");
	if (glGetTextureParameterIivEXT) SupportedMessage("glGetTextureParameterIivEXT");
	if (glGetTextureParameterIuivEXT) SupportedMessage("glGetTextureParameterIuivEXT");
	if (glGetTextureParameterivEXT) SupportedMessage("glGetTextureParameterivEXT");
	if (glGetTransformFeedbackVarying) SupportedMessage("glGetTransformFeedbackVarying");
	if (glGetTransformFeedbackVaryingEXT) SupportedMessage("glGetTransformFeedbackVaryingEXT");
	if (glGetUniformBlockIndex) SupportedMessage("glGetUniformBlockIndex");
	if (glGetUniformBufferSizeEXT) SupportedMessage("glGetUniformBufferSizeEXT");
	if (glGetUniformdv) SupportedMessage("glGetUniformdv");
	if (glGetUniformfv) SupportedMessage("glGetUniformfv");
	if (glGetUniformfvARB) SupportedMessage("glGetUniformfvARB");
	if (glGetUniformIndices) SupportedMessage("glGetUniformIndices");
	if (glGetUniformiv) SupportedMessage("glGetUniformiv");
	if (glGetUniformivARB) SupportedMessage("glGetUniformivARB");
	if (glGetUniformLocation) SupportedMessage("glGetUniformLocation");
	if (glGetUniformLocationARB) SupportedMessage("glGetUniformLocationARB");
	if (glGetUniformOffsetEXT) SupportedMessage("glGetUniformOffsetEXT");
	if (glGetUniformSubroutineuiv) SupportedMessage("glGetUniformSubroutineuiv");
	if (glGetUniformuiv) SupportedMessage("glGetUniformuiv");
	if (glGetUniformuivEXT) SupportedMessage("glGetUniformuivEXT");
	if (glGetVariantBooleanvEXT) SupportedMessage("glGetVariantBooleanvEXT");
	if (glGetVariantFloatvEXT) SupportedMessage("glGetVariantFloatvEXT");
	if (glGetVariantIntegervEXT) SupportedMessage("glGetVariantIntegervEXT");
	if (glGetVariantPointervEXT) SupportedMessage("glGetVariantPointervEXT");
	if (glGetVertexAttribdv) SupportedMessage("glGetVertexAttribdv");
	if (glGetVertexAttribdvARB) SupportedMessage("glGetVertexAttribdvARB");
	if (glGetVertexAttribfv) SupportedMessage("glGetVertexAttribfv");
	if (glGetVertexAttribfvARB) SupportedMessage("glGetVertexAttribfvARB");
	if (glGetVertexAttribIiv) SupportedMessage("glGetVertexAttribIiv");
	if (glGetVertexAttribIivEXT) SupportedMessage("glGetVertexAttribIivEXT");
	if (glGetVertexAttribIuiv) SupportedMessage("glGetVertexAttribIuiv");
	if (glGetVertexAttribIuivEXT) SupportedMessage("glGetVertexAttribIuivEXT");
	if (glGetVertexAttribiv) SupportedMessage("glGetVertexAttribiv");
	if (glGetVertexAttribivARB) SupportedMessage("glGetVertexAttribivARB");
	if (glGetVertexAttribLdv) SupportedMessage("glGetVertexAttribLdv");
	if (glGetVertexAttribLdvEXT) SupportedMessage("glGetVertexAttribLdvEXT");
	if (glGetVertexAttribPointerv) SupportedMessage("glGetVertexAttribPointerv");
	if (glGetVertexAttribPointervARB) SupportedMessage("glGetVertexAttribPointervARB");
	if (glHistogram) SupportedMessage("glHistogram");
	if (glHistogramEXT) SupportedMessage("glHistogramEXT");
	if (glImportSyncEXT) SupportedMessage("glImportSyncEXT");
	if (glIndexFuncEXT) SupportedMessage("glIndexFuncEXT");
	if (glIndexMaterialEXT) SupportedMessage("glIndexMaterialEXT");
	if (glIndexPointerEXT) SupportedMessage("glIndexPointerEXT");
	if (glInsertComponentEXT) SupportedMessage("glInsertComponentEXT");
	if (glIsBuffer) SupportedMessage("glIsBuffer");
	if (glIsBufferARB) SupportedMessage("glIsBufferARB");
	if (glIsEnabledi) SupportedMessage("glIsEnabledi");
	if (glIsEnabledIndexedEXT) SupportedMessage("glIsEnabledIndexedEXT");
	if (glIsFramebuffer) SupportedMessage("glIsFramebuffer");
	if (glIsFramebufferEXT) SupportedMessage("glIsFramebufferEXT");
	if (glIsNamedStringARB) SupportedMessage("glIsNamedStringARB");
	if (glIsProgram) SupportedMessage("glIsProgram");
	if (glIsProgramARB) SupportedMessage("glIsProgramARB");
	if (glIsProgramPipeline) SupportedMessage("glIsProgramPipeline");
	if (glIsQuery) SupportedMessage("glIsQuery");
	if (glIsQueryARB) SupportedMessage("glIsQueryARB");
	if (glIsRenderbuffer) SupportedMessage("glIsRenderbuffer");
	if (glIsRenderbufferEXT) SupportedMessage("glIsRenderbufferEXT");
	if (glIsSampler) SupportedMessage("glIsSampler");
	if (glIsShader) SupportedMessage("glIsShader");
	if (glIsSync) SupportedMessage("glIsSync");
	if (glIsTextureEXT) SupportedMessage("glIsTextureEXT");
	if (glIsTransformFeedback) SupportedMessage("glIsTransformFeedback");
	if (glIsVariantEnabledEXT) SupportedMessage("glIsVariantEnabledEXT");
	if (glIsVertexArray) SupportedMessage("glIsVertexArray");
	if (glLinkProgram) SupportedMessage("glLinkProgram");
	if (glLinkProgramARB) SupportedMessage("glLinkProgramARB");
	if (glLoadTransposeMatrixd) SupportedMessage("glLoadTransposeMatrixd");
	if (glLoadTransposeMatrixdARB) SupportedMessage("glLoadTransposeMatrixdARB");
	if (glLoadTransposeMatrixf) SupportedMessage("glLoadTransposeMatrixf");
	if (glLoadTransposeMatrixfARB) SupportedMessage("glLoadTransposeMatrixfARB");
	if (glLockArraysEXT) SupportedMessage("glLockArraysEXT");
	if (glMapBuffer) SupportedMessage("glMapBuffer");
	if (glMapBufferARB) SupportedMessage("glMapBufferARB");
	if (glMapBufferRange) SupportedMessage("glMapBufferRange");
	if (glMapNamedBufferEXT) SupportedMessage("glMapNamedBufferEXT");
	if (glMapNamedBufferRangeEXT) SupportedMessage("glMapNamedBufferRangeEXT");
	if (glMatrixFrustumEXT) SupportedMessage("glMatrixFrustumEXT");
	if (glMatrixIndexPointerARB) SupportedMessage("glMatrixIndexPointerARB");
	if (glMatrixIndexubvARB) SupportedMessage("glMatrixIndexubvARB");
	if (glMatrixIndexuivARB) SupportedMessage("glMatrixIndexuivARB");
	if (glMatrixIndexusvARB) SupportedMessage("glMatrixIndexusvARB");
	if (glMatrixLoaddEXT) SupportedMessage("glMatrixLoaddEXT");
	if (glMatrixLoadfEXT) SupportedMessage("glMatrixLoadfEXT");
	if (glMatrixLoadIdentityEXT) SupportedMessage("glMatrixLoadIdentityEXT");
	if (glMatrixLoadTransposedEXT) SupportedMessage("glMatrixLoadTransposedEXT");
	if (glMatrixLoadTransposefEXT) SupportedMessage("glMatrixLoadTransposefEXT");
	if (glMatrixMultdEXT) SupportedMessage("glMatrixMultdEXT");
	if (glMatrixMultfEXT) SupportedMessage("glMatrixMultfEXT");
	if (glMatrixMultTransposedEXT) SupportedMessage("glMatrixMultTransposedEXT");
	if (glMatrixMultTransposefEXT) SupportedMessage("glMatrixMultTransposefEXT");
	if (glMatrixOrthoEXT) SupportedMessage("glMatrixOrthoEXT");
	if (glMatrixPopEXT) SupportedMessage("glMatrixPopEXT");
	if (glMatrixPushEXT) SupportedMessage("glMatrixPushEXT");
	if (glMatrixRotatedEXT) SupportedMessage("glMatrixRotatedEXT");
	if (glMatrixRotatefEXT) SupportedMessage("glMatrixRotatefEXT");
	if (glMatrixScaledEXT) SupportedMessage("glMatrixScaledEXT");
	if (glMatrixScalefEXT) SupportedMessage("glMatrixScalefEXT");
	if (glMatrixTranslatedEXT) SupportedMessage("glMatrixTranslatedEXT");
	if (glMatrixTranslatefEXT) SupportedMessage("glMatrixTranslatefEXT");
	if (glMemoryBarrier) SupportedMessage("glMemoryBarrier");
	if (glMemoryBarrierEXT) SupportedMessage("glMemoryBarrierEXT");
	if (glMinmax) SupportedMessage("glMinmax");
	if (glMinmaxEXT) SupportedMessage("glMinmaxEXT");
	if (glMinSampleShading) SupportedMessage("glMinSampleShading");
	if (glMinSampleShadingARB) SupportedMessage("glMinSampleShadingARB");
	if (glMultiDrawArrays) SupportedMessage("glMultiDrawArrays");
	if (glMultiDrawArraysEXT) SupportedMessage("glMultiDrawArraysEXT");
	if (glMultiDrawElements) SupportedMessage("glMultiDrawElements");
	if (glMultiDrawElementsBaseVertex) SupportedMessage("glMultiDrawElementsBaseVertex");
	if (glMultiDrawElementsEXT) SupportedMessage("glMultiDrawElementsEXT");
	if (glMultiTexBufferEXT) SupportedMessage("glMultiTexBufferEXT");
	if (glMultiTexCoord1d) SupportedMessage("glMultiTexCoord1d");
	if (glMultiTexCoord1dARB) SupportedMessage("glMultiTexCoord1dARB");
	if (glMultiTexCoord1dv) SupportedMessage("glMultiTexCoord1dv");
	if (glMultiTexCoord1dvARB) SupportedMessage("glMultiTexCoord1dvARB");
	if (glMultiTexCoord1f) SupportedMessage("glMultiTexCoord1f");
	if (glMultiTexCoord1fARB) SupportedMessage("glMultiTexCoord1fARB");
	if (glMultiTexCoord1fv) SupportedMessage("glMultiTexCoord1fv");
	if (glMultiTexCoord1fvARB) SupportedMessage("glMultiTexCoord1fvARB");
	if (glMultiTexCoord1i) SupportedMessage("glMultiTexCoord1i");
	if (glMultiTexCoord1iARB) SupportedMessage("glMultiTexCoord1iARB");
	if (glMultiTexCoord1iv) SupportedMessage("glMultiTexCoord1iv");
	if (glMultiTexCoord1ivARB) SupportedMessage("glMultiTexCoord1ivARB");
	if (glMultiTexCoord1s) SupportedMessage("glMultiTexCoord1s");
	if (glMultiTexCoord1sARB) SupportedMessage("glMultiTexCoord1sARB");
	if (glMultiTexCoord1sv) SupportedMessage("glMultiTexCoord1sv");
	if (glMultiTexCoord1svARB) SupportedMessage("glMultiTexCoord1svARB");
	if (glMultiTexCoord2d) SupportedMessage("glMultiTexCoord2d");
	if (glMultiTexCoord2dARB) SupportedMessage("glMultiTexCoord2dARB");
	if (glMultiTexCoord2dv) SupportedMessage("glMultiTexCoord2dv");
	if (glMultiTexCoord2dvARB) SupportedMessage("glMultiTexCoord2dvARB");
	if (glMultiTexCoord2f) SupportedMessage("glMultiTexCoord2f");
	if (glMultiTexCoord2fARB) SupportedMessage("glMultiTexCoord2fARB");
	if (glMultiTexCoord2fv) SupportedMessage("glMultiTexCoord2fv");
	if (glMultiTexCoord2fvARB) SupportedMessage("glMultiTexCoord2fvARB");
	if (glMultiTexCoord2i) SupportedMessage("glMultiTexCoord2i");
	if (glMultiTexCoord2iARB) SupportedMessage("glMultiTexCoord2iARB");
	if (glMultiTexCoord2iv) SupportedMessage("glMultiTexCoord2iv");
	if (glMultiTexCoord2ivARB) SupportedMessage("glMultiTexCoord2ivARB");
	if (glMultiTexCoord2s) SupportedMessage("glMultiTexCoord2s");
	if (glMultiTexCoord2sARB) SupportedMessage("glMultiTexCoord2sARB");
	if (glMultiTexCoord2sv) SupportedMessage("glMultiTexCoord2sv");
	if (glMultiTexCoord2svARB) SupportedMessage("glMultiTexCoord2svARB");
	if (glMultiTexCoord3d) SupportedMessage("glMultiTexCoord3d");
	if (glMultiTexCoord3dARB) SupportedMessage("glMultiTexCoord3dARB");
	if (glMultiTexCoord3dv) SupportedMessage("glMultiTexCoord3dv");
	if (glMultiTexCoord3dvARB) SupportedMessage("glMultiTexCoord3dvARB");
	if (glMultiTexCoord3f) SupportedMessage("glMultiTexCoord3f");
	if (glMultiTexCoord3fARB) SupportedMessage("glMultiTexCoord3fARB");
	if (glMultiTexCoord3fv) SupportedMessage("glMultiTexCoord3fv");
	if (glMultiTexCoord3fvARB) SupportedMessage("glMultiTexCoord3fvARB");
	if (glMultiTexCoord3i) SupportedMessage("glMultiTexCoord3i");
	if (glMultiTexCoord3iARB) SupportedMessage("glMultiTexCoord3iARB");
	if (glMultiTexCoord3iv) SupportedMessage("glMultiTexCoord3iv");
	if (glMultiTexCoord3ivARB) SupportedMessage("glMultiTexCoord3ivARB");
	if (glMultiTexCoord3s) SupportedMessage("glMultiTexCoord3s");
	if (glMultiTexCoord3sARB) SupportedMessage("glMultiTexCoord3sARB");
	if (glMultiTexCoord3sv) SupportedMessage("glMultiTexCoord3sv");
	if (glMultiTexCoord3svARB) SupportedMessage("glMultiTexCoord3svARB");
	if (glMultiTexCoord4d) SupportedMessage("glMultiTexCoord4d");
	if (glMultiTexCoord4dARB) SupportedMessage("glMultiTexCoord4dARB");
	if (glMultiTexCoord4dv) SupportedMessage("glMultiTexCoord4dv");
	if (glMultiTexCoord4dvARB) SupportedMessage("glMultiTexCoord4dvARB");
	if (glMultiTexCoord4f) SupportedMessage("glMultiTexCoord4f");
	if (glMultiTexCoord4fARB) SupportedMessage("glMultiTexCoord4fARB");
	if (glMultiTexCoord4fv) SupportedMessage("glMultiTexCoord4fv");
	if (glMultiTexCoord4fvARB) SupportedMessage("glMultiTexCoord4fvARB");
	if (glMultiTexCoord4i) SupportedMessage("glMultiTexCoord4i");
	if (glMultiTexCoord4iARB) SupportedMessage("glMultiTexCoord4iARB");
	if (glMultiTexCoord4iv) SupportedMessage("glMultiTexCoord4iv");
	if (glMultiTexCoord4ivARB) SupportedMessage("glMultiTexCoord4ivARB");
	if (glMultiTexCoord4s) SupportedMessage("glMultiTexCoord4s");
	if (glMultiTexCoord4sARB) SupportedMessage("glMultiTexCoord4sARB");
	if (glMultiTexCoord4sv) SupportedMessage("glMultiTexCoord4sv");
	if (glMultiTexCoord4svARB) SupportedMessage("glMultiTexCoord4svARB");
	if (glMultiTexCoordP1ui) SupportedMessage("glMultiTexCoordP1ui");
	if (glMultiTexCoordP1uiv) SupportedMessage("glMultiTexCoordP1uiv");
	if (glMultiTexCoordP2ui) SupportedMessage("glMultiTexCoordP2ui");
	if (glMultiTexCoordP2uiv) SupportedMessage("glMultiTexCoordP2uiv");
	if (glMultiTexCoordP3ui) SupportedMessage("glMultiTexCoordP3ui");
	if (glMultiTexCoordP3uiv) SupportedMessage("glMultiTexCoordP3uiv");
	if (glMultiTexCoordP4ui) SupportedMessage("glMultiTexCoordP4ui");
	if (glMultiTexCoordP4uiv) SupportedMessage("glMultiTexCoordP4uiv");
	if (glMultiTexCoordPointerEXT) SupportedMessage("glMultiTexCoordPointerEXT");
	if (glMultiTexEnvfEXT) SupportedMessage("glMultiTexEnvfEXT");
	if (glMultiTexEnvfvEXT) SupportedMessage("glMultiTexEnvfvEXT");
	if (glMultiTexEnviEXT) SupportedMessage("glMultiTexEnviEXT");
	if (glMultiTexEnvivEXT) SupportedMessage("glMultiTexEnvivEXT");
	if (glMultiTexGendEXT) SupportedMessage("glMultiTexGendEXT");
	if (glMultiTexGendvEXT) SupportedMessage("glMultiTexGendvEXT");
	if (glMultiTexGenfEXT) SupportedMessage("glMultiTexGenfEXT");
	if (glMultiTexGenfvEXT) SupportedMessage("glMultiTexGenfvEXT");
	if (glMultiTexGeniEXT) SupportedMessage("glMultiTexGeniEXT");
	if (glMultiTexGenivEXT) SupportedMessage("glMultiTexGenivEXT");
	if (glMultiTexImage1DEXT) SupportedMessage("glMultiTexImage1DEXT");
	if (glMultiTexImage2DEXT) SupportedMessage("glMultiTexImage2DEXT");
	if (glMultiTexImage3DEXT) SupportedMessage("glMultiTexImage3DEXT");
	if (glMultiTexParameterfEXT) SupportedMessage("glMultiTexParameterfEXT");
	if (glMultiTexParameterfvEXT) SupportedMessage("glMultiTexParameterfvEXT");
	if (glMultiTexParameteriEXT) SupportedMessage("glMultiTexParameteriEXT");
	if (glMultiTexParameterIivEXT) SupportedMessage("glMultiTexParameterIivEXT");
	if (glMultiTexParameterIuivEXT) SupportedMessage("glMultiTexParameterIuivEXT");
	if (glMultiTexParameterivEXT) SupportedMessage("glMultiTexParameterivEXT");
	if (glMultiTexRenderbufferEXT) SupportedMessage("glMultiTexRenderbufferEXT");
	if (glMultiTexSubImage1DEXT) SupportedMessage("glMultiTexSubImage1DEXT");
	if (glMultiTexSubImage2DEXT) SupportedMessage("glMultiTexSubImage2DEXT");
	if (glMultiTexSubImage3DEXT) SupportedMessage("glMultiTexSubImage3DEXT");
	if (glMultTransposeMatrixd) SupportedMessage("glMultTransposeMatrixd");
	if (glMultTransposeMatrixdARB) SupportedMessage("glMultTransposeMatrixdARB");
	if (glMultTransposeMatrixf) SupportedMessage("glMultTransposeMatrixf");
	if (glMultTransposeMatrixfARB) SupportedMessage("glMultTransposeMatrixfARB");
	if (glNamedBufferDataEXT) SupportedMessage("glNamedBufferDataEXT");
	if (glNamedBufferSubDataEXT) SupportedMessage("glNamedBufferSubDataEXT");
	if (glNamedCopyBufferSubDataEXT) SupportedMessage("glNamedCopyBufferSubDataEXT");
	if (glNamedFramebufferRenderbufferEXT) SupportedMessage("glNamedFramebufferRenderbufferEXT");
	if (glNamedFramebufferTexture1DEXT) SupportedMessage("glNamedFramebufferTexture1DEXT");
	if (glNamedFramebufferTexture2DEXT) SupportedMessage("glNamedFramebufferTexture2DEXT");
	if (glNamedFramebufferTexture3DEXT) SupportedMessage("glNamedFramebufferTexture3DEXT");
	if (glNamedFramebufferTextureEXT) SupportedMessage("glNamedFramebufferTextureEXT");
	if (glNamedFramebufferTextureFaceEXT) SupportedMessage("glNamedFramebufferTextureFaceEXT");
	if (glNamedFramebufferTextureLayerEXT) SupportedMessage("glNamedFramebufferTextureLayerEXT");
	if (glNamedProgramLocalParameter4dEXT) SupportedMessage("glNamedProgramLocalParameter4dEXT");
	if (glNamedProgramLocalParameter4dvEXT) SupportedMessage("glNamedProgramLocalParameter4dvEXT");
	if (glNamedProgramLocalParameter4fEXT) SupportedMessage("glNamedProgramLocalParameter4fEXT");
	if (glNamedProgramLocalParameter4fvEXT) SupportedMessage("glNamedProgramLocalParameter4fvEXT");
	if (glNamedProgramLocalParameterI4iEXT) SupportedMessage("glNamedProgramLocalParameterI4iEXT");
	if (glNamedProgramLocalParameterI4ivEXT) SupportedMessage("glNamedProgramLocalParameterI4ivEXT");
	if (glNamedProgramLocalParameterI4uiEXT) SupportedMessage("glNamedProgramLocalParameterI4uiEXT");
	if (glNamedProgramLocalParameterI4uivEXT) SupportedMessage("glNamedProgramLocalParameterI4uivEXT");
	if (glNamedProgramLocalParameters4fvEXT) SupportedMessage("glNamedProgramLocalParameters4fvEXT");
	if (glNamedProgramLocalParametersI4ivEXT) SupportedMessage("glNamedProgramLocalParametersI4ivEXT");
	if (glNamedProgramLocalParametersI4uivEXT) SupportedMessage("glNamedProgramLocalParametersI4uivEXT");
	if (glNamedProgramStringEXT) SupportedMessage("glNamedProgramStringEXT");
	if (glNamedRenderbufferStorageEXT) SupportedMessage("glNamedRenderbufferStorageEXT");
	if (glNamedRenderbufferStorageMultisampleCoverageEXT) SupportedMessage("glNamedRenderbufferStorageMultisampleCoverageEXT");
	if (glNamedRenderbufferStorageMultisampleEXT) SupportedMessage("glNamedRenderbufferStorageMultisampleEXT");
	if (glNamedStringARB) SupportedMessage("glNamedStringARB");
	if (glNormalP3ui) SupportedMessage("glNormalP3ui");
	if (glNormalP3uiv) SupportedMessage("glNormalP3uiv");
	if (glNormalPointerEXT) SupportedMessage("glNormalPointerEXT");
	if (glPatchParameterfv) SupportedMessage("glPatchParameterfv");
	if (glPatchParameteri) SupportedMessage("glPatchParameteri");
	if (glPauseTransformFeedback) SupportedMessage("glPauseTransformFeedback");
	if (glPixelTransformParameterfEXT) SupportedMessage("glPixelTransformParameterfEXT");
	if (glPixelTransformParameterfvEXT) SupportedMessage("glPixelTransformParameterfvEXT");
	if (glPixelTransformParameteriEXT) SupportedMessage("glPixelTransformParameteriEXT");
	if (glPixelTransformParameterivEXT) SupportedMessage("glPixelTransformParameterivEXT");
	if (glPointParameterf) SupportedMessage("glPointParameterf");
	if (glPointParameterfARB) SupportedMessage("glPointParameterfARB");
	if (glPointParameterfEXT) SupportedMessage("glPointParameterfEXT");
	if (glPointParameterfv) SupportedMessage("glPointParameterfv");
	if (glPointParameterfvARB) SupportedMessage("glPointParameterfvARB");
	if (glPointParameterfvEXT) SupportedMessage("glPointParameterfvEXT");
	if (glPointParameteri) SupportedMessage("glPointParameteri");
	if (glPointParameteriv) SupportedMessage("glPointParameteriv");
	if (glPolygonOffsetEXT) SupportedMessage("glPolygonOffsetEXT");
	if (glPrimitiveRestartIndex) SupportedMessage("glPrimitiveRestartIndex");
	if (glPrioritizeTexturesEXT) SupportedMessage("glPrioritizeTexturesEXT");
	if (glProgramBinary) SupportedMessage("glProgramBinary");
	if (glProgramEnvParameter4dARB) SupportedMessage("glProgramEnvParameter4dARB");
	if (glProgramEnvParameter4dvARB) SupportedMessage("glProgramEnvParameter4dvARB");
	if (glProgramEnvParameter4fARB) SupportedMessage("glProgramEnvParameter4fARB");
	if (glProgramEnvParameter4fvARB) SupportedMessage("glProgramEnvParameter4fvARB");
	if (glProgramEnvParameters4fvEXT) SupportedMessage("glProgramEnvParameters4fvEXT");
	if (glProgramLocalParameter4dARB) SupportedMessage("glProgramLocalParameter4dARB");
	if (glProgramLocalParameter4dvARB) SupportedMessage("glProgramLocalParameter4dvARB");
	if (glProgramLocalParameter4fARB) SupportedMessage("glProgramLocalParameter4fARB");
	if (glProgramLocalParameter4fvARB) SupportedMessage("glProgramLocalParameter4fvARB");
	if (glProgramLocalParameters4fvEXT) SupportedMessage("glProgramLocalParameters4fvEXT");
	if (glProgramParameteri) SupportedMessage("glProgramParameteri");
	if (glProgramParameteriARB) SupportedMessage("glProgramParameteriARB");
	if (glProgramParameteriEXT) SupportedMessage("glProgramParameteriEXT");
	if (glProgramStringARB) SupportedMessage("glProgramStringARB");
	if (glProgramUniform1d) SupportedMessage("glProgramUniform1d");
	if (glProgramUniform1dv) SupportedMessage("glProgramUniform1dv");
	if (glProgramUniform1f) SupportedMessage("glProgramUniform1f");
	if (glProgramUniform1fEXT) SupportedMessage("glProgramUniform1fEXT");
	if (glProgramUniform1fv) SupportedMessage("glProgramUniform1fv");
	if (glProgramUniform1fvEXT) SupportedMessage("glProgramUniform1fvEXT");
	if (glProgramUniform1i) SupportedMessage("glProgramUniform1i");
	if (glProgramUniform1iEXT) SupportedMessage("glProgramUniform1iEXT");
	if (glProgramUniform1iv) SupportedMessage("glProgramUniform1iv");
	if (glProgramUniform1ivEXT) SupportedMessage("glProgramUniform1ivEXT");
	if (glProgramUniform1ui) SupportedMessage("glProgramUniform1ui");
	if (glProgramUniform1uiEXT) SupportedMessage("glProgramUniform1uiEXT");
	if (glProgramUniform1uiv) SupportedMessage("glProgramUniform1uiv");
	if (glProgramUniform1uivEXT) SupportedMessage("glProgramUniform1uivEXT");
	if (glProgramUniform2d) SupportedMessage("glProgramUniform2d");
	if (glProgramUniform2dv) SupportedMessage("glProgramUniform2dv");
	if (glProgramUniform2f) SupportedMessage("glProgramUniform2f");
	if (glProgramUniform2fEXT) SupportedMessage("glProgramUniform2fEXT");
	if (glProgramUniform2fv) SupportedMessage("glProgramUniform2fv");
	if (glProgramUniform2fvEXT) SupportedMessage("glProgramUniform2fvEXT");
	if (glProgramUniform2i) SupportedMessage("glProgramUniform2i");
	if (glProgramUniform2iEXT) SupportedMessage("glProgramUniform2iEXT");
	if (glProgramUniform2iv) SupportedMessage("glProgramUniform2iv");
	if (glProgramUniform2ivEXT) SupportedMessage("glProgramUniform2ivEXT");
	if (glProgramUniform2ui) SupportedMessage("glProgramUniform2ui");
	if (glProgramUniform2uiEXT) SupportedMessage("glProgramUniform2uiEXT");
	if (glProgramUniform2uiv) SupportedMessage("glProgramUniform2uiv");
	if (glProgramUniform2uivEXT) SupportedMessage("glProgramUniform2uivEXT");
	if (glProgramUniform3d) SupportedMessage("glProgramUniform3d");
	if (glProgramUniform3dv) SupportedMessage("glProgramUniform3dv");
	if (glProgramUniform3f) SupportedMessage("glProgramUniform3f");
	if (glProgramUniform3fEXT) SupportedMessage("glProgramUniform3fEXT");
	if (glProgramUniform3fv) SupportedMessage("glProgramUniform3fv");
	if (glProgramUniform3fvEXT) SupportedMessage("glProgramUniform3fvEXT");
	if (glProgramUniform3i) SupportedMessage("glProgramUniform3i");
	if (glProgramUniform3iEXT) SupportedMessage("glProgramUniform3iEXT");
	if (glProgramUniform3iv) SupportedMessage("glProgramUniform3iv");
	if (glProgramUniform3ivEXT) SupportedMessage("glProgramUniform3ivEXT");
	if (glProgramUniform3ui) SupportedMessage("glProgramUniform3ui");
	if (glProgramUniform3uiEXT) SupportedMessage("glProgramUniform3uiEXT");
	if (glProgramUniform3uiv) SupportedMessage("glProgramUniform3uiv");
	if (glProgramUniform3uivEXT) SupportedMessage("glProgramUniform3uivEXT");
	if (glProgramUniform4d) SupportedMessage("glProgramUniform4d");
	if (glProgramUniform4dv) SupportedMessage("glProgramUniform4dv");
	if (glProgramUniform4f) SupportedMessage("glProgramUniform4f");
	if (glProgramUniform4fEXT) SupportedMessage("glProgramUniform4fEXT");
	if (glProgramUniform4fv) SupportedMessage("glProgramUniform4fv");
	if (glProgramUniform4fvEXT) SupportedMessage("glProgramUniform4fvEXT");
	if (glProgramUniform4i) SupportedMessage("glProgramUniform4i");
	if (glProgramUniform4iEXT) SupportedMessage("glProgramUniform4iEXT");
	if (glProgramUniform4iv) SupportedMessage("glProgramUniform4iv");
	if (glProgramUniform4ivEXT) SupportedMessage("glProgramUniform4ivEXT");
	if (glProgramUniform4ui) SupportedMessage("glProgramUniform4ui");
	if (glProgramUniform4uiEXT) SupportedMessage("glProgramUniform4uiEXT");
	if (glProgramUniform4uiv) SupportedMessage("glProgramUniform4uiv");
	if (glProgramUniform4uivEXT) SupportedMessage("glProgramUniform4uivEXT");
	if (glProgramUniformMatrix2dv) SupportedMessage("glProgramUniformMatrix2dv");
	if (glProgramUniformMatrix2fv) SupportedMessage("glProgramUniformMatrix2fv");
	if (glProgramUniformMatrix2fvEXT) SupportedMessage("glProgramUniformMatrix2fvEXT");
	if (glProgramUniformMatrix2x3dv) SupportedMessage("glProgramUniformMatrix2x3dv");
	if (glProgramUniformMatrix2x3fv) SupportedMessage("glProgramUniformMatrix2x3fv");
	if (glProgramUniformMatrix2x3fvEXT) SupportedMessage("glProgramUniformMatrix2x3fvEXT");
	if (glProgramUniformMatrix2x4dv) SupportedMessage("glProgramUniformMatrix2x4dv");
	if (glProgramUniformMatrix2x4fv) SupportedMessage("glProgramUniformMatrix2x4fv");
	if (glProgramUniformMatrix2x4fvEXT) SupportedMessage("glProgramUniformMatrix2x4fvEXT");
	if (glProgramUniformMatrix3dv) SupportedMessage("glProgramUniformMatrix3dv");
	if (glProgramUniformMatrix3fv) SupportedMessage("glProgramUniformMatrix3fv");
	if (glProgramUniformMatrix3fvEXT) SupportedMessage("glProgramUniformMatrix3fvEXT");
	if (glProgramUniformMatrix3x2dv) SupportedMessage("glProgramUniformMatrix3x2dv");
	if (glProgramUniformMatrix3x2fv) SupportedMessage("glProgramUniformMatrix3x2fv");
	if (glProgramUniformMatrix3x2fvEXT) SupportedMessage("glProgramUniformMatrix3x2fvEXT");
	if (glProgramUniformMatrix3x4dv) SupportedMessage("glProgramUniformMatrix3x4dv");
	if (glProgramUniformMatrix3x4fv) SupportedMessage("glProgramUniformMatrix3x4fv");
	if (glProgramUniformMatrix3x4fvEXT) SupportedMessage("glProgramUniformMatrix3x4fvEXT");
	if (glProgramUniformMatrix4dv) SupportedMessage("glProgramUniformMatrix4dv");
	if (glProgramUniformMatrix4fv) SupportedMessage("glProgramUniformMatrix4fv");
	if (glProgramUniformMatrix4fvEXT) SupportedMessage("glProgramUniformMatrix4fvEXT");
	if (glProgramUniformMatrix4x2dv) SupportedMessage("glProgramUniformMatrix4x2dv");
	if (glProgramUniformMatrix4x2fv) SupportedMessage("glProgramUniformMatrix4x2fv");
	if (glProgramUniformMatrix4x2fvEXT) SupportedMessage("glProgramUniformMatrix4x2fvEXT");
	if (glProgramUniformMatrix4x3dv) SupportedMessage("glProgramUniformMatrix4x3dv");
	if (glProgramUniformMatrix4x3fv) SupportedMessage("glProgramUniformMatrix4x3fv");
	if (glProgramUniformMatrix4x3fvEXT) SupportedMessage("glProgramUniformMatrix4x3fvEXT");
	if (glProvokingVertex) SupportedMessage("glProvokingVertex");
	if (glProvokingVertexEXT) SupportedMessage("glProvokingVertexEXT");
	if (glPushClientAttribDefaultEXT) SupportedMessage("glPushClientAttribDefaultEXT");
	if (glQueryCounter) SupportedMessage("glQueryCounter");
	if (glReadnPixelsARB) SupportedMessage("glReadnPixelsARB");
	if (glReleaseShaderCompiler) SupportedMessage("glReleaseShaderCompiler");
	if (glRenderbufferStorage) SupportedMessage("glRenderbufferStorage");
	if (glRenderbufferStorageEXT) SupportedMessage("glRenderbufferStorageEXT");
	if (glRenderbufferStorageMultisample) SupportedMessage("glRenderbufferStorageMultisample");
	if (glRenderbufferStorageMultisampleEXT) SupportedMessage("glRenderbufferStorageMultisampleEXT");
	if (glResetHistogram) SupportedMessage("glResetHistogram");
	if (glResetHistogramEXT) SupportedMessage("glResetHistogramEXT");
	if (glResetMinmax) SupportedMessage("glResetMinmax");
	if (glResetMinmaxEXT) SupportedMessage("glResetMinmaxEXT");
	if (glResumeTransformFeedback) SupportedMessage("glResumeTransformFeedback");
	if (glSampleCoverage) SupportedMessage("glSampleCoverage");
	if (glSampleCoverageARB) SupportedMessage("glSampleCoverageARB");
	if (glSampleMaskEXT) SupportedMessage("glSampleMaskEXT");
	if (glSampleMaski) SupportedMessage("glSampleMaski");
	if (glSamplePatternEXT) SupportedMessage("glSamplePatternEXT");
	if (glSamplerParameterf) SupportedMessage("glSamplerParameterf");
	if (glSamplerParameterfv) SupportedMessage("glSamplerParameterfv");
	if (glSamplerParameteri) SupportedMessage("glSamplerParameteri");
	if (glSamplerParameterIiv) SupportedMessage("glSamplerParameterIiv");
	if (glSamplerParameterIuiv) SupportedMessage("glSamplerParameterIuiv");
	if (glSamplerParameteriv) SupportedMessage("glSamplerParameteriv");
	if (glScissorArrayv) SupportedMessage("glScissorArrayv");
	if (glScissorIndexed) SupportedMessage("glScissorIndexed");
	if (glScissorIndexedv) SupportedMessage("glScissorIndexedv");
	if (glSecondaryColor3b) SupportedMessage("glSecondaryColor3b");
	if (glSecondaryColor3bEXT) SupportedMessage("glSecondaryColor3bEXT");
	if (glSecondaryColor3bv) SupportedMessage("glSecondaryColor3bv");
	if (glSecondaryColor3bvEXT) SupportedMessage("glSecondaryColor3bvEXT");
	if (glSecondaryColor3d) SupportedMessage("glSecondaryColor3d");
	if (glSecondaryColor3dEXT) SupportedMessage("glSecondaryColor3dEXT");
	if (glSecondaryColor3dv) SupportedMessage("glSecondaryColor3dv");
	if (glSecondaryColor3dvEXT) SupportedMessage("glSecondaryColor3dvEXT");
	if (glSecondaryColor3f) SupportedMessage("glSecondaryColor3f");
	if (glSecondaryColor3fEXT) SupportedMessage("glSecondaryColor3fEXT");
	if (glSecondaryColor3fv) SupportedMessage("glSecondaryColor3fv");
	if (glSecondaryColor3fvEXT) SupportedMessage("glSecondaryColor3fvEXT");
	if (glSecondaryColor3i) SupportedMessage("glSecondaryColor3i");
	if (glSecondaryColor3iEXT) SupportedMessage("glSecondaryColor3iEXT");
	if (glSecondaryColor3iv) SupportedMessage("glSecondaryColor3iv");
	if (glSecondaryColor3ivEXT) SupportedMessage("glSecondaryColor3ivEXT");
	if (glSecondaryColor3s) SupportedMessage("glSecondaryColor3s");
	if (glSecondaryColor3sEXT) SupportedMessage("glSecondaryColor3sEXT");
	if (glSecondaryColor3sv) SupportedMessage("glSecondaryColor3sv");
	if (glSecondaryColor3svEXT) SupportedMessage("glSecondaryColor3svEXT");
	if (glSecondaryColor3ub) SupportedMessage("glSecondaryColor3ub");
	if (glSecondaryColor3ubEXT) SupportedMessage("glSecondaryColor3ubEXT");
	if (glSecondaryColor3ubv) SupportedMessage("glSecondaryColor3ubv");
	if (glSecondaryColor3ubvEXT) SupportedMessage("glSecondaryColor3ubvEXT");
	if (glSecondaryColor3ui) SupportedMessage("glSecondaryColor3ui");
	if (glSecondaryColor3uiEXT) SupportedMessage("glSecondaryColor3uiEXT");
	if (glSecondaryColor3uiv) SupportedMessage("glSecondaryColor3uiv");
	if (glSecondaryColor3uivEXT) SupportedMessage("glSecondaryColor3uivEXT");
	if (glSecondaryColor3us) SupportedMessage("glSecondaryColor3us");
	if (glSecondaryColor3usEXT) SupportedMessage("glSecondaryColor3usEXT");
	if (glSecondaryColor3usv) SupportedMessage("glSecondaryColor3usv");
	if (glSecondaryColor3usvEXT) SupportedMessage("glSecondaryColor3usvEXT");
	if (glSecondaryColorP3ui) SupportedMessage("glSecondaryColorP3ui");
	if (glSecondaryColorP3uiv) SupportedMessage("glSecondaryColorP3uiv");
	if (glSecondaryColorPointer) SupportedMessage("glSecondaryColorPointer");
	if (glSecondaryColorPointerEXT) SupportedMessage("glSecondaryColorPointerEXT");
	if (glSeparableFilter2D) SupportedMessage("glSeparableFilter2D");
	if (glSeparableFilter2DEXT) SupportedMessage("glSeparableFilter2DEXT");
	if (glSetInvariantEXT) SupportedMessage("glSetInvariantEXT");
	if (glSetLocalConstantEXT) SupportedMessage("glSetLocalConstantEXT");
	if (glShaderBinary) SupportedMessage("glShaderBinary");
	if (glShaderOp1EXT) SupportedMessage("glShaderOp1EXT");
	if (glShaderOp2EXT) SupportedMessage("glShaderOp2EXT");
	if (glShaderOp3EXT) SupportedMessage("glShaderOp3EXT");
	if (glShaderSource) SupportedMessage("glShaderSource");
	if (glShaderSourceARB) SupportedMessage("glShaderSourceARB");
	if (glStencilFuncSeparate) SupportedMessage("glStencilFuncSeparate");
	if (glStencilMaskSeparate) SupportedMessage("glStencilMaskSeparate");
	if (glStencilOpSeparate) SupportedMessage("glStencilOpSeparate");
	if (glSwizzleEXT) SupportedMessage("glSwizzleEXT");
	if (glTangentPointerEXT) SupportedMessage("glTangentPointerEXT");
	if (glTbufferMask3DFX) SupportedMessage("glTbufferMask3DFX");
	if (glTexBuffer) SupportedMessage("glTexBuffer");
	if (glTexBufferARB) SupportedMessage("glTexBufferARB");
	if (glTexBufferEXT) SupportedMessage("glTexBufferEXT");
	if (glTexCoordP1ui) SupportedMessage("glTexCoordP1ui");
	if (glTexCoordP1uiv) SupportedMessage("glTexCoordP1uiv");
	if (glTexCoordP2ui) SupportedMessage("glTexCoordP2ui");
	if (glTexCoordP2uiv) SupportedMessage("glTexCoordP2uiv");
	if (glTexCoordP3ui) SupportedMessage("glTexCoordP3ui");
	if (glTexCoordP3uiv) SupportedMessage("glTexCoordP3uiv");
	if (glTexCoordP4ui) SupportedMessage("glTexCoordP4ui");
	if (glTexCoordP4uiv) SupportedMessage("glTexCoordP4uiv");
	if (glTexCoordPointerEXT) SupportedMessage("glTexCoordPointerEXT");
	if (glTexImage2DMultisample) SupportedMessage("glTexImage2DMultisample");
	if (glTexImage3D) SupportedMessage("glTexImage3D");
	if (glTexImage3DEXT) SupportedMessage("glTexImage3DEXT");
	if (glTexImage3DMultisample) SupportedMessage("glTexImage3DMultisample");
	if (glTexParameterIiv) SupportedMessage("glTexParameterIiv");
	if (glTexParameterIivEXT) SupportedMessage("glTexParameterIivEXT");
	if (glTexParameterIuiv) SupportedMessage("glTexParameterIuiv");
	if (glTexParameterIuivEXT) SupportedMessage("glTexParameterIuivEXT");
	if (glTexStorage1D) SupportedMessage("glTexStorage1D");
	if (glTexStorage2D) SupportedMessage("glTexStorage2D");
	if (glTexStorage3D) SupportedMessage("glTexStorage3D");
	if (glTexSubImage1DEXT) SupportedMessage("glTexSubImage1DEXT");
	if (glTexSubImage2DEXT) SupportedMessage("glTexSubImage2DEXT");
	if (glTexSubImage3D) SupportedMessage("glTexSubImage3D");
	if (glTexSubImage3DEXT) SupportedMessage("glTexSubImage3DEXT");
	if (glTextureBufferEXT) SupportedMessage("glTextureBufferEXT");
	if (glTextureImage1DEXT) SupportedMessage("glTextureImage1DEXT");
	if (glTextureImage2DEXT) SupportedMessage("glTextureImage2DEXT");
	if (glTextureImage3DEXT) SupportedMessage("glTextureImage3DEXT");
	if (glTextureLightEXT) SupportedMessage("glTextureLightEXT");
	if (glTextureMaterialEXT) SupportedMessage("glTextureMaterialEXT");
	if (glTextureNormalEXT) SupportedMessage("glTextureNormalEXT");
	if (glTextureParameterfEXT) SupportedMessage("glTextureParameterfEXT");
	if (glTextureParameterfvEXT) SupportedMessage("glTextureParameterfvEXT");
	if (glTextureParameteriEXT) SupportedMessage("glTextureParameteriEXT");
	if (glTextureParameterIivEXT) SupportedMessage("glTextureParameterIivEXT");
	if (glTextureParameterIuivEXT) SupportedMessage("glTextureParameterIuivEXT");
	if (glTextureParameterivEXT) SupportedMessage("glTextureParameterivEXT");
	if (glTextureRenderbufferEXT) SupportedMessage("glTextureRenderbufferEXT");
	if (glTextureStorage1DEXT) SupportedMessage("glTextureStorage1DEXT");
	if (glTextureStorage2DEXT) SupportedMessage("glTextureStorage2DEXT");
	if (glTextureStorage3DEXT) SupportedMessage("glTextureStorage3DEXT");
	if (glTextureSubImage1DEXT) SupportedMessage("glTextureSubImage1DEXT");
	if (glTextureSubImage2DEXT) SupportedMessage("glTextureSubImage2DEXT");
	if (glTextureSubImage3DEXT) SupportedMessage("glTextureSubImage3DEXT");
	if (glTransformFeedbackVaryings) SupportedMessage("glTransformFeedbackVaryings");
	if (glTransformFeedbackVaryingsEXT) SupportedMessage("glTransformFeedbackVaryingsEXT");
	if (glUniform1d) SupportedMessage("glUniform1d");
	if (glUniform1dv) SupportedMessage("glUniform1dv");
	if (glUniform1f) SupportedMessage("glUniform1f");
	if (glUniform1fARB) SupportedMessage("glUniform1fARB");
	if (glUniform1fv) SupportedMessage("glUniform1fv");
	if (glUniform1fvARB) SupportedMessage("glUniform1fvARB");
	if (glUniform1i) SupportedMessage("glUniform1i");
	if (glUniform1iARB) SupportedMessage("glUniform1iARB");
	if (glUniform1iv) SupportedMessage("glUniform1iv");
	if (glUniform1ivARB) SupportedMessage("glUniform1ivARB");
	if (glUniform1ui) SupportedMessage("glUniform1ui");
	if (glUniform1uiEXT) SupportedMessage("glUniform1uiEXT");
	if (glUniform1uiv) SupportedMessage("glUniform1uiv");
	if (glUniform1uivEXT) SupportedMessage("glUniform1uivEXT");
	if (glUniform2d) SupportedMessage("glUniform2d");
	if (glUniform2dv) SupportedMessage("glUniform2dv");
	if (glUniform2f) SupportedMessage("glUniform2f");
	if (glUniform2fARB) SupportedMessage("glUniform2fARB");
	if (glUniform2fv) SupportedMessage("glUniform2fv");
	if (glUniform2fvARB) SupportedMessage("glUniform2fvARB");
	if (glUniform2i) SupportedMessage("glUniform2i");
	if (glUniform2iARB) SupportedMessage("glUniform2iARB");
	if (glUniform2iv) SupportedMessage("glUniform2iv");
	if (glUniform2ivARB) SupportedMessage("glUniform2ivARB");
	if (glUniform2ui) SupportedMessage("glUniform2ui");
	if (glUniform2uiEXT) SupportedMessage("glUniform2uiEXT");
	if (glUniform2uiv) SupportedMessage("glUniform2uiv");
	if (glUniform2uivEXT) SupportedMessage("glUniform2uivEXT");
	if (glUniform3d) SupportedMessage("glUniform3d");
	if (glUniform3dv) SupportedMessage("glUniform3dv");
	if (glUniform3f) SupportedMessage("glUniform3f");
	if (glUniform3fARB) SupportedMessage("glUniform3fARB");
	if (glUniform3fv) SupportedMessage("glUniform3fv");
	if (glUniform3fvARB) SupportedMessage("glUniform3fvARB");
	if (glUniform3i) SupportedMessage("glUniform3i");
	if (glUniform3iARB) SupportedMessage("glUniform3iARB");
	if (glUniform3iv) SupportedMessage("glUniform3iv");
	if (glUniform3ivARB) SupportedMessage("glUniform3ivARB");
	if (glUniform3ui) SupportedMessage("glUniform3ui");
	if (glUniform3uiEXT) SupportedMessage("glUniform3uiEXT");
	if (glUniform3uiv) SupportedMessage("glUniform3uiv");
	if (glUniform3uivEXT) SupportedMessage("glUniform3uivEXT");
	if (glUniform4d) SupportedMessage("glUniform4d");
	if (glUniform4dv) SupportedMessage("glUniform4dv");
	if (glUniform4f) SupportedMessage("glUniform4f");
	if (glUniform4fARB) SupportedMessage("glUniform4fARB");
	if (glUniform4fv) SupportedMessage("glUniform4fv");
	if (glUniform4fvARB) SupportedMessage("glUniform4fvARB");
	if (glUniform4i) SupportedMessage("glUniform4i");
	if (glUniform4iARB) SupportedMessage("glUniform4iARB");
	if (glUniform4iv) SupportedMessage("glUniform4iv");
	if (glUniform4ivARB) SupportedMessage("glUniform4ivARB");
	if (glUniform4ui) SupportedMessage("glUniform4ui");
	if (glUniform4uiEXT) SupportedMessage("glUniform4uiEXT");
	if (glUniform4uiv) SupportedMessage("glUniform4uiv");
	if (glUniform4uivEXT) SupportedMessage("glUniform4uivEXT");
	if (glUniformBlockBinding) SupportedMessage("glUniformBlockBinding");
	if (glUniformBufferEXT) SupportedMessage("glUniformBufferEXT");
	if (glUniformMatrix2dv) SupportedMessage("glUniformMatrix2dv");
	if (glUniformMatrix2fv) SupportedMessage("glUniformMatrix2fv");
	if (glUniformMatrix2fvARB) SupportedMessage("glUniformMatrix2fvARB");
	if (glUniformMatrix2x3dv) SupportedMessage("glUniformMatrix2x3dv");
	if (glUniformMatrix2x3fv) SupportedMessage("glUniformMatrix2x3fv");
	if (glUniformMatrix2x4dv) SupportedMessage("glUniformMatrix2x4dv");
	if (glUniformMatrix2x4fv) SupportedMessage("glUniformMatrix2x4fv");
	if (glUniformMatrix3dv) SupportedMessage("glUniformMatrix3dv");
	if (glUniformMatrix3fv) SupportedMessage("glUniformMatrix3fv");
	if (glUniformMatrix3fvARB) SupportedMessage("glUniformMatrix3fvARB");
	if (glUniformMatrix3x2dv) SupportedMessage("glUniformMatrix3x2dv");
	if (glUniformMatrix3x2fv) SupportedMessage("glUniformMatrix3x2fv");
	if (glUniformMatrix3x4dv) SupportedMessage("glUniformMatrix3x4dv");
	if (glUniformMatrix3x4fv) SupportedMessage("glUniformMatrix3x4fv");
	if (glUniformMatrix4dv) SupportedMessage("glUniformMatrix4dv");
	if (glUniformMatrix4fv) SupportedMessage("glUniformMatrix4fv");
	if (glUniformMatrix4fvARB) SupportedMessage("glUniformMatrix4fvARB");
	if (glUniformMatrix4x2dv) SupportedMessage("glUniformMatrix4x2dv");
	if (glUniformMatrix4x2fv) SupportedMessage("glUniformMatrix4x2fv");
	if (glUniformMatrix4x3dv) SupportedMessage("glUniformMatrix4x3dv");
	if (glUniformMatrix4x3fv) SupportedMessage("glUniformMatrix4x3fv");
	if (glUniformSubroutinesuiv) SupportedMessage("glUniformSubroutinesuiv");
	if (glUnlockArraysEXT) SupportedMessage("glUnlockArraysEXT");
	if (glUnmapBuffer) SupportedMessage("glUnmapBuffer");
	if (glUnmapBufferARB) SupportedMessage("glUnmapBufferARB");
	if (glUnmapNamedBufferEXT) SupportedMessage("glUnmapNamedBufferEXT");
	if (glUseProgram) SupportedMessage("glUseProgram");
	if (glUseProgramObjectARB) SupportedMessage("glUseProgramObjectARB");
	if (glUseProgramStages) SupportedMessage("glUseProgramStages");
	if (glUseShaderProgramEXT) SupportedMessage("glUseShaderProgramEXT");
	if (glValidateProgram) SupportedMessage("glValidateProgram");
	if (glValidateProgramARB) SupportedMessage("glValidateProgramARB");
	if (glValidateProgramPipeline) SupportedMessage("glValidateProgramPipeline");
	if (glVariantbvEXT) SupportedMessage("glVariantbvEXT");
	if (glVariantdvEXT) SupportedMessage("glVariantdvEXT");
	if (glVariantfvEXT) SupportedMessage("glVariantfvEXT");
	if (glVariantivEXT) SupportedMessage("glVariantivEXT");
	if (glVariantPointerEXT) SupportedMessage("glVariantPointerEXT");
	if (glVariantsvEXT) SupportedMessage("glVariantsvEXT");
	if (glVariantubvEXT) SupportedMessage("glVariantubvEXT");
	if (glVariantuivEXT) SupportedMessage("glVariantuivEXT");
	if (glVariantusvEXT) SupportedMessage("glVariantusvEXT");
	if (glVertexArrayVertexAttribLOffsetEXT) SupportedMessage("glVertexArrayVertexAttribLOffsetEXT");
	if (glVertexAttrib1d) SupportedMessage("glVertexAttrib1d");
	if (glVertexAttrib1dARB) SupportedMessage("glVertexAttrib1dARB");
	if (glVertexAttrib1dv) SupportedMessage("glVertexAttrib1dv");
	if (glVertexAttrib1dvARB) SupportedMessage("glVertexAttrib1dvARB");
	if (glVertexAttrib1f) SupportedMessage("glVertexAttrib1f");
	if (glVertexAttrib1fARB) SupportedMessage("glVertexAttrib1fARB");
	if (glVertexAttrib1fv) SupportedMessage("glVertexAttrib1fv");
	if (glVertexAttrib1fvARB) SupportedMessage("glVertexAttrib1fvARB");
	if (glVertexAttrib1s) SupportedMessage("glVertexAttrib1s");
	if (glVertexAttrib1sARB) SupportedMessage("glVertexAttrib1sARB");
	if (glVertexAttrib1sv) SupportedMessage("glVertexAttrib1sv");
	if (glVertexAttrib1svARB) SupportedMessage("glVertexAttrib1svARB");
	if (glVertexAttrib2d) SupportedMessage("glVertexAttrib2d");
	if (glVertexAttrib2dARB) SupportedMessage("glVertexAttrib2dARB");
	if (glVertexAttrib2dv) SupportedMessage("glVertexAttrib2dv");
	if (glVertexAttrib2dvARB) SupportedMessage("glVertexAttrib2dvARB");
	if (glVertexAttrib2f) SupportedMessage("glVertexAttrib2f");
	if (glVertexAttrib2fARB) SupportedMessage("glVertexAttrib2fARB");
	if (glVertexAttrib2fv) SupportedMessage("glVertexAttrib2fv");
	if (glVertexAttrib2fvARB) SupportedMessage("glVertexAttrib2fvARB");
	if (glVertexAttrib2s) SupportedMessage("glVertexAttrib2s");
	if (glVertexAttrib2sARB) SupportedMessage("glVertexAttrib2sARB");
	if (glVertexAttrib2sv) SupportedMessage("glVertexAttrib2sv");
	if (glVertexAttrib2svARB) SupportedMessage("glVertexAttrib2svARB");
	if (glVertexAttrib3d) SupportedMessage("glVertexAttrib3d");
	if (glVertexAttrib3dARB) SupportedMessage("glVertexAttrib3dARB");
	if (glVertexAttrib3dv) SupportedMessage("glVertexAttrib3dv");
	if (glVertexAttrib3dvARB) SupportedMessage("glVertexAttrib3dvARB");
	if (glVertexAttrib3f) SupportedMessage("glVertexAttrib3f");
	if (glVertexAttrib3fARB) SupportedMessage("glVertexAttrib3fARB");
	if (glVertexAttrib3fv) SupportedMessage("glVertexAttrib3fv");
	if (glVertexAttrib3fvARB) SupportedMessage("glVertexAttrib3fvARB");
	if (glVertexAttrib3s) SupportedMessage("glVertexAttrib3s");
	if (glVertexAttrib3sARB) SupportedMessage("glVertexAttrib3sARB");
	if (glVertexAttrib3sv) SupportedMessage("glVertexAttrib3sv");
	if (glVertexAttrib3svARB) SupportedMessage("glVertexAttrib3svARB");
	if (glVertexAttrib4bv) SupportedMessage("glVertexAttrib4bv");
	if (glVertexAttrib4bvARB) SupportedMessage("glVertexAttrib4bvARB");
	if (glVertexAttrib4d) SupportedMessage("glVertexAttrib4d");
	if (glVertexAttrib4dARB) SupportedMessage("glVertexAttrib4dARB");
	if (glVertexAttrib4dv) SupportedMessage("glVertexAttrib4dv");
	if (glVertexAttrib4dvARB) SupportedMessage("glVertexAttrib4dvARB");
	if (glVertexAttrib4f) SupportedMessage("glVertexAttrib4f");
	if (glVertexAttrib4fARB) SupportedMessage("glVertexAttrib4fARB");
	if (glVertexAttrib4fv) SupportedMessage("glVertexAttrib4fv");
	if (glVertexAttrib4fvARB) SupportedMessage("glVertexAttrib4fvARB");
	if (glVertexAttrib4iv) SupportedMessage("glVertexAttrib4iv");
	if (glVertexAttrib4ivARB) SupportedMessage("glVertexAttrib4ivARB");
	if (glVertexAttrib4Nbv) SupportedMessage("glVertexAttrib4Nbv");
	if (glVertexAttrib4NbvARB) SupportedMessage("glVertexAttrib4NbvARB");
	if (glVertexAttrib4Niv) SupportedMessage("glVertexAttrib4Niv");
	if (glVertexAttrib4NivARB) SupportedMessage("glVertexAttrib4NivARB");
	if (glVertexAttrib4Nsv) SupportedMessage("glVertexAttrib4Nsv");
	if (glVertexAttrib4NsvARB) SupportedMessage("glVertexAttrib4NsvARB");
	if (glVertexAttrib4Nub) SupportedMessage("glVertexAttrib4Nub");
	if (glVertexAttrib4NubARB) SupportedMessage("glVertexAttrib4NubARB");
	if (glVertexAttrib4Nubv) SupportedMessage("glVertexAttrib4Nubv");
	if (glVertexAttrib4NubvARB) SupportedMessage("glVertexAttrib4NubvARB");
	if (glVertexAttrib4Nuiv) SupportedMessage("glVertexAttrib4Nuiv");
	if (glVertexAttrib4NuivARB) SupportedMessage("glVertexAttrib4NuivARB");
	if (glVertexAttrib4Nusv) SupportedMessage("glVertexAttrib4Nusv");
	if (glVertexAttrib4NusvARB) SupportedMessage("glVertexAttrib4NusvARB");
	if (glVertexAttrib4s) SupportedMessage("glVertexAttrib4s");
	if (glVertexAttrib4sARB) SupportedMessage("glVertexAttrib4sARB");
	if (glVertexAttrib4sv) SupportedMessage("glVertexAttrib4sv");
	if (glVertexAttrib4svARB) SupportedMessage("glVertexAttrib4svARB");
	if (glVertexAttrib4ubv) SupportedMessage("glVertexAttrib4ubv");
	if (glVertexAttrib4ubvARB) SupportedMessage("glVertexAttrib4ubvARB");
	if (glVertexAttrib4uiv) SupportedMessage("glVertexAttrib4uiv");
	if (glVertexAttrib4uivARB) SupportedMessage("glVertexAttrib4uivARB");
	if (glVertexAttrib4usv) SupportedMessage("glVertexAttrib4usv");
	if (glVertexAttrib4usvARB) SupportedMessage("glVertexAttrib4usvARB");
	if (glVertexAttribDivisor) SupportedMessage("glVertexAttribDivisor");
	if (glVertexAttribDivisorARB) SupportedMessage("glVertexAttribDivisorARB");
	if (glVertexAttribI1i) SupportedMessage("glVertexAttribI1i");
	if (glVertexAttribI1iEXT) SupportedMessage("glVertexAttribI1iEXT");
	if (glVertexAttribI1iv) SupportedMessage("glVertexAttribI1iv");
	if (glVertexAttribI1ivEXT) SupportedMessage("glVertexAttribI1ivEXT");
	if (glVertexAttribI1ui) SupportedMessage("glVertexAttribI1ui");
	if (glVertexAttribI1uiEXT) SupportedMessage("glVertexAttribI1uiEXT");
	if (glVertexAttribI1uiv) SupportedMessage("glVertexAttribI1uiv");
	if (glVertexAttribI1uivEXT) SupportedMessage("glVertexAttribI1uivEXT");
	if (glVertexAttribI2i) SupportedMessage("glVertexAttribI2i");
	if (glVertexAttribI2iEXT) SupportedMessage("glVertexAttribI2iEXT");
	if (glVertexAttribI2iv) SupportedMessage("glVertexAttribI2iv");
	if (glVertexAttribI2ivEXT) SupportedMessage("glVertexAttribI2ivEXT");
	if (glVertexAttribI2ui) SupportedMessage("glVertexAttribI2ui");
	if (glVertexAttribI2uiEXT) SupportedMessage("glVertexAttribI2uiEXT");
	if (glVertexAttribI2uiv) SupportedMessage("glVertexAttribI2uiv");
	if (glVertexAttribI2uivEXT) SupportedMessage("glVertexAttribI2uivEXT");
	if (glVertexAttribI3i) SupportedMessage("glVertexAttribI3i");
	if (glVertexAttribI3iEXT) SupportedMessage("glVertexAttribI3iEXT");
	if (glVertexAttribI3iv) SupportedMessage("glVertexAttribI3iv");
	if (glVertexAttribI3ivEXT) SupportedMessage("glVertexAttribI3ivEXT");
	if (glVertexAttribI3ui) SupportedMessage("glVertexAttribI3ui");
	if (glVertexAttribI3uiEXT) SupportedMessage("glVertexAttribI3uiEXT");
	if (glVertexAttribI3uiv) SupportedMessage("glVertexAttribI3uiv");
	if (glVertexAttribI3uivEXT) SupportedMessage("glVertexAttribI3uivEXT");
	if (glVertexAttribI4bv) SupportedMessage("glVertexAttribI4bv");
	if (glVertexAttribI4bvEXT) SupportedMessage("glVertexAttribI4bvEXT");
	if (glVertexAttribI4i) SupportedMessage("glVertexAttribI4i");
	if (glVertexAttribI4iEXT) SupportedMessage("glVertexAttribI4iEXT");
	if (glVertexAttribI4iv) SupportedMessage("glVertexAttribI4iv");
	if (glVertexAttribI4ivEXT) SupportedMessage("glVertexAttribI4ivEXT");
	if (glVertexAttribI4sv) SupportedMessage("glVertexAttribI4sv");
	if (glVertexAttribI4svEXT) SupportedMessage("glVertexAttribI4svEXT");
	if (glVertexAttribI4ubv) SupportedMessage("glVertexAttribI4ubv");
	if (glVertexAttribI4ubvEXT) SupportedMessage("glVertexAttribI4ubvEXT");
	if (glVertexAttribI4ui) SupportedMessage("glVertexAttribI4ui");
	if (glVertexAttribI4uiEXT) SupportedMessage("glVertexAttribI4uiEXT");
	if (glVertexAttribI4uiv) SupportedMessage("glVertexAttribI4uiv");
	if (glVertexAttribI4uivEXT) SupportedMessage("glVertexAttribI4uivEXT");
	if (glVertexAttribI4usv) SupportedMessage("glVertexAttribI4usv");
	if (glVertexAttribI4usvEXT) SupportedMessage("glVertexAttribI4usvEXT");
	if (glVertexAttribIPointer) SupportedMessage("glVertexAttribIPointer");
	if (glVertexAttribIPointerEXT) SupportedMessage("glVertexAttribIPointerEXT");
	if (glVertexAttribL1d) SupportedMessage("glVertexAttribL1d");
	if (glVertexAttribL1dEXT) SupportedMessage("glVertexAttribL1dEXT");
	if (glVertexAttribL1dv) SupportedMessage("glVertexAttribL1dv");
	if (glVertexAttribL1dvEXT) SupportedMessage("glVertexAttribL1dvEXT");
	if (glVertexAttribL2d) SupportedMessage("glVertexAttribL2d");
	if (glVertexAttribL2dEXT) SupportedMessage("glVertexAttribL2dEXT");
	if (glVertexAttribL2dv) SupportedMessage("glVertexAttribL2dv");
	if (glVertexAttribL2dvEXT) SupportedMessage("glVertexAttribL2dvEXT");
	if (glVertexAttribL3d) SupportedMessage("glVertexAttribL3d");
	if (glVertexAttribL3dEXT) SupportedMessage("glVertexAttribL3dEXT");
	if (glVertexAttribL3dv) SupportedMessage("glVertexAttribL3dv");
	if (glVertexAttribL3dvEXT) SupportedMessage("glVertexAttribL3dvEXT");
	if (glVertexAttribL4d) SupportedMessage("glVertexAttribL4d");
	if (glVertexAttribL4dEXT) SupportedMessage("glVertexAttribL4dEXT");
	if (glVertexAttribL4dv) SupportedMessage("glVertexAttribL4dv");
	if (glVertexAttribL4dvEXT) SupportedMessage("glVertexAttribL4dvEXT");
	if (glVertexAttribLPointer) SupportedMessage("glVertexAttribLPointer");
	if (glVertexAttribLPointerEXT) SupportedMessage("glVertexAttribLPointerEXT");
	if (glVertexAttribP1ui) SupportedMessage("glVertexAttribP1ui");
	if (glVertexAttribP1uiv) SupportedMessage("glVertexAttribP1uiv");
	if (glVertexAttribP2ui) SupportedMessage("glVertexAttribP2ui");
	if (glVertexAttribP2uiv) SupportedMessage("glVertexAttribP2uiv");
	if (glVertexAttribP3ui) SupportedMessage("glVertexAttribP3ui");
	if (glVertexAttribP3uiv) SupportedMessage("glVertexAttribP3uiv");
	if (glVertexAttribP4ui) SupportedMessage("glVertexAttribP4ui");
	if (glVertexAttribP4uiv) SupportedMessage("glVertexAttribP4uiv");
	if (glVertexAttribPointer) SupportedMessage("glVertexAttribPointer");
	if (glVertexAttribPointerARB) SupportedMessage("glVertexAttribPointerARB");
	if (glVertexBlendARB) SupportedMessage("glVertexBlendARB");
	if (glVertexP2ui) SupportedMessage("glVertexP2ui");
	if (glVertexP2uiv) SupportedMessage("glVertexP2uiv");
	if (glVertexP3ui) SupportedMessage("glVertexP3ui");
	if (glVertexP3uiv) SupportedMessage("glVertexP3uiv");
	if (glVertexP4ui) SupportedMessage("glVertexP4ui");
	if (glVertexP4uiv) SupportedMessage("glVertexP4uiv");
	if (glVertexPointerEXT) SupportedMessage("glVertexPointerEXT");
	if (glVertexWeightfEXT) SupportedMessage("glVertexWeightfEXT");
	if (glVertexWeightfvEXT) SupportedMessage("glVertexWeightfvEXT");
	if (glVertexWeightPointerEXT) SupportedMessage("glVertexWeightPointerEXT");
	if (glViewportArrayv) SupportedMessage("glViewportArrayv");
	if (glViewportIndexedf) SupportedMessage("glViewportIndexedf");
	if (glViewportIndexedfv) SupportedMessage("glViewportIndexedfv");
	if (glWaitSync) SupportedMessage("glWaitSync");
	if (glWeightbvARB) SupportedMessage("glWeightbvARB");
	if (glWeightdvARB) SupportedMessage("glWeightdvARB");
	if (glWeightfvARB) SupportedMessage("glWeightfvARB");
	if (glWeightivARB) SupportedMessage("glWeightivARB");
	if (glWeightPointerARB) SupportedMessage("glWeightPointerARB");
	if (glWeightsvARB) SupportedMessage("glWeightsvARB");
	if (glWeightubvARB) SupportedMessage("glWeightubvARB");
	if (glWeightuivARB) SupportedMessage("glWeightuivARB");
	if (glWeightusvARB) SupportedMessage("glWeightusvARB");
	if (glWindowPos2d) SupportedMessage("glWindowPos2d");
	if (glWindowPos2dARB) SupportedMessage("glWindowPos2dARB");
	if (glWindowPos2dv) SupportedMessage("glWindowPos2dv");
	if (glWindowPos2dvARB) SupportedMessage("glWindowPos2dvARB");
	if (glWindowPos2f) SupportedMessage("glWindowPos2f");
	if (glWindowPos2fARB) SupportedMessage("glWindowPos2fARB");
	if (glWindowPos2fv) SupportedMessage("glWindowPos2fv");
	if (glWindowPos2fvARB) SupportedMessage("glWindowPos2fvARB");
	if (glWindowPos2i) SupportedMessage("glWindowPos2i");
	if (glWindowPos2iARB) SupportedMessage("glWindowPos2iARB");
	if (glWindowPos2iv) SupportedMessage("glWindowPos2iv");
	if (glWindowPos2ivARB) SupportedMessage("glWindowPos2ivARB");
	if (glWindowPos2s) SupportedMessage("glWindowPos2s");
	if (glWindowPos2sARB) SupportedMessage("glWindowPos2sARB");
	if (glWindowPos2sv) SupportedMessage("glWindowPos2sv");
	if (glWindowPos2svARB) SupportedMessage("glWindowPos2svARB");
	if (glWindowPos3d) SupportedMessage("glWindowPos3d");
	if (glWindowPos3dARB) SupportedMessage("glWindowPos3dARB");
	if (glWindowPos3dv) SupportedMessage("glWindowPos3dv");
	if (glWindowPos3dvARB) SupportedMessage("glWindowPos3dvARB");
	if (glWindowPos3f) SupportedMessage("glWindowPos3f");
	if (glWindowPos3fARB) SupportedMessage("glWindowPos3fARB");
	if (glWindowPos3fv) SupportedMessage("glWindowPos3fv");
	if (glWindowPos3fvARB) SupportedMessage("glWindowPos3fvARB");
	if (glWindowPos3i) SupportedMessage("glWindowPos3i");
	if (glWindowPos3iARB) SupportedMessage("glWindowPos3iARB");
	if (glWindowPos3iv) SupportedMessage("glWindowPos3iv");
	if (glWindowPos3ivARB) SupportedMessage("glWindowPos3ivARB");
	if (glWindowPos3s) SupportedMessage("glWindowPos3s");
	if (glWindowPos3sARB) SupportedMessage("glWindowPos3sARB");
	if (glWindowPos3sv) SupportedMessage("glWindowPos3sv");
	if (glWindowPos3svARB) SupportedMessage("glWindowPos3svARB");
	if (glWriteMaskEXT) SupportedMessage("glWriteMaskEXT");
	if (wglBindDisplayColorTableEXT) SupportedMessage("wglBindDisplayColorTableEXT");
	if (wglBindTexImageARB) SupportedMessage("wglBindTexImageARB");
	if (wglChoosePixelFormatARB) SupportedMessage("wglChoosePixelFormatARB");
	if (wglChoosePixelFormatEXT) SupportedMessage("wglChoosePixelFormatEXT");
	if (wglCreateBufferRegionARB) SupportedMessage("wglCreateBufferRegionARB");
	if (wglCreateContextAttribsARB) SupportedMessage("wglCreateContextAttribsARB");
	if (wglCreateDisplayColorTableEXT) SupportedMessage("wglCreateDisplayColorTableEXT");
	if (wglCreatePbufferARB) SupportedMessage("wglCreatePbufferARB");
	if (wglCreatePbufferEXT) SupportedMessage("wglCreatePbufferEXT");
	if (wglDeleteBufferRegionARB) SupportedMessage("wglDeleteBufferRegionARB");
	if (wglDestroyDisplayColorTableEXT) SupportedMessage("wglDestroyDisplayColorTableEXT");
	if (wglDestroyPbufferARB) SupportedMessage("wglDestroyPbufferARB");
	if (wglDestroyPbufferEXT) SupportedMessage("wglDestroyPbufferEXT");
	if (wglGetCurrentReadDCARB) SupportedMessage("wglGetCurrentReadDCARB");
	if (wglGetCurrentReadDCEXT) SupportedMessage("wglGetCurrentReadDCEXT");
	if (wglGetExtensionsStringARB) SupportedMessage("wglGetExtensionsStringARB");
	if (wglGetExtensionsStringEXT) SupportedMessage("wglGetExtensionsStringEXT");
	if (wglGetPbufferDCARB) SupportedMessage("wglGetPbufferDCARB");
	if (wglGetPbufferDCEXT) SupportedMessage("wglGetPbufferDCEXT");
	if (wglGetPixelFormatAttribfvARB) SupportedMessage("wglGetPixelFormatAttribfvARB");
	if (wglGetPixelFormatAttribfvEXT) SupportedMessage("wglGetPixelFormatAttribfvEXT");
	if (wglGetPixelFormatAttribivARB) SupportedMessage("wglGetPixelFormatAttribivARB");
	if (wglGetPixelFormatAttribivEXT) SupportedMessage("wglGetPixelFormatAttribivEXT");
	if (wglGetSwapIntervalEXT) SupportedMessage("wglGetSwapIntervalEXT");
	if (wglLoadDisplayColorTableEXT) SupportedMessage("wglLoadDisplayColorTableEXT");
	if (wglMakeContextCurrentARB) SupportedMessage("wglMakeContextCurrentARB");
	if (wglMakeContextCurrentEXT) SupportedMessage("wglMakeContextCurrentEXT");
	if (wglQueryPbufferARB) SupportedMessage("wglQueryPbufferARB");
	if (wglQueryPbufferEXT) SupportedMessage("wglQueryPbufferEXT");
	if (wglReleasePbufferDCARB) SupportedMessage("wglReleasePbufferDCARB");
	if (wglReleasePbufferDCEXT) SupportedMessage("wglReleasePbufferDCEXT");
	if (wglReleaseTexImageARB) SupportedMessage("wglReleaseTexImageARB");
	if (wglRestoreBufferRegionARB) SupportedMessage("wglRestoreBufferRegionARB");
	if (wglSaveBufferRegionARB) SupportedMessage("wglSaveBufferRegionARB");
	if (wglSetPbufferAttribARB) SupportedMessage("wglSetPbufferAttribARB");
	if (wglSwapIntervalEXT) SupportedMessage("wglSwapIntervalEXT");
}

void CheckExtensions() {
	if (!glActiveProgramEXT) NotSupportedMessage("glActiveProgramEXT");
	if (!glActiveShaderProgram) NotSupportedMessage("glActiveShaderProgram");
	if (!glActiveStencilFaceEXT) NotSupportedMessage("glActiveStencilFaceEXT");
	if (!glActiveTexture) NotSupportedMessage("glActiveTexture");
	if (!glActiveTextureARB) NotSupportedMessage("glActiveTextureARB");
	if (!glApplyTextureEXT) NotSupportedMessage("glApplyTextureEXT");
	if (!glAreTexturesResidentEXT) NotSupportedMessage("glAreTexturesResidentEXT");
	if (!glArrayElementEXT) NotSupportedMessage("glArrayElementEXT");
	if (!glAttachObjectARB) NotSupportedMessage("glAttachObjectARB");
	if (!glAttachShader) NotSupportedMessage("glAttachShader");
	if (!glBeginConditionalRender) NotSupportedMessage("glBeginConditionalRender");
	if (!glBeginQuery) NotSupportedMessage("glBeginQuery");
	if (!glBeginQueryARB) NotSupportedMessage("glBeginQueryARB");
	if (!glBeginQueryIndexed) NotSupportedMessage("glBeginQueryIndexed");
	if (!glBeginTransformFeedback) NotSupportedMessage("glBeginTransformFeedback");
	if (!glBeginTransformFeedbackEXT) NotSupportedMessage("glBeginTransformFeedbackEXT");
	if (!glBeginVertexShaderEXT) NotSupportedMessage("glBeginVertexShaderEXT");
	if (!glBindAttribLocation) NotSupportedMessage("glBindAttribLocation");
	if (!glBindAttribLocationARB) NotSupportedMessage("glBindAttribLocationARB");
	if (!glBindBuffer) NotSupportedMessage("glBindBuffer");
	if (!glBindBufferARB) NotSupportedMessage("glBindBufferARB");
	if (!glBindBufferBase) NotSupportedMessage("glBindBufferBase");
	if (!glBindBufferBaseEXT) NotSupportedMessage("glBindBufferBaseEXT");
	if (!glBindBufferOffsetEXT) NotSupportedMessage("glBindBufferOffsetEXT");
	if (!glBindBufferRange) NotSupportedMessage("glBindBufferRange");
	if (!glBindBufferRangeEXT) NotSupportedMessage("glBindBufferRangeEXT");
	if (!glBindFragDataLocation) NotSupportedMessage("glBindFragDataLocation");
	if (!glBindFragDataLocationEXT) NotSupportedMessage("glBindFragDataLocationEXT");
	if (!glBindFragDataLocationIndexed) NotSupportedMessage("glBindFragDataLocationIndexed");
	if (!glBindFramebuffer) NotSupportedMessage("glBindFramebuffer");
	if (!glBindFramebufferEXT) NotSupportedMessage("glBindFramebufferEXT");
	if (!glBindImageTexture) NotSupportedMessage("glBindImageTexture");
	if (!glBindImageTextureEXT) NotSupportedMessage("glBindImageTextureEXT");
	if (!glBindLightParameterEXT) NotSupportedMessage("glBindLightParameterEXT");
	if (!glBindMaterialParameterEXT) NotSupportedMessage("glBindMaterialParameterEXT");
	if (!glBindMultiTextureEXT) NotSupportedMessage("glBindMultiTextureEXT");
	if (!glBindParameterEXT) NotSupportedMessage("glBindParameterEXT");
	if (!glBindProgramARB) NotSupportedMessage("glBindProgramARB");
	if (!glBindProgramPipeline) NotSupportedMessage("glBindProgramPipeline");
	if (!glBindRenderbuffer) NotSupportedMessage("glBindRenderbuffer");
	if (!glBindRenderbufferEXT) NotSupportedMessage("glBindRenderbufferEXT");
	if (!glBindSampler) NotSupportedMessage("glBindSampler");
	if (!glBindTexGenParameterEXT) NotSupportedMessage("glBindTexGenParameterEXT");
	if (!glBindTextureEXT) NotSupportedMessage("glBindTextureEXT");
	if (!glBindTextureUnitParameterEXT) NotSupportedMessage("glBindTextureUnitParameterEXT");
	if (!glBindTransformFeedback) NotSupportedMessage("glBindTransformFeedback");
	if (!glBindVertexArray) NotSupportedMessage("glBindVertexArray");
	if (!glBindVertexShaderEXT) NotSupportedMessage("glBindVertexShaderEXT");
	if (!glBinormalPointerEXT) NotSupportedMessage("glBinormalPointerEXT");
	if (!glBlendColor) NotSupportedMessage("glBlendColor");
	if (!glBlendColorEXT) NotSupportedMessage("glBlendColorEXT");
	if (!glBlendEquation) NotSupportedMessage("glBlendEquation");
	if (!glBlendEquation) NotSupportedMessage("glBlendEquation");
	if (!glBlendEquationEXT) NotSupportedMessage("glBlendEquationEXT");
	if (!glBlendEquationi) NotSupportedMessage("glBlendEquationi");
	if (!glBlendEquationiARB) NotSupportedMessage("glBlendEquationiARB");
	if (!glBlendEquationSeparate) NotSupportedMessage("glBlendEquationSeparate");
	if (!glBlendEquationSeparateEXT) NotSupportedMessage("glBlendEquationSeparateEXT");
	if (!glBlendEquationSeparatei) NotSupportedMessage("glBlendEquationSeparatei");
	if (!glBlendEquationSeparateiARB) NotSupportedMessage("glBlendEquationSeparateiARB");
	if (!glBlendFunci) NotSupportedMessage("glBlendFunci");
	if (!glBlendFunciARB) NotSupportedMessage("glBlendFunciARB");
	if (!glBlendFuncSeparate) NotSupportedMessage("glBlendFuncSeparate");
	if (!glBlendFuncSeparateEXT) NotSupportedMessage("glBlendFuncSeparateEXT");
	if (!glBlendFuncSeparatei) NotSupportedMessage("glBlendFuncSeparatei");
	if (!glBlendFuncSeparateiARB) NotSupportedMessage("glBlendFuncSeparateiARB");
	if (!glBlitFramebuffer) NotSupportedMessage("glBlitFramebuffer");
	if (!glBlitFramebufferEXT) NotSupportedMessage("glBlitFramebufferEXT");
	if (!glBufferData) NotSupportedMessage("glBufferData");
	if (!glBufferDataARB) NotSupportedMessage("glBufferDataARB");
	if (!glBufferSubData) NotSupportedMessage("glBufferSubData");
	if (!glBufferSubDataARB) NotSupportedMessage("glBufferSubDataARB");
	if (!glCheckFramebufferStatus) NotSupportedMessage("glCheckFramebufferStatus");
	if (!glCheckFramebufferStatusEXT) NotSupportedMessage("glCheckFramebufferStatusEXT");
	if (!glCheckNamedFramebufferStatusEXT) NotSupportedMessage("glCheckNamedFramebufferStatusEXT");
	if (!glClampColor) NotSupportedMessage("glClampColor");
	if (!glClampColorARB) NotSupportedMessage("glClampColorARB");
	if (!glClearBufferfi) NotSupportedMessage("glClearBufferfi");
	if (!glClearBufferfv) NotSupportedMessage("glClearBufferfv");
	if (!glClearBufferiv) NotSupportedMessage("glClearBufferiv");
	if (!glClearBufferuiv) NotSupportedMessage("glClearBufferuiv");
	if (!glClearColorIiEXT) NotSupportedMessage("glClearColorIiEXT");
	if (!glClearColorIuiEXT) NotSupportedMessage("glClearColorIuiEXT");
	if (!glClearDepthf) NotSupportedMessage("glClearDepthf");
	if (!glClientActiveTexture) NotSupportedMessage("glClientActiveTexture");
	if (!glClientActiveTextureARB) NotSupportedMessage("glClientActiveTextureARB");
	if (!glClientAttribDefaultEXT) NotSupportedMessage("glClientAttribDefaultEXT");
	if (!glClientWaitSync) NotSupportedMessage("glClientWaitSync");
	if (!glColorMaski) NotSupportedMessage("glColorMaski");
	if (!glColorMaskIndexedEXT) NotSupportedMessage("glColorMaskIndexedEXT");
	if (!glColorP3ui) NotSupportedMessage("glColorP3ui");
	if (!glColorP3uiv) NotSupportedMessage("glColorP3uiv");
	if (!glColorP4ui) NotSupportedMessage("glColorP4ui");
	if (!glColorP4uiv) NotSupportedMessage("glColorP4uiv");
	if (!glColorPointerEXT) NotSupportedMessage("glColorPointerEXT");
	if (!glColorSubTable) NotSupportedMessage("glColorSubTable");
	if (!glColorSubTableEXT) NotSupportedMessage("glColorSubTableEXT");
	if (!glColorTable) NotSupportedMessage("glColorTable");
	if (!glColorTableEXT) NotSupportedMessage("glColorTableEXT");
	if (!glColorTableParameterfv) NotSupportedMessage("glColorTableParameterfv");
	if (!glColorTableParameteriv) NotSupportedMessage("glColorTableParameteriv");
	if (!glCompileShader) NotSupportedMessage("glCompileShader");
	if (!glCompileShaderARB) NotSupportedMessage("glCompileShaderARB");
	if (!glCompileShaderIncludeARB) NotSupportedMessage("glCompileShaderIncludeARB");
	if (!glCompressedMultiTexImage1DEXT) NotSupportedMessage("glCompressedMultiTexImage1DEXT");
	if (!glCompressedMultiTexImage2DEXT) NotSupportedMessage("glCompressedMultiTexImage2DEXT");
	if (!glCompressedMultiTexImage3DEXT) NotSupportedMessage("glCompressedMultiTexImage3DEXT");
	if (!glCompressedMultiTexSubImage1DEXT) NotSupportedMessage("glCompressedMultiTexSubImage1DEXT");
	if (!glCompressedMultiTexSubImage2DEXT) NotSupportedMessage("glCompressedMultiTexSubImage2DEXT");
	if (!glCompressedMultiTexSubImage3DEXT) NotSupportedMessage("glCompressedMultiTexSubImage3DEXT");
	if (!glCompressedTexImage1D) NotSupportedMessage("glCompressedTexImage1D");
	if (!glCompressedTexImage1DARB) NotSupportedMessage("glCompressedTexImage1DARB");
	if (!glCompressedTexImage2D) NotSupportedMessage("glCompressedTexImage2D");
	if (!glCompressedTexImage2DARB) NotSupportedMessage("glCompressedTexImage2DARB");
	if (!glCompressedTexImage3D) NotSupportedMessage("glCompressedTexImage3D");
	if (!glCompressedTexImage3DARB) NotSupportedMessage("glCompressedTexImage3DARB");
	if (!glCompressedTexSubImage1D) NotSupportedMessage("glCompressedTexSubImage1D");
	if (!glCompressedTexSubImage1DARB) NotSupportedMessage("glCompressedTexSubImage1DARB");
	if (!glCompressedTexSubImage2D) NotSupportedMessage("glCompressedTexSubImage2D");
	if (!glCompressedTexSubImage2DARB) NotSupportedMessage("glCompressedTexSubImage2DARB");
	if (!glCompressedTexSubImage3D) NotSupportedMessage("glCompressedTexSubImage3D");
	if (!glCompressedTexSubImage3DARB) NotSupportedMessage("glCompressedTexSubImage3DARB");
	if (!glCompressedTextureImage1DEXT) NotSupportedMessage("glCompressedTextureImage1DEXT");
	if (!glCompressedTextureImage2DEXT) NotSupportedMessage("glCompressedTextureImage2DEXT");
	if (!glCompressedTextureImage3DEXT) NotSupportedMessage("glCompressedTextureImage3DEXT");
	if (!glCompressedTextureSubImage1DEXT) NotSupportedMessage("glCompressedTextureSubImage1DEXT");
	if (!glCompressedTextureSubImage2DEXT) NotSupportedMessage("glCompressedTextureSubImage2DEXT");
	if (!glCompressedTextureSubImage3DEXT) NotSupportedMessage("glCompressedTextureSubImage3DEXT");
	if (!glConvolutionFilter1D) NotSupportedMessage("glConvolutionFilter1D");
	if (!glConvolutionFilter1DEXT) NotSupportedMessage("glConvolutionFilter1DEXT");
	if (!glConvolutionFilter2D) NotSupportedMessage("glConvolutionFilter2D");
	if (!glConvolutionFilter2DEXT) NotSupportedMessage("glConvolutionFilter2DEXT");
	if (!glConvolutionParameterf) NotSupportedMessage("glConvolutionParameterf");
	if (!glConvolutionParameterfEXT) NotSupportedMessage("glConvolutionParameterfEXT");
	if (!glConvolutionParameterfv) NotSupportedMessage("glConvolutionParameterfv");
	if (!glConvolutionParameterfvEXT) NotSupportedMessage("glConvolutionParameterfvEXT");
	if (!glConvolutionParameteri) NotSupportedMessage("glConvolutionParameteri");
	if (!glConvolutionParameteriEXT) NotSupportedMessage("glConvolutionParameteriEXT");
	if (!glConvolutionParameteriv) NotSupportedMessage("glConvolutionParameteriv");
	if (!glConvolutionParameterivEXT) NotSupportedMessage("glConvolutionParameterivEXT");
	if (!glCopyBufferSubData) NotSupportedMessage("glCopyBufferSubData");
	if (!glCopyColorSubTable) NotSupportedMessage("glCopyColorSubTable");
	if (!glCopyColorSubTableEXT) NotSupportedMessage("glCopyColorSubTableEXT");
	if (!glCopyColorTable) NotSupportedMessage("glCopyColorTable");
	if (!glCopyConvolutionFilter1D) NotSupportedMessage("glCopyConvolutionFilter1D");
	if (!glCopyConvolutionFilter1DEXT) NotSupportedMessage("glCopyConvolutionFilter1DEXT");
	if (!glCopyConvolutionFilter2D) NotSupportedMessage("glCopyConvolutionFilter2D");
	if (!glCopyConvolutionFilter2DEXT) NotSupportedMessage("glCopyConvolutionFilter2DEXT");
	if (!glCopyMultiTexImage1DEXT) NotSupportedMessage("glCopyMultiTexImage1DEXT");
	if (!glCopyMultiTexImage2DEXT) NotSupportedMessage("glCopyMultiTexImage2DEXT");
	if (!glCopyMultiTexSubImage1DEXT) NotSupportedMessage("glCopyMultiTexSubImage1DEXT");
	if (!glCopyMultiTexSubImage2DEXT) NotSupportedMessage("glCopyMultiTexSubImage2DEXT");
	if (!glCopyMultiTexSubImage3DEXT) NotSupportedMessage("glCopyMultiTexSubImage3DEXT");
	if (!glCopyTexImage1DEXT) NotSupportedMessage("glCopyTexImage1DEXT");
	if (!glCopyTexImage2DEXT) NotSupportedMessage("glCopyTexImage2DEXT");
	if (!glCopyTexSubImage1DEXT) NotSupportedMessage("glCopyTexSubImage1DEXT");
	if (!glCopyTexSubImage2DEXT) NotSupportedMessage("glCopyTexSubImage2DEXT");
	if (!glCopyTexSubImage3D) NotSupportedMessage("glCopyTexSubImage3D");
	if (!glCopyTexSubImage3DEXT) NotSupportedMessage("glCopyTexSubImage3DEXT");
	if (!glCopyTextureImage1DEXT) NotSupportedMessage("glCopyTextureImage1DEXT");
	if (!glCopyTextureImage2DEXT) NotSupportedMessage("glCopyTextureImage2DEXT");
	if (!glCopyTextureSubImage1DEXT) NotSupportedMessage("glCopyTextureSubImage1DEXT");
	if (!glCopyTextureSubImage2DEXT) NotSupportedMessage("glCopyTextureSubImage2DEXT");
	if (!glCopyTextureSubImage3DEXT) NotSupportedMessage("glCopyTextureSubImage3DEXT");
	if (!glCreateProgram) NotSupportedMessage("glCreateProgram");
	if (!glCreateProgramObjectARB) NotSupportedMessage("glCreateProgramObjectARB");
	if (!glCreateShader) NotSupportedMessage("glCreateShader");
	if (!glCreateShaderObjectARB) NotSupportedMessage("glCreateShaderObjectARB");
	if (!glCreateShaderProgramEXT) NotSupportedMessage("glCreateShaderProgramEXT");
	if (!glCreateShaderProgramv) NotSupportedMessage("glCreateShaderProgramv");
	if (!glCreateSyncFromCLeventARB) NotSupportedMessage("glCreateSyncFromCLeventARB");
	if (!glCullParameterdvEXT) NotSupportedMessage("glCullParameterdvEXT");
	if (!glCullParameterfvEXT) NotSupportedMessage("glCullParameterfvEXT");
	if (!glCurrentPaletteMatrixARB) NotSupportedMessage("glCurrentPaletteMatrixARB");
	if (!glDebugMessageCallbackARB) NotSupportedMessage("glDebugMessageCallbackARB");
	if (!glDebugMessageControlARB) NotSupportedMessage("glDebugMessageControlARB");
	if (!glDebugMessageInsertARB) NotSupportedMessage("glDebugMessageInsertARB");
	if (!glDeleteBuffers) NotSupportedMessage("glDeleteBuffers");
	if (!glDeleteBuffersARB) NotSupportedMessage("glDeleteBuffersARB");
	if (!glDeleteFramebuffers) NotSupportedMessage("glDeleteFramebuffers");
	if (!glDeleteFramebuffersEXT) NotSupportedMessage("glDeleteFramebuffersEXT");
	if (!glDeleteNamedStringARB) NotSupportedMessage("glDeleteNamedStringARB");
	if (!glDeleteObjectARB) NotSupportedMessage("glDeleteObjectARB");
	if (!glDeleteProgram) NotSupportedMessage("glDeleteProgram");
	if (!glDeleteProgramPipelines) NotSupportedMessage("glDeleteProgramPipelines");
	if (!glDeleteProgramsARB) NotSupportedMessage("glDeleteProgramsARB");
	if (!glDeleteQueries) NotSupportedMessage("glDeleteQueries");
	if (!glDeleteQueriesARB) NotSupportedMessage("glDeleteQueriesARB");
	if (!glDeleteRenderbuffers) NotSupportedMessage("glDeleteRenderbuffers");
	if (!glDeleteRenderbuffersEXT) NotSupportedMessage("glDeleteRenderbuffersEXT");
	if (!glDeleteSamplers) NotSupportedMessage("glDeleteSamplers");
	if (!glDeleteShader) NotSupportedMessage("glDeleteShader");
	if (!glDeleteSync) NotSupportedMessage("glDeleteSync");
	if (!glDeleteTexturesEXT) NotSupportedMessage("glDeleteTexturesEXT");
	if (!glDeleteTransformFeedbacks) NotSupportedMessage("glDeleteTransformFeedbacks");
	if (!glDeleteVertexArrays) NotSupportedMessage("glDeleteVertexArrays");
	if (!glDeleteVertexShaderEXT) NotSupportedMessage("glDeleteVertexShaderEXT");
	if (!glDepthBoundsEXT) NotSupportedMessage("glDepthBoundsEXT");
	if (!glDepthRangeArrayv) NotSupportedMessage("glDepthRangeArrayv");
	if (!glDepthRangef) NotSupportedMessage("glDepthRangef");
	if (!glDepthRangeIndexed) NotSupportedMessage("glDepthRangeIndexed");
	if (!glDetachObjectARB) NotSupportedMessage("glDetachObjectARB");
	if (!glDetachShader) NotSupportedMessage("glDetachShader");
	if (!glDisableClientStateIndexedEXT) NotSupportedMessage("glDisableClientStateIndexedEXT");
	if (!glDisablei) NotSupportedMessage("glDisablei");
	if (!glDisableIndexedEXT) NotSupportedMessage("glDisableIndexedEXT");
	if (!glDisableVariantClientStateEXT) NotSupportedMessage("glDisableVariantClientStateEXT");
	if (!glDisableVertexAttribArray) NotSupportedMessage("glDisableVertexAttribArray");
	if (!glDisableVertexAttribArrayARB) NotSupportedMessage("glDisableVertexAttribArrayARB");
	if (!glDrawArraysEXT) NotSupportedMessage("glDrawArraysEXT");
	if (!glDrawArraysIndirect) NotSupportedMessage("glDrawArraysIndirect");
	if (!glDrawArraysInstanced) NotSupportedMessage("glDrawArraysInstanced");
	if (!glDrawArraysInstancedARB) NotSupportedMessage("glDrawArraysInstancedARB");
	if (!glDrawArraysInstancedBaseInstance) NotSupportedMessage("glDrawArraysInstancedBaseInstance");
	if (!glDrawArraysInstancedEXT) NotSupportedMessage("glDrawArraysInstancedEXT");
	if (!glDrawBuffers) NotSupportedMessage("glDrawBuffers");
	if (!glDrawBuffersARB) NotSupportedMessage("glDrawBuffersARB");
	if (!glDrawElementsBaseVertex) NotSupportedMessage("glDrawElementsBaseVertex");
	if (!glDrawElementsIndirect) NotSupportedMessage("glDrawElementsIndirect");
	if (!glDrawElementsInstanced) NotSupportedMessage("glDrawElementsInstanced");
	if (!glDrawElementsInstancedARB) NotSupportedMessage("glDrawElementsInstancedARB");
	if (!glDrawElementsInstancedBaseInstance) NotSupportedMessage("glDrawElementsInstancedBaseInstance");
	if (!glDrawElementsInstancedBaseVertex) NotSupportedMessage("glDrawElementsInstancedBaseVertex");
	if (!glDrawElementsInstancedBaseVertexBaseInstance) NotSupportedMessage("glDrawElementsInstancedBaseVertexBaseInstance");
	if (!glDrawElementsInstancedEXT) NotSupportedMessage("glDrawElementsInstancedEXT");
	if (!glDrawRangeElements) NotSupportedMessage("glDrawRangeElements");
	if (!glDrawRangeElementsBaseVertex) NotSupportedMessage("glDrawRangeElementsBaseVertex");
	if (!glDrawRangeElementsEXT) NotSupportedMessage("glDrawRangeElementsEXT");
	if (!glDrawTransformFeedback) NotSupportedMessage("glDrawTransformFeedback");
	if (!glDrawTransformFeedbackInstanced) NotSupportedMessage("glDrawTransformFeedbackInstanced");
	if (!glDrawTransformFeedbackStream) NotSupportedMessage("glDrawTransformFeedbackStream");
	if (!glDrawTransformFeedbackStreamInstanced) NotSupportedMessage("glDrawTransformFeedbackStreamInstanced");
	if (!glEdgeFlagPointerEXT) NotSupportedMessage("glEdgeFlagPointerEXT");
	if (!glEnableClientStateIndexedEXT) NotSupportedMessage("glEnableClientStateIndexedEXT");
	if (!glEnablei) NotSupportedMessage("glEnablei");
	if (!glEnableIndexedEXT) NotSupportedMessage("glEnableIndexedEXT");
	if (!glEnableVariantClientStateEXT) NotSupportedMessage("glEnableVariantClientStateEXT");
	if (!glEnableVertexAttribArray) NotSupportedMessage("glEnableVertexAttribArray");
	if (!glEnableVertexAttribArrayARB) NotSupportedMessage("glEnableVertexAttribArrayARB");
	if (!glEndConditionalRender) NotSupportedMessage("glEndConditionalRender");
	if (!glEndQuery) NotSupportedMessage("glEndQuery");
	if (!glEndQueryARB) NotSupportedMessage("glEndQueryARB");
	if (!glEndQueryIndexed) NotSupportedMessage("glEndQueryIndexed");
	if (!glEndTransformFeedback) NotSupportedMessage("glEndTransformFeedback");
	if (!glEndTransformFeedbackEXT) NotSupportedMessage("glEndTransformFeedbackEXT");
	if (!glEndVertexShaderEXT) NotSupportedMessage("glEndVertexShaderEXT");
	if (!glExtractComponentEXT) NotSupportedMessage("glExtractComponentEXT");
	if (!glFenceSync) NotSupportedMessage("glFenceSync");
	if (!glFlushMappedBufferRange) NotSupportedMessage("glFlushMappedBufferRange");
	if (!glFlushMappedNamedBufferRangeEXT) NotSupportedMessage("glFlushMappedNamedBufferRangeEXT");
	if (!glFogCoordd) NotSupportedMessage("glFogCoordd");
	if (!glFogCoorddEXT) NotSupportedMessage("glFogCoorddEXT");
	if (!glFogCoorddv) NotSupportedMessage("glFogCoorddv");
	if (!glFogCoorddvEXT) NotSupportedMessage("glFogCoorddvEXT");
	if (!glFogCoordf) NotSupportedMessage("glFogCoordf");
	if (!glFogCoordfEXT) NotSupportedMessage("glFogCoordfEXT");
	if (!glFogCoordfv) NotSupportedMessage("glFogCoordfv");
	if (!glFogCoordfvEXT) NotSupportedMessage("glFogCoordfvEXT");
	if (!glFogCoordPointer) NotSupportedMessage("glFogCoordPointer");
	if (!glFogCoordPointerEXT) NotSupportedMessage("glFogCoordPointerEXT");
	if (!glFramebufferDrawBufferEXT) NotSupportedMessage("glFramebufferDrawBufferEXT");
	if (!glFramebufferDrawBuffersEXT) NotSupportedMessage("glFramebufferDrawBuffersEXT");
	if (!glFramebufferReadBufferEXT) NotSupportedMessage("glFramebufferReadBufferEXT");
	if (!glFramebufferRenderbuffer) NotSupportedMessage("glFramebufferRenderbuffer");
	if (!glFramebufferRenderbufferEXT) NotSupportedMessage("glFramebufferRenderbufferEXT");
	if (!glFramebufferTexture) NotSupportedMessage("glFramebufferTexture");
	if (!glFramebufferTexture1D) NotSupportedMessage("glFramebufferTexture1D");
	if (!glFramebufferTexture1DEXT) NotSupportedMessage("glFramebufferTexture1DEXT");
	if (!glFramebufferTexture2D) NotSupportedMessage("glFramebufferTexture2D");
	if (!glFramebufferTexture2DEXT) NotSupportedMessage("glFramebufferTexture2DEXT");
	if (!glFramebufferTexture3D) NotSupportedMessage("glFramebufferTexture3D");
	if (!glFramebufferTexture3DEXT) NotSupportedMessage("glFramebufferTexture3DEXT");
	if (!glFramebufferTextureARB) NotSupportedMessage("glFramebufferTextureARB");
	if (!glFramebufferTextureEXT) NotSupportedMessage("glFramebufferTextureEXT");
	if (!glFramebufferTextureFaceARB) NotSupportedMessage("glFramebufferTextureFaceARB");
	if (!glFramebufferTextureFaceEXT) NotSupportedMessage("glFramebufferTextureFaceEXT");
	if (!glFramebufferTextureLayer) NotSupportedMessage("glFramebufferTextureLayer");
	if (!glFramebufferTextureLayerARB) NotSupportedMessage("glFramebufferTextureLayerARB");
	if (!glFramebufferTextureLayerEXT) NotSupportedMessage("glFramebufferTextureLayerEXT");
	if (!glGenBuffers) NotSupportedMessage("glGenBuffers");
	if (!glGenBuffersARB) NotSupportedMessage("glGenBuffersARB");
	if (!glGenerateMipmap) NotSupportedMessage("glGenerateMipmap");
	if (!glGenerateMipmapEXT) NotSupportedMessage("glGenerateMipmapEXT");
	if (!glGenerateMultiTexMipmapEXT) NotSupportedMessage("glGenerateMultiTexMipmapEXT");
	if (!glGenerateTextureMipmapEXT) NotSupportedMessage("glGenerateTextureMipmapEXT");
	if (!glGenFramebuffers) NotSupportedMessage("glGenFramebuffers");
	if (!glGenFramebuffersEXT) NotSupportedMessage("glGenFramebuffersEXT");
	if (!glGenProgramPipelines) NotSupportedMessage("glGenProgramPipelines");
	if (!glGenProgramsARB) NotSupportedMessage("glGenProgramsARB");
	if (!glGenQueries) NotSupportedMessage("glGenQueries");
	if (!glGenQueriesARB) NotSupportedMessage("glGenQueriesARB");
	if (!glGenRenderbuffers) NotSupportedMessage("glGenRenderbuffers");
	if (!glGenRenderbuffersEXT) NotSupportedMessage("glGenRenderbuffersEXT");
	if (!glGenSamplers) NotSupportedMessage("glGenSamplers");
	if (!glGenSymbolsEXT) NotSupportedMessage("glGenSymbolsEXT");
	if (!glGenTexturesEXT) NotSupportedMessage("glGenTexturesEXT");
	if (!glGenTransformFeedbacks) NotSupportedMessage("glGenTransformFeedbacks");
	if (!glGenVertexArrays) NotSupportedMessage("glGenVertexArrays");
	if (!glGenVertexShadersEXT) NotSupportedMessage("glGenVertexShadersEXT");
	if (!glGetActiveAtomicCounterBufferiv) NotSupportedMessage("glGetActiveAtomicCounterBufferiv");
	if (!glGetActiveAttrib) NotSupportedMessage("glGetActiveAttrib");
	if (!glGetActiveAttribARB) NotSupportedMessage("glGetActiveAttribARB");
	if (!glGetActiveSubroutineName) NotSupportedMessage("glGetActiveSubroutineName");
	if (!glGetActiveSubroutineUniformiv) NotSupportedMessage("glGetActiveSubroutineUniformiv");
	if (!glGetActiveSubroutineUniformName) NotSupportedMessage("glGetActiveSubroutineUniformName");
	if (!glGetActiveUniform) NotSupportedMessage("glGetActiveUniform");
	if (!glGetActiveUniformARB) NotSupportedMessage("glGetActiveUniformARB");
	if (!glGetActiveUniformBlockiv) NotSupportedMessage("glGetActiveUniformBlockiv");
	if (!glGetActiveUniformBlockName) NotSupportedMessage("glGetActiveUniformBlockName");
	if (!glGetActiveUniformName) NotSupportedMessage("glGetActiveUniformName");
	if (!glGetActiveUniformsiv) NotSupportedMessage("glGetActiveUniformsiv");
	if (!glGetAttachedObjectsARB) NotSupportedMessage("glGetAttachedObjectsARB");
	if (!glGetAttachedShaders) NotSupportedMessage("glGetAttachedShaders");
	if (!glGetAttribLocation) NotSupportedMessage("glGetAttribLocation");
	if (!glGetAttribLocationARB) NotSupportedMessage("glGetAttribLocationARB");
	if (!glGetBooleani_v) NotSupportedMessage("glGetBooleani_v");
	if (!glGetBooleanIndexedvEXT) NotSupportedMessage("glGetBooleanIndexedvEXT");
	if (!glGetBufferParameteri64v) NotSupportedMessage("glGetBufferParameteri64v");
	if (!glGetBufferParameteriv) NotSupportedMessage("glGetBufferParameteriv");
	if (!glGetBufferParameterivARB) NotSupportedMessage("glGetBufferParameterivARB");
	if (!glGetBufferPointerv) NotSupportedMessage("glGetBufferPointerv");
	if (!glGetBufferPointervARB) NotSupportedMessage("glGetBufferPointervARB");
	if (!glGetBufferSubData) NotSupportedMessage("glGetBufferSubData");
	if (!glGetBufferSubDataARB) NotSupportedMessage("glGetBufferSubDataARB");
	if (!glGetColorTable) NotSupportedMessage("glGetColorTable");
	if (!glGetColorTableEXT) NotSupportedMessage("glGetColorTableEXT");
	if (!glGetColorTableParameterfv) NotSupportedMessage("glGetColorTableParameterfv");
	if (!glGetColorTableParameterfvEXT) NotSupportedMessage("glGetColorTableParameterfvEXT");
	if (!glGetColorTableParameteriv) NotSupportedMessage("glGetColorTableParameteriv");
	if (!glGetColorTableParameterivEXT) NotSupportedMessage("glGetColorTableParameterivEXT");
	if (!glGetCompressedMultiTexImageEXT) NotSupportedMessage("glGetCompressedMultiTexImageEXT");
	if (!glGetCompressedTexImage) NotSupportedMessage("glGetCompressedTexImage");
	if (!glGetCompressedTexImageARB) NotSupportedMessage("glGetCompressedTexImageARB");
	if (!glGetCompressedTextureImageEXT) NotSupportedMessage("glGetCompressedTextureImageEXT");
	if (!glGetConvolutionFilter) NotSupportedMessage("glGetConvolutionFilter");
	if (!glGetConvolutionFilterEXT) NotSupportedMessage("glGetConvolutionFilterEXT");
	if (!glGetConvolutionParameterfv) NotSupportedMessage("glGetConvolutionParameterfv");
	if (!glGetConvolutionParameterfvEXT) NotSupportedMessage("glGetConvolutionParameterfvEXT");
	if (!glGetConvolutionParameteriv) NotSupportedMessage("glGetConvolutionParameteriv");
	if (!glGetConvolutionParameterivEXT) NotSupportedMessage("glGetConvolutionParameterivEXT");
	if (!glGetDebugMessageLogARB) NotSupportedMessage("glGetDebugMessageLogARB");
	if (!glGetDoublei_v) NotSupportedMessage("glGetDoublei_v");
	if (!glGetDoubleIndexedvEXT) NotSupportedMessage("glGetDoubleIndexedvEXT");
	if (!glGetFloati_v) NotSupportedMessage("glGetFloati_v");
	if (!glGetFloatIndexedvEXT) NotSupportedMessage("glGetFloatIndexedvEXT");
	if (!glGetFragDataIndex) NotSupportedMessage("glGetFragDataIndex");
	if (!glGetFragDataLocation) NotSupportedMessage("glGetFragDataLocation");
	if (!glGetFragDataLocationEXT) NotSupportedMessage("glGetFragDataLocationEXT");
	if (!glGetFramebufferAttachmentParameteriv) NotSupportedMessage("glGetFramebufferAttachmentParameteriv");
	if (!glGetFramebufferAttachmentParameterivEXT) NotSupportedMessage("glGetFramebufferAttachmentParameterivEXT");
	if (!glGetFramebufferParameterivEXT) NotSupportedMessage("glGetFramebufferParameterivEXT");
	if (!glGetGraphicsResetStatusARB) NotSupportedMessage("glGetGraphicsResetStatusARB");
	if (!glGetHandleARB) NotSupportedMessage("glGetHandleARB");
	if (!glGetHistogram) NotSupportedMessage("glGetHistogram");
	if (!glGetHistogramEXT) NotSupportedMessage("glGetHistogramEXT");
	if (!glGetHistogramParameterfv) NotSupportedMessage("glGetHistogramParameterfv");
	if (!glGetHistogramParameterfvEXT) NotSupportedMessage("glGetHistogramParameterfvEXT");
	if (!glGetHistogramParameteriv) NotSupportedMessage("glGetHistogramParameteriv");
	if (!glGetHistogramParameterivEXT) NotSupportedMessage("glGetHistogramParameterivEXT");
	if (!glGetInfoLogARB) NotSupportedMessage("glGetInfoLogARB");
	if (!glGetInteger64i_v) NotSupportedMessage("glGetInteger64i_v");
	if (!glGetInteger64v) NotSupportedMessage("glGetInteger64v");
	if (!glGetIntegeri_v) NotSupportedMessage("glGetIntegeri_v");
	if (!glGetIntegerIndexedvEXT) NotSupportedMessage("glGetIntegerIndexedvEXT");
	if (!glGetInternalformativ) NotSupportedMessage("glGetInternalformativ");
	if (!glGetInvariantBooleanvEXT) NotSupportedMessage("glGetInvariantBooleanvEXT");
	if (!glGetInvariantFloatvEXT) NotSupportedMessage("glGetInvariantFloatvEXT");
	if (!glGetInvariantIntegervEXT) NotSupportedMessage("glGetInvariantIntegervEXT");
	if (!glGetLocalConstantBooleanvEXT) NotSupportedMessage("glGetLocalConstantBooleanvEXT");
	if (!glGetLocalConstantFloatvEXT) NotSupportedMessage("glGetLocalConstantFloatvEXT");
	if (!glGetLocalConstantIntegervEXT) NotSupportedMessage("glGetLocalConstantIntegervEXT");
	if (!glGetMinmax) NotSupportedMessage("glGetMinmax");
	if (!glGetMinmaxEXT) NotSupportedMessage("glGetMinmaxEXT");
	if (!glGetMinmaxParameterfv) NotSupportedMessage("glGetMinmaxParameterfv");
	if (!glGetMinmaxParameterfvEXT) NotSupportedMessage("glGetMinmaxParameterfvEXT");
	if (!glGetMinmaxParameteriv) NotSupportedMessage("glGetMinmaxParameteriv");
	if (!glGetMinmaxParameterivEXT) NotSupportedMessage("glGetMinmaxParameterivEXT");
	if (!glGetMultisamplefv) NotSupportedMessage("glGetMultisamplefv");
	if (!glGetMultiTexEnvfvEXT) NotSupportedMessage("glGetMultiTexEnvfvEXT");
	if (!glGetMultiTexEnvivEXT) NotSupportedMessage("glGetMultiTexEnvivEXT");
	if (!glGetMultiTexGendvEXT) NotSupportedMessage("glGetMultiTexGendvEXT");
	if (!glGetMultiTexGenfvEXT) NotSupportedMessage("glGetMultiTexGenfvEXT");
	if (!glGetMultiTexGenivEXT) NotSupportedMessage("glGetMultiTexGenivEXT");
	if (!glGetMultiTexImageEXT) NotSupportedMessage("glGetMultiTexImageEXT");
	if (!glGetMultiTexLevelParameterfvEXT) NotSupportedMessage("glGetMultiTexLevelParameterfvEXT");
	if (!glGetMultiTexLevelParameterivEXT) NotSupportedMessage("glGetMultiTexLevelParameterivEXT");
	if (!glGetMultiTexParameterfvEXT) NotSupportedMessage("glGetMultiTexParameterfvEXT");
	if (!glGetMultiTexParameterIivEXT) NotSupportedMessage("glGetMultiTexParameterIivEXT");
	if (!glGetMultiTexParameterIuivEXT) NotSupportedMessage("glGetMultiTexParameterIuivEXT");
	if (!glGetMultiTexParameterivEXT) NotSupportedMessage("glGetMultiTexParameterivEXT");
	if (!glGetNamedBufferParameterivEXT) NotSupportedMessage("glGetNamedBufferParameterivEXT");
	if (!glGetNamedBufferPointervEXT) NotSupportedMessage("glGetNamedBufferPointervEXT");
	if (!glGetNamedBufferSubDataEXT) NotSupportedMessage("glGetNamedBufferSubDataEXT");
	if (!glGetNamedFramebufferAttachmentParameterivEXT) NotSupportedMessage("glGetNamedFramebufferAttachmentParameterivEXT");
	if (!glGetNamedProgramivEXT) NotSupportedMessage("glGetNamedProgramivEXT");
	if (!glGetNamedProgramLocalParameterdvEXT) NotSupportedMessage("glGetNamedProgramLocalParameterdvEXT");
	if (!glGetNamedProgramLocalParameterfvEXT) NotSupportedMessage("glGetNamedProgramLocalParameterfvEXT");
	if (!glGetNamedProgramLocalParameterIivEXT) NotSupportedMessage("glGetNamedProgramLocalParameterIivEXT");
	if (!glGetNamedProgramLocalParameterIuivEXT) NotSupportedMessage("glGetNamedProgramLocalParameterIuivEXT");
	if (!glGetNamedProgramStringEXT) NotSupportedMessage("glGetNamedProgramStringEXT");
	if (!glGetNamedRenderbufferParameterivEXT) NotSupportedMessage("glGetNamedRenderbufferParameterivEXT");
	if (!glGetNamedStringARB) NotSupportedMessage("glGetNamedStringARB");
	if (!glGetNamedStringivARB) NotSupportedMessage("glGetNamedStringivARB");
	if (!glGetnColorTableARB) NotSupportedMessage("glGetnColorTableARB");
	if (!glGetnCompressedTexImageARB) NotSupportedMessage("glGetnCompressedTexImageARB");
	if (!glGetnConvolutionFilterARB) NotSupportedMessage("glGetnConvolutionFilterARB");
	if (!glGetnHistogramARB) NotSupportedMessage("glGetnHistogramARB");
	if (!glGetnMapdvARB) NotSupportedMessage("glGetnMapdvARB");
	if (!glGetnMapfvARB) NotSupportedMessage("glGetnMapfvARB");
	if (!glGetnMapivARB) NotSupportedMessage("glGetnMapivARB");
	if (!glGetnMinmaxARB) NotSupportedMessage("glGetnMinmaxARB");
	if (!glGetnPixelMapfvARB) NotSupportedMessage("glGetnPixelMapfvARB");
	if (!glGetnPixelMapuivARB) NotSupportedMessage("glGetnPixelMapuivARB");
	if (!glGetnPixelMapusvARB) NotSupportedMessage("glGetnPixelMapusvARB");
	if (!glGetnPolygonStippleARB) NotSupportedMessage("glGetnPolygonStippleARB");
	if (!glGetnSeparableFilterARB) NotSupportedMessage("glGetnSeparableFilterARB");
	if (!glGetnTexImageARB) NotSupportedMessage("glGetnTexImageARB");
	if (!glGetnUniformdvARB) NotSupportedMessage("glGetnUniformdvARB");
	if (!glGetnUniformfvARB) NotSupportedMessage("glGetnUniformfvARB");
	if (!glGetnUniformivARB) NotSupportedMessage("glGetnUniformivARB");
	if (!glGetnUniformuivARB) NotSupportedMessage("glGetnUniformuivARB");
	if (!glGetObjectParameterfvARB) NotSupportedMessage("glGetObjectParameterfvARB");
	if (!glGetObjectParameterivARB) NotSupportedMessage("glGetObjectParameterivARB");
	if (!glGetPointerIndexedvEXT) NotSupportedMessage("glGetPointerIndexedvEXT");
	if (!glGetProgramBinary) NotSupportedMessage("glGetProgramBinary");
	if (!glGetProgramEnvParameterdvARB) NotSupportedMessage("glGetProgramEnvParameterdvARB");
	if (!glGetProgramEnvParameterfvARB) NotSupportedMessage("glGetProgramEnvParameterfvARB");
	if (!glGetProgramInfoLog) NotSupportedMessage("glGetProgramInfoLog");
	if (!glGetProgramiv) NotSupportedMessage("glGetProgramiv");
	if (!glGetProgramivARB) NotSupportedMessage("glGetProgramivARB");
	if (!glGetProgramLocalParameterdvARB) NotSupportedMessage("glGetProgramLocalParameterdvARB");
	if (!glGetProgramLocalParameterfvARB) NotSupportedMessage("glGetProgramLocalParameterfvARB");
	if (!glGetProgramPipelineInfoLog) NotSupportedMessage("glGetProgramPipelineInfoLog");
	if (!glGetProgramPipelineiv) NotSupportedMessage("glGetProgramPipelineiv");
	if (!glGetProgramStageiv) NotSupportedMessage("glGetProgramStageiv");
	if (!glGetProgramStringARB) NotSupportedMessage("glGetProgramStringARB");
	if (!glGetQueryIndexediv) NotSupportedMessage("glGetQueryIndexediv");
	if (!glGetQueryiv) NotSupportedMessage("glGetQueryiv");
	if (!glGetQueryivARB) NotSupportedMessage("glGetQueryivARB");
	if (!glGetQueryObjecti64v) NotSupportedMessage("glGetQueryObjecti64v");
	if (!glGetQueryObjecti64vEXT) NotSupportedMessage("glGetQueryObjecti64vEXT");
	if (!glGetQueryObjectiv) NotSupportedMessage("glGetQueryObjectiv");
	if (!glGetQueryObjectivARB) NotSupportedMessage("glGetQueryObjectivARB");
	if (!glGetQueryObjectui64v) NotSupportedMessage("glGetQueryObjectui64v");
	if (!glGetQueryObjectui64vEXT) NotSupportedMessage("glGetQueryObjectui64vEXT");
	if (!glGetQueryObjectuiv) NotSupportedMessage("glGetQueryObjectuiv");
	if (!glGetQueryObjectuivARB) NotSupportedMessage("glGetQueryObjectuivARB");
	if (!glGetRenderbufferParameteriv) NotSupportedMessage("glGetRenderbufferParameteriv");
	if (!glGetRenderbufferParameterivEXT) NotSupportedMessage("glGetRenderbufferParameterivEXT");
	if (!glGetSamplerParameterfv) NotSupportedMessage("glGetSamplerParameterfv");
	if (!glGetSamplerParameterIiv) NotSupportedMessage("glGetSamplerParameterIiv");
	if (!glGetSamplerParameterIuiv) NotSupportedMessage("glGetSamplerParameterIuiv");
	if (!glGetSamplerParameteriv) NotSupportedMessage("glGetSamplerParameteriv");
	if (!glGetSeparableFilter) NotSupportedMessage("glGetSeparableFilter");
	if (!glGetSeparableFilterEXT) NotSupportedMessage("glGetSeparableFilterEXT");
	if (!glGetShaderInfoLog) NotSupportedMessage("glGetShaderInfoLog");
	if (!glGetShaderiv) NotSupportedMessage("glGetShaderiv");
	if (!glGetShaderPrecisionFormat) NotSupportedMessage("glGetShaderPrecisionFormat");
	if (!glGetShaderSource) NotSupportedMessage("glGetShaderSource");
	if (!glGetShaderSourceARB) NotSupportedMessage("glGetShaderSourceARB");
	if (!glGetStringi) NotSupportedMessage("glGetStringi");
	if (!glGetSubroutineIndex) NotSupportedMessage("glGetSubroutineIndex");
	if (!glGetSubroutineUniformLocation) NotSupportedMessage("glGetSubroutineUniformLocation");
	if (!glGetSynciv) NotSupportedMessage("glGetSynciv");
	if (!glGetTexParameterIiv) NotSupportedMessage("glGetTexParameterIiv");
	if (!glGetTexParameterIivEXT) NotSupportedMessage("glGetTexParameterIivEXT");
	if (!glGetTexParameterIuiv) NotSupportedMessage("glGetTexParameterIuiv");
	if (!glGetTexParameterIuivEXT) NotSupportedMessage("glGetTexParameterIuivEXT");
	if (!glGetTextureImageEXT) NotSupportedMessage("glGetTextureImageEXT");
	if (!glGetTextureLevelParameterfvEXT) NotSupportedMessage("glGetTextureLevelParameterfvEXT");
	if (!glGetTextureLevelParameterivEXT) NotSupportedMessage("glGetTextureLevelParameterivEXT");
	if (!glGetTextureParameterfvEXT) NotSupportedMessage("glGetTextureParameterfvEXT");
	if (!glGetTextureParameterIivEXT) NotSupportedMessage("glGetTextureParameterIivEXT");
	if (!glGetTextureParameterIuivEXT) NotSupportedMessage("glGetTextureParameterIuivEXT");
	if (!glGetTextureParameterivEXT) NotSupportedMessage("glGetTextureParameterivEXT");
	if (!glGetTransformFeedbackVarying) NotSupportedMessage("glGetTransformFeedbackVarying");
	if (!glGetTransformFeedbackVaryingEXT) NotSupportedMessage("glGetTransformFeedbackVaryingEXT");
	if (!glGetUniformBlockIndex) NotSupportedMessage("glGetUniformBlockIndex");
	if (!glGetUniformBufferSizeEXT) NotSupportedMessage("glGetUniformBufferSizeEXT");
	if (!glGetUniformdv) NotSupportedMessage("glGetUniformdv");
	if (!glGetUniformfv) NotSupportedMessage("glGetUniformfv");
	if (!glGetUniformfvARB) NotSupportedMessage("glGetUniformfvARB");
	if (!glGetUniformIndices) NotSupportedMessage("glGetUniformIndices");
	if (!glGetUniformiv) NotSupportedMessage("glGetUniformiv");
	if (!glGetUniformivARB) NotSupportedMessage("glGetUniformivARB");
	if (!glGetUniformLocation) NotSupportedMessage("glGetUniformLocation");
	if (!glGetUniformLocationARB) NotSupportedMessage("glGetUniformLocationARB");
	if (!glGetUniformOffsetEXT) NotSupportedMessage("glGetUniformOffsetEXT");
	if (!glGetUniformSubroutineuiv) NotSupportedMessage("glGetUniformSubroutineuiv");
	if (!glGetUniformuiv) NotSupportedMessage("glGetUniformuiv");
	if (!glGetUniformuivEXT) NotSupportedMessage("glGetUniformuivEXT");
	if (!glGetVariantBooleanvEXT) NotSupportedMessage("glGetVariantBooleanvEXT");
	if (!glGetVariantFloatvEXT) NotSupportedMessage("glGetVariantFloatvEXT");
	if (!glGetVariantIntegervEXT) NotSupportedMessage("glGetVariantIntegervEXT");
	if (!glGetVariantPointervEXT) NotSupportedMessage("glGetVariantPointervEXT");
	if (!glGetVertexAttribdv) NotSupportedMessage("glGetVertexAttribdv");
	if (!glGetVertexAttribdvARB) NotSupportedMessage("glGetVertexAttribdvARB");
	if (!glGetVertexAttribfv) NotSupportedMessage("glGetVertexAttribfv");
	if (!glGetVertexAttribfvARB) NotSupportedMessage("glGetVertexAttribfvARB");
	if (!glGetVertexAttribIiv) NotSupportedMessage("glGetVertexAttribIiv");
	if (!glGetVertexAttribIivEXT) NotSupportedMessage("glGetVertexAttribIivEXT");
	if (!glGetVertexAttribIuiv) NotSupportedMessage("glGetVertexAttribIuiv");
	if (!glGetVertexAttribIuivEXT) NotSupportedMessage("glGetVertexAttribIuivEXT");
	if (!glGetVertexAttribiv) NotSupportedMessage("glGetVertexAttribiv");
	if (!glGetVertexAttribivARB) NotSupportedMessage("glGetVertexAttribivARB");
	if (!glGetVertexAttribLdv) NotSupportedMessage("glGetVertexAttribLdv");
	if (!glGetVertexAttribLdvEXT) NotSupportedMessage("glGetVertexAttribLdvEXT");
	if (!glGetVertexAttribPointerv) NotSupportedMessage("glGetVertexAttribPointerv");
	if (!glGetVertexAttribPointervARB) NotSupportedMessage("glGetVertexAttribPointervARB");
	if (!glHistogram) NotSupportedMessage("glHistogram");
	if (!glHistogramEXT) NotSupportedMessage("glHistogramEXT");
	if (!glImportSyncEXT) NotSupportedMessage("glImportSyncEXT");
	if (!glIndexFuncEXT) NotSupportedMessage("glIndexFuncEXT");
	if (!glIndexMaterialEXT) NotSupportedMessage("glIndexMaterialEXT");
	if (!glIndexPointerEXT) NotSupportedMessage("glIndexPointerEXT");
	if (!glInsertComponentEXT) NotSupportedMessage("glInsertComponentEXT");
	if (!glIsBuffer) NotSupportedMessage("glIsBuffer");
	if (!glIsBufferARB) NotSupportedMessage("glIsBufferARB");
	if (!glIsEnabledi) NotSupportedMessage("glIsEnabledi");
	if (!glIsEnabledIndexedEXT) NotSupportedMessage("glIsEnabledIndexedEXT");
	if (!glIsFramebuffer) NotSupportedMessage("glIsFramebuffer");
	if (!glIsFramebufferEXT) NotSupportedMessage("glIsFramebufferEXT");
	if (!glIsNamedStringARB) NotSupportedMessage("glIsNamedStringARB");
	if (!glIsProgram) NotSupportedMessage("glIsProgram");
	if (!glIsProgramARB) NotSupportedMessage("glIsProgramARB");
	if (!glIsProgramPipeline) NotSupportedMessage("glIsProgramPipeline");
	if (!glIsQuery) NotSupportedMessage("glIsQuery");
	if (!glIsQueryARB) NotSupportedMessage("glIsQueryARB");
	if (!glIsRenderbuffer) NotSupportedMessage("glIsRenderbuffer");
	if (!glIsRenderbufferEXT) NotSupportedMessage("glIsRenderbufferEXT");
	if (!glIsSampler) NotSupportedMessage("glIsSampler");
	if (!glIsShader) NotSupportedMessage("glIsShader");
	if (!glIsSync) NotSupportedMessage("glIsSync");
	if (!glIsTextureEXT) NotSupportedMessage("glIsTextureEXT");
	if (!glIsTransformFeedback) NotSupportedMessage("glIsTransformFeedback");
	if (!glIsVariantEnabledEXT) NotSupportedMessage("glIsVariantEnabledEXT");
	if (!glIsVertexArray) NotSupportedMessage("glIsVertexArray");
	if (!glLinkProgram) NotSupportedMessage("glLinkProgram");
	if (!glLinkProgramARB) NotSupportedMessage("glLinkProgramARB");
	if (!glLoadTransposeMatrixd) NotSupportedMessage("glLoadTransposeMatrixd");
	if (!glLoadTransposeMatrixdARB) NotSupportedMessage("glLoadTransposeMatrixdARB");
	if (!glLoadTransposeMatrixf) NotSupportedMessage("glLoadTransposeMatrixf");
	if (!glLoadTransposeMatrixfARB) NotSupportedMessage("glLoadTransposeMatrixfARB");
	if (!glLockArraysEXT) NotSupportedMessage("glLockArraysEXT");
	if (!glMapBuffer) NotSupportedMessage("glMapBuffer");
	if (!glMapBufferARB) NotSupportedMessage("glMapBufferARB");
	if (!glMapBufferRange) NotSupportedMessage("glMapBufferRange");
	if (!glMapNamedBufferEXT) NotSupportedMessage("glMapNamedBufferEXT");
	if (!glMapNamedBufferRangeEXT) NotSupportedMessage("glMapNamedBufferRangeEXT");
	if (!glMatrixFrustumEXT) NotSupportedMessage("glMatrixFrustumEXT");
	if (!glMatrixIndexPointerARB) NotSupportedMessage("glMatrixIndexPointerARB");
	if (!glMatrixIndexubvARB) NotSupportedMessage("glMatrixIndexubvARB");
	if (!glMatrixIndexuivARB) NotSupportedMessage("glMatrixIndexuivARB");
	if (!glMatrixIndexusvARB) NotSupportedMessage("glMatrixIndexusvARB");
	if (!glMatrixLoaddEXT) NotSupportedMessage("glMatrixLoaddEXT");
	if (!glMatrixLoadfEXT) NotSupportedMessage("glMatrixLoadfEXT");
	if (!glMatrixLoadIdentityEXT) NotSupportedMessage("glMatrixLoadIdentityEXT");
	if (!glMatrixLoadTransposedEXT) NotSupportedMessage("glMatrixLoadTransposedEXT");
	if (!glMatrixLoadTransposefEXT) NotSupportedMessage("glMatrixLoadTransposefEXT");
	if (!glMatrixMultdEXT) NotSupportedMessage("glMatrixMultdEXT");
	if (!glMatrixMultfEXT) NotSupportedMessage("glMatrixMultfEXT");
	if (!glMatrixMultTransposedEXT) NotSupportedMessage("glMatrixMultTransposedEXT");
	if (!glMatrixMultTransposefEXT) NotSupportedMessage("glMatrixMultTransposefEXT");
	if (!glMatrixOrthoEXT) NotSupportedMessage("glMatrixOrthoEXT");
	if (!glMatrixPopEXT) NotSupportedMessage("glMatrixPopEXT");
	if (!glMatrixPushEXT) NotSupportedMessage("glMatrixPushEXT");
	if (!glMatrixRotatedEXT) NotSupportedMessage("glMatrixRotatedEXT");
	if (!glMatrixRotatefEXT) NotSupportedMessage("glMatrixRotatefEXT");
	if (!glMatrixScaledEXT) NotSupportedMessage("glMatrixScaledEXT");
	if (!glMatrixScalefEXT) NotSupportedMessage("glMatrixScalefEXT");
	if (!glMatrixTranslatedEXT) NotSupportedMessage("glMatrixTranslatedEXT");
	if (!glMatrixTranslatefEXT) NotSupportedMessage("glMatrixTranslatefEXT");
	if (!glMemoryBarrier) NotSupportedMessage("glMemoryBarrier");
	if (!glMemoryBarrierEXT) NotSupportedMessage("glMemoryBarrierEXT");
	if (!glMinmax) NotSupportedMessage("glMinmax");
	if (!glMinmaxEXT) NotSupportedMessage("glMinmaxEXT");
	if (!glMinSampleShading) NotSupportedMessage("glMinSampleShading");
	if (!glMinSampleShadingARB) NotSupportedMessage("glMinSampleShadingARB");
	if (!glMultiDrawArrays) NotSupportedMessage("glMultiDrawArrays");
	if (!glMultiDrawArraysEXT) NotSupportedMessage("glMultiDrawArraysEXT");
	if (!glMultiDrawElements) NotSupportedMessage("glMultiDrawElements");
	if (!glMultiDrawElementsBaseVertex) NotSupportedMessage("glMultiDrawElementsBaseVertex");
	if (!glMultiDrawElementsEXT) NotSupportedMessage("glMultiDrawElementsEXT");
	if (!glMultiTexBufferEXT) NotSupportedMessage("glMultiTexBufferEXT");
	if (!glMultiTexCoord1d) NotSupportedMessage("glMultiTexCoord1d");
	if (!glMultiTexCoord1dARB) NotSupportedMessage("glMultiTexCoord1dARB");
	if (!glMultiTexCoord1dv) NotSupportedMessage("glMultiTexCoord1dv");
	if (!glMultiTexCoord1dvARB) NotSupportedMessage("glMultiTexCoord1dvARB");
	if (!glMultiTexCoord1f) NotSupportedMessage("glMultiTexCoord1f");
	if (!glMultiTexCoord1fARB) NotSupportedMessage("glMultiTexCoord1fARB");
	if (!glMultiTexCoord1fv) NotSupportedMessage("glMultiTexCoord1fv");
	if (!glMultiTexCoord1fvARB) NotSupportedMessage("glMultiTexCoord1fvARB");
	if (!glMultiTexCoord1i) NotSupportedMessage("glMultiTexCoord1i");
	if (!glMultiTexCoord1iARB) NotSupportedMessage("glMultiTexCoord1iARB");
	if (!glMultiTexCoord1iv) NotSupportedMessage("glMultiTexCoord1iv");
	if (!glMultiTexCoord1ivARB) NotSupportedMessage("glMultiTexCoord1ivARB");
	if (!glMultiTexCoord1s) NotSupportedMessage("glMultiTexCoord1s");
	if (!glMultiTexCoord1sARB) NotSupportedMessage("glMultiTexCoord1sARB");
	if (!glMultiTexCoord1sv) NotSupportedMessage("glMultiTexCoord1sv");
	if (!glMultiTexCoord1svARB) NotSupportedMessage("glMultiTexCoord1svARB");
	if (!glMultiTexCoord2d) NotSupportedMessage("glMultiTexCoord2d");
	if (!glMultiTexCoord2dARB) NotSupportedMessage("glMultiTexCoord2dARB");
	if (!glMultiTexCoord2dv) NotSupportedMessage("glMultiTexCoord2dv");
	if (!glMultiTexCoord2dvARB) NotSupportedMessage("glMultiTexCoord2dvARB");
	if (!glMultiTexCoord2f) NotSupportedMessage("glMultiTexCoord2f");
	if (!glMultiTexCoord2fARB) NotSupportedMessage("glMultiTexCoord2fARB");
	if (!glMultiTexCoord2fv) NotSupportedMessage("glMultiTexCoord2fv");
	if (!glMultiTexCoord2fvARB) NotSupportedMessage("glMultiTexCoord2fvARB");
	if (!glMultiTexCoord2i) NotSupportedMessage("glMultiTexCoord2i");
	if (!glMultiTexCoord2iARB) NotSupportedMessage("glMultiTexCoord2iARB");
	if (!glMultiTexCoord2iv) NotSupportedMessage("glMultiTexCoord2iv");
	if (!glMultiTexCoord2ivARB) NotSupportedMessage("glMultiTexCoord2ivARB");
	if (!glMultiTexCoord2s) NotSupportedMessage("glMultiTexCoord2s");
	if (!glMultiTexCoord2sARB) NotSupportedMessage("glMultiTexCoord2sARB");
	if (!glMultiTexCoord2sv) NotSupportedMessage("glMultiTexCoord2sv");
	if (!glMultiTexCoord2svARB) NotSupportedMessage("glMultiTexCoord2svARB");
	if (!glMultiTexCoord3d) NotSupportedMessage("glMultiTexCoord3d");
	if (!glMultiTexCoord3dARB) NotSupportedMessage("glMultiTexCoord3dARB");
	if (!glMultiTexCoord3dv) NotSupportedMessage("glMultiTexCoord3dv");
	if (!glMultiTexCoord3dvARB) NotSupportedMessage("glMultiTexCoord3dvARB");
	if (!glMultiTexCoord3f) NotSupportedMessage("glMultiTexCoord3f");
	if (!glMultiTexCoord3fARB) NotSupportedMessage("glMultiTexCoord3fARB");
	if (!glMultiTexCoord3fv) NotSupportedMessage("glMultiTexCoord3fv");
	if (!glMultiTexCoord3fvARB) NotSupportedMessage("glMultiTexCoord3fvARB");
	if (!glMultiTexCoord3i) NotSupportedMessage("glMultiTexCoord3i");
	if (!glMultiTexCoord3iARB) NotSupportedMessage("glMultiTexCoord3iARB");
	if (!glMultiTexCoord3iv) NotSupportedMessage("glMultiTexCoord3iv");
	if (!glMultiTexCoord3ivARB) NotSupportedMessage("glMultiTexCoord3ivARB");
	if (!glMultiTexCoord3s) NotSupportedMessage("glMultiTexCoord3s");
	if (!glMultiTexCoord3sARB) NotSupportedMessage("glMultiTexCoord3sARB");
	if (!glMultiTexCoord3sv) NotSupportedMessage("glMultiTexCoord3sv");
	if (!glMultiTexCoord3svARB) NotSupportedMessage("glMultiTexCoord3svARB");
	if (!glMultiTexCoord4d) NotSupportedMessage("glMultiTexCoord4d");
	if (!glMultiTexCoord4dARB) NotSupportedMessage("glMultiTexCoord4dARB");
	if (!glMultiTexCoord4dv) NotSupportedMessage("glMultiTexCoord4dv");
	if (!glMultiTexCoord4dvARB) NotSupportedMessage("glMultiTexCoord4dvARB");
	if (!glMultiTexCoord4f) NotSupportedMessage("glMultiTexCoord4f");
	if (!glMultiTexCoord4fARB) NotSupportedMessage("glMultiTexCoord4fARB");
	if (!glMultiTexCoord4fv) NotSupportedMessage("glMultiTexCoord4fv");
	if (!glMultiTexCoord4fvARB) NotSupportedMessage("glMultiTexCoord4fvARB");
	if (!glMultiTexCoord4i) NotSupportedMessage("glMultiTexCoord4i");
	if (!glMultiTexCoord4iARB) NotSupportedMessage("glMultiTexCoord4iARB");
	if (!glMultiTexCoord4iv) NotSupportedMessage("glMultiTexCoord4iv");
	if (!glMultiTexCoord4ivARB) NotSupportedMessage("glMultiTexCoord4ivARB");
	if (!glMultiTexCoord4s) NotSupportedMessage("glMultiTexCoord4s");
	if (!glMultiTexCoord4sARB) NotSupportedMessage("glMultiTexCoord4sARB");
	if (!glMultiTexCoord4sv) NotSupportedMessage("glMultiTexCoord4sv");
	if (!glMultiTexCoord4svARB) NotSupportedMessage("glMultiTexCoord4svARB");
	if (!glMultiTexCoordP1ui) NotSupportedMessage("glMultiTexCoordP1ui");
	if (!glMultiTexCoordP1uiv) NotSupportedMessage("glMultiTexCoordP1uiv");
	if (!glMultiTexCoordP2ui) NotSupportedMessage("glMultiTexCoordP2ui");
	if (!glMultiTexCoordP2uiv) NotSupportedMessage("glMultiTexCoordP2uiv");
	if (!glMultiTexCoordP3ui) NotSupportedMessage("glMultiTexCoordP3ui");
	if (!glMultiTexCoordP3uiv) NotSupportedMessage("glMultiTexCoordP3uiv");
	if (!glMultiTexCoordP4ui) NotSupportedMessage("glMultiTexCoordP4ui");
	if (!glMultiTexCoordP4uiv) NotSupportedMessage("glMultiTexCoordP4uiv");
	if (!glMultiTexCoordPointerEXT) NotSupportedMessage("glMultiTexCoordPointerEXT");
	if (!glMultiTexEnvfEXT) NotSupportedMessage("glMultiTexEnvfEXT");
	if (!glMultiTexEnvfvEXT) NotSupportedMessage("glMultiTexEnvfvEXT");
	if (!glMultiTexEnviEXT) NotSupportedMessage("glMultiTexEnviEXT");
	if (!glMultiTexEnvivEXT) NotSupportedMessage("glMultiTexEnvivEXT");
	if (!glMultiTexGendEXT) NotSupportedMessage("glMultiTexGendEXT");
	if (!glMultiTexGendvEXT) NotSupportedMessage("glMultiTexGendvEXT");
	if (!glMultiTexGenfEXT) NotSupportedMessage("glMultiTexGenfEXT");
	if (!glMultiTexGenfvEXT) NotSupportedMessage("glMultiTexGenfvEXT");
	if (!glMultiTexGeniEXT) NotSupportedMessage("glMultiTexGeniEXT");
	if (!glMultiTexGenivEXT) NotSupportedMessage("glMultiTexGenivEXT");
	if (!glMultiTexImage1DEXT) NotSupportedMessage("glMultiTexImage1DEXT");
	if (!glMultiTexImage2DEXT) NotSupportedMessage("glMultiTexImage2DEXT");
	if (!glMultiTexImage3DEXT) NotSupportedMessage("glMultiTexImage3DEXT");
	if (!glMultiTexParameterfEXT) NotSupportedMessage("glMultiTexParameterfEXT");
	if (!glMultiTexParameterfvEXT) NotSupportedMessage("glMultiTexParameterfvEXT");
	if (!glMultiTexParameteriEXT) NotSupportedMessage("glMultiTexParameteriEXT");
	if (!glMultiTexParameterIivEXT) NotSupportedMessage("glMultiTexParameterIivEXT");
	if (!glMultiTexParameterIuivEXT) NotSupportedMessage("glMultiTexParameterIuivEXT");
	if (!glMultiTexParameterivEXT) NotSupportedMessage("glMultiTexParameterivEXT");
	if (!glMultiTexRenderbufferEXT) NotSupportedMessage("glMultiTexRenderbufferEXT");
	if (!glMultiTexSubImage1DEXT) NotSupportedMessage("glMultiTexSubImage1DEXT");
	if (!glMultiTexSubImage2DEXT) NotSupportedMessage("glMultiTexSubImage2DEXT");
	if (!glMultiTexSubImage3DEXT) NotSupportedMessage("glMultiTexSubImage3DEXT");
	if (!glMultTransposeMatrixd) NotSupportedMessage("glMultTransposeMatrixd");
	if (!glMultTransposeMatrixdARB) NotSupportedMessage("glMultTransposeMatrixdARB");
	if (!glMultTransposeMatrixf) NotSupportedMessage("glMultTransposeMatrixf");
	if (!glMultTransposeMatrixfARB) NotSupportedMessage("glMultTransposeMatrixfARB");
	if (!glNamedBufferDataEXT) NotSupportedMessage("glNamedBufferDataEXT");
	if (!glNamedBufferSubDataEXT) NotSupportedMessage("glNamedBufferSubDataEXT");
	if (!glNamedCopyBufferSubDataEXT) NotSupportedMessage("glNamedCopyBufferSubDataEXT");
	if (!glNamedFramebufferRenderbufferEXT) NotSupportedMessage("glNamedFramebufferRenderbufferEXT");
	if (!glNamedFramebufferTexture1DEXT) NotSupportedMessage("glNamedFramebufferTexture1DEXT");
	if (!glNamedFramebufferTexture2DEXT) NotSupportedMessage("glNamedFramebufferTexture2DEXT");
	if (!glNamedFramebufferTexture3DEXT) NotSupportedMessage("glNamedFramebufferTexture3DEXT");
	if (!glNamedFramebufferTextureEXT) NotSupportedMessage("glNamedFramebufferTextureEXT");
	if (!glNamedFramebufferTextureFaceEXT) NotSupportedMessage("glNamedFramebufferTextureFaceEXT");
	if (!glNamedFramebufferTextureLayerEXT) NotSupportedMessage("glNamedFramebufferTextureLayerEXT");
	if (!glNamedProgramLocalParameter4dEXT) NotSupportedMessage("glNamedProgramLocalParameter4dEXT");
	if (!glNamedProgramLocalParameter4dvEXT) NotSupportedMessage("glNamedProgramLocalParameter4dvEXT");
	if (!glNamedProgramLocalParameter4fEXT) NotSupportedMessage("glNamedProgramLocalParameter4fEXT");
	if (!glNamedProgramLocalParameter4fvEXT) NotSupportedMessage("glNamedProgramLocalParameter4fvEXT");
	if (!glNamedProgramLocalParameterI4iEXT) NotSupportedMessage("glNamedProgramLocalParameterI4iEXT");
	if (!glNamedProgramLocalParameterI4ivEXT) NotSupportedMessage("glNamedProgramLocalParameterI4ivEXT");
	if (!glNamedProgramLocalParameterI4uiEXT) NotSupportedMessage("glNamedProgramLocalParameterI4uiEXT");
	if (!glNamedProgramLocalParameterI4uivEXT) NotSupportedMessage("glNamedProgramLocalParameterI4uivEXT");
	if (!glNamedProgramLocalParameters4fvEXT) NotSupportedMessage("glNamedProgramLocalParameters4fvEXT");
	if (!glNamedProgramLocalParametersI4ivEXT) NotSupportedMessage("glNamedProgramLocalParametersI4ivEXT");
	if (!glNamedProgramLocalParametersI4uivEXT) NotSupportedMessage("glNamedProgramLocalParametersI4uivEXT");
	if (!glNamedProgramStringEXT) NotSupportedMessage("glNamedProgramStringEXT");
	if (!glNamedRenderbufferStorageEXT) NotSupportedMessage("glNamedRenderbufferStorageEXT");
	if (!glNamedRenderbufferStorageMultisampleCoverageEXT) NotSupportedMessage("glNamedRenderbufferStorageMultisampleCoverageEXT");
	if (!glNamedRenderbufferStorageMultisampleEXT) NotSupportedMessage("glNamedRenderbufferStorageMultisampleEXT");
	if (!glNamedStringARB) NotSupportedMessage("glNamedStringARB");
	if (!glNormalP3ui) NotSupportedMessage("glNormalP3ui");
	if (!glNormalP3uiv) NotSupportedMessage("glNormalP3uiv");
	if (!glNormalPointerEXT) NotSupportedMessage("glNormalPointerEXT");
	if (!glPatchParameterfv) NotSupportedMessage("glPatchParameterfv");
	if (!glPatchParameteri) NotSupportedMessage("glPatchParameteri");
	if (!glPauseTransformFeedback) NotSupportedMessage("glPauseTransformFeedback");
	if (!glPixelTransformParameterfEXT) NotSupportedMessage("glPixelTransformParameterfEXT");
	if (!glPixelTransformParameterfvEXT) NotSupportedMessage("glPixelTransformParameterfvEXT");
	if (!glPixelTransformParameteriEXT) NotSupportedMessage("glPixelTransformParameteriEXT");
	if (!glPixelTransformParameterivEXT) NotSupportedMessage("glPixelTransformParameterivEXT");
	if (!glPointParameterf) NotSupportedMessage("glPointParameterf");
	if (!glPointParameterfARB) NotSupportedMessage("glPointParameterfARB");
	if (!glPointParameterfEXT) NotSupportedMessage("glPointParameterfEXT");
	if (!glPointParameterfv) NotSupportedMessage("glPointParameterfv");
	if (!glPointParameterfvARB) NotSupportedMessage("glPointParameterfvARB");
	if (!glPointParameterfvEXT) NotSupportedMessage("glPointParameterfvEXT");
	if (!glPointParameteri) NotSupportedMessage("glPointParameteri");
	if (!glPointParameteriv) NotSupportedMessage("glPointParameteriv");
	if (!glPolygonOffsetEXT) NotSupportedMessage("glPolygonOffsetEXT");
	if (!glPrimitiveRestartIndex) NotSupportedMessage("glPrimitiveRestartIndex");
	if (!glPrioritizeTexturesEXT) NotSupportedMessage("glPrioritizeTexturesEXT");
	if (!glProgramBinary) NotSupportedMessage("glProgramBinary");
	if (!glProgramEnvParameter4dARB) NotSupportedMessage("glProgramEnvParameter4dARB");
	if (!glProgramEnvParameter4dvARB) NotSupportedMessage("glProgramEnvParameter4dvARB");
	if (!glProgramEnvParameter4fARB) NotSupportedMessage("glProgramEnvParameter4fARB");
	if (!glProgramEnvParameter4fvARB) NotSupportedMessage("glProgramEnvParameter4fvARB");
	if (!glProgramEnvParameters4fvEXT) NotSupportedMessage("glProgramEnvParameters4fvEXT");
	if (!glProgramLocalParameter4dARB) NotSupportedMessage("glProgramLocalParameter4dARB");
	if (!glProgramLocalParameter4dvARB) NotSupportedMessage("glProgramLocalParameter4dvARB");
	if (!glProgramLocalParameter4fARB) NotSupportedMessage("glProgramLocalParameter4fARB");
	if (!glProgramLocalParameter4fvARB) NotSupportedMessage("glProgramLocalParameter4fvARB");
	if (!glProgramLocalParameters4fvEXT) NotSupportedMessage("glProgramLocalParameters4fvEXT");
	if (!glProgramParameteri) NotSupportedMessage("glProgramParameteri");
	if (!glProgramParameteriARB) NotSupportedMessage("glProgramParameteriARB");
	if (!glProgramParameteriEXT) NotSupportedMessage("glProgramParameteriEXT");
	if (!glProgramStringARB) NotSupportedMessage("glProgramStringARB");
	if (!glProgramUniform1d) NotSupportedMessage("glProgramUniform1d");
	if (!glProgramUniform1dv) NotSupportedMessage("glProgramUniform1dv");
	if (!glProgramUniform1f) NotSupportedMessage("glProgramUniform1f");
	if (!glProgramUniform1fEXT) NotSupportedMessage("glProgramUniform1fEXT");
	if (!glProgramUniform1fv) NotSupportedMessage("glProgramUniform1fv");
	if (!glProgramUniform1fvEXT) NotSupportedMessage("glProgramUniform1fvEXT");
	if (!glProgramUniform1i) NotSupportedMessage("glProgramUniform1i");
	if (!glProgramUniform1iEXT) NotSupportedMessage("glProgramUniform1iEXT");
	if (!glProgramUniform1iv) NotSupportedMessage("glProgramUniform1iv");
	if (!glProgramUniform1ivEXT) NotSupportedMessage("glProgramUniform1ivEXT");
	if (!glProgramUniform1ui) NotSupportedMessage("glProgramUniform1ui");
	if (!glProgramUniform1uiEXT) NotSupportedMessage("glProgramUniform1uiEXT");
	if (!glProgramUniform1uiv) NotSupportedMessage("glProgramUniform1uiv");
	if (!glProgramUniform1uivEXT) NotSupportedMessage("glProgramUniform1uivEXT");
	if (!glProgramUniform2d) NotSupportedMessage("glProgramUniform2d");
	if (!glProgramUniform2dv) NotSupportedMessage("glProgramUniform2dv");
	if (!glProgramUniform2f) NotSupportedMessage("glProgramUniform2f");
	if (!glProgramUniform2fEXT) NotSupportedMessage("glProgramUniform2fEXT");
	if (!glProgramUniform2fv) NotSupportedMessage("glProgramUniform2fv");
	if (!glProgramUniform2fvEXT) NotSupportedMessage("glProgramUniform2fvEXT");
	if (!glProgramUniform2i) NotSupportedMessage("glProgramUniform2i");
	if (!glProgramUniform2iEXT) NotSupportedMessage("glProgramUniform2iEXT");
	if (!glProgramUniform2iv) NotSupportedMessage("glProgramUniform2iv");
	if (!glProgramUniform2ivEXT) NotSupportedMessage("glProgramUniform2ivEXT");
	if (!glProgramUniform2ui) NotSupportedMessage("glProgramUniform2ui");
	if (!glProgramUniform2uiEXT) NotSupportedMessage("glProgramUniform2uiEXT");
	if (!glProgramUniform2uiv) NotSupportedMessage("glProgramUniform2uiv");
	if (!glProgramUniform2uivEXT) NotSupportedMessage("glProgramUniform2uivEXT");
	if (!glProgramUniform3d) NotSupportedMessage("glProgramUniform3d");
	if (!glProgramUniform3dv) NotSupportedMessage("glProgramUniform3dv");
	if (!glProgramUniform3f) NotSupportedMessage("glProgramUniform3f");
	if (!glProgramUniform3fEXT) NotSupportedMessage("glProgramUniform3fEXT");
	if (!glProgramUniform3fv) NotSupportedMessage("glProgramUniform3fv");
	if (!glProgramUniform3fvEXT) NotSupportedMessage("glProgramUniform3fvEXT");
	if (!glProgramUniform3i) NotSupportedMessage("glProgramUniform3i");
	if (!glProgramUniform3iEXT) NotSupportedMessage("glProgramUniform3iEXT");
	if (!glProgramUniform3iv) NotSupportedMessage("glProgramUniform3iv");
	if (!glProgramUniform3ivEXT) NotSupportedMessage("glProgramUniform3ivEXT");
	if (!glProgramUniform3ui) NotSupportedMessage("glProgramUniform3ui");
	if (!glProgramUniform3uiEXT) NotSupportedMessage("glProgramUniform3uiEXT");
	if (!glProgramUniform3uiv) NotSupportedMessage("glProgramUniform3uiv");
	if (!glProgramUniform3uivEXT) NotSupportedMessage("glProgramUniform3uivEXT");
	if (!glProgramUniform4d) NotSupportedMessage("glProgramUniform4d");
	if (!glProgramUniform4dv) NotSupportedMessage("glProgramUniform4dv");
	if (!glProgramUniform4f) NotSupportedMessage("glProgramUniform4f");
	if (!glProgramUniform4fEXT) NotSupportedMessage("glProgramUniform4fEXT");
	if (!glProgramUniform4fv) NotSupportedMessage("glProgramUniform4fv");
	if (!glProgramUniform4fvEXT) NotSupportedMessage("glProgramUniform4fvEXT");
	if (!glProgramUniform4i) NotSupportedMessage("glProgramUniform4i");
	if (!glProgramUniform4iEXT) NotSupportedMessage("glProgramUniform4iEXT");
	if (!glProgramUniform4iv) NotSupportedMessage("glProgramUniform4iv");
	if (!glProgramUniform4ivEXT) NotSupportedMessage("glProgramUniform4ivEXT");
	if (!glProgramUniform4ui) NotSupportedMessage("glProgramUniform4ui");
	if (!glProgramUniform4uiEXT) NotSupportedMessage("glProgramUniform4uiEXT");
	if (!glProgramUniform4uiv) NotSupportedMessage("glProgramUniform4uiv");
	if (!glProgramUniform4uivEXT) NotSupportedMessage("glProgramUniform4uivEXT");
	if (!glProgramUniformMatrix2dv) NotSupportedMessage("glProgramUniformMatrix2dv");
	if (!glProgramUniformMatrix2fv) NotSupportedMessage("glProgramUniformMatrix2fv");
	if (!glProgramUniformMatrix2fvEXT) NotSupportedMessage("glProgramUniformMatrix2fvEXT");
	if (!glProgramUniformMatrix2x3dv) NotSupportedMessage("glProgramUniformMatrix2x3dv");
	if (!glProgramUniformMatrix2x3fv) NotSupportedMessage("glProgramUniformMatrix2x3fv");
	if (!glProgramUniformMatrix2x3fvEXT) NotSupportedMessage("glProgramUniformMatrix2x3fvEXT");
	if (!glProgramUniformMatrix2x4dv) NotSupportedMessage("glProgramUniformMatrix2x4dv");
	if (!glProgramUniformMatrix2x4fv) NotSupportedMessage("glProgramUniformMatrix2x4fv");
	if (!glProgramUniformMatrix2x4fvEXT) NotSupportedMessage("glProgramUniformMatrix2x4fvEXT");
	if (!glProgramUniformMatrix3dv) NotSupportedMessage("glProgramUniformMatrix3dv");
	if (!glProgramUniformMatrix3fv) NotSupportedMessage("glProgramUniformMatrix3fv");
	if (!glProgramUniformMatrix3fvEXT) NotSupportedMessage("glProgramUniformMatrix3fvEXT");
	if (!glProgramUniformMatrix3x2dv) NotSupportedMessage("glProgramUniformMatrix3x2dv");
	if (!glProgramUniformMatrix3x2fv) NotSupportedMessage("glProgramUniformMatrix3x2fv");
	if (!glProgramUniformMatrix3x2fvEXT) NotSupportedMessage("glProgramUniformMatrix3x2fvEXT");
	if (!glProgramUniformMatrix3x4dv) NotSupportedMessage("glProgramUniformMatrix3x4dv");
	if (!glProgramUniformMatrix3x4fv) NotSupportedMessage("glProgramUniformMatrix3x4fv");
	if (!glProgramUniformMatrix3x4fvEXT) NotSupportedMessage("glProgramUniformMatrix3x4fvEXT");
	if (!glProgramUniformMatrix4dv) NotSupportedMessage("glProgramUniformMatrix4dv");
	if (!glProgramUniformMatrix4fv) NotSupportedMessage("glProgramUniformMatrix4fv");
	if (!glProgramUniformMatrix4fvEXT) NotSupportedMessage("glProgramUniformMatrix4fvEXT");
	if (!glProgramUniformMatrix4x2dv) NotSupportedMessage("glProgramUniformMatrix4x2dv");
	if (!glProgramUniformMatrix4x2fv) NotSupportedMessage("glProgramUniformMatrix4x2fv");
	if (!glProgramUniformMatrix4x2fvEXT) NotSupportedMessage("glProgramUniformMatrix4x2fvEXT");
	if (!glProgramUniformMatrix4x3dv) NotSupportedMessage("glProgramUniformMatrix4x3dv");
	if (!glProgramUniformMatrix4x3fv) NotSupportedMessage("glProgramUniformMatrix4x3fv");
	if (!glProgramUniformMatrix4x3fvEXT) NotSupportedMessage("glProgramUniformMatrix4x3fvEXT");
	if (!glProvokingVertex) NotSupportedMessage("glProvokingVertex");
	if (!glProvokingVertexEXT) NotSupportedMessage("glProvokingVertexEXT");
	if (!glPushClientAttribDefaultEXT) NotSupportedMessage("glPushClientAttribDefaultEXT");
	if (!glQueryCounter) NotSupportedMessage("glQueryCounter");
	if (!glReadnPixelsARB) NotSupportedMessage("glReadnPixelsARB");
	if (!glReleaseShaderCompiler) NotSupportedMessage("glReleaseShaderCompiler");
	if (!glRenderbufferStorage) NotSupportedMessage("glRenderbufferStorage");
	if (!glRenderbufferStorageEXT) NotSupportedMessage("glRenderbufferStorageEXT");
	if (!glRenderbufferStorageMultisample) NotSupportedMessage("glRenderbufferStorageMultisample");
	if (!glRenderbufferStorageMultisampleEXT) NotSupportedMessage("glRenderbufferStorageMultisampleEXT");
	if (!glResetHistogram) NotSupportedMessage("glResetHistogram");
	if (!glResetHistogramEXT) NotSupportedMessage("glResetHistogramEXT");
	if (!glResetMinmax) NotSupportedMessage("glResetMinmax");
	if (!glResetMinmaxEXT) NotSupportedMessage("glResetMinmaxEXT");
	if (!glResumeTransformFeedback) NotSupportedMessage("glResumeTransformFeedback");
	if (!glSampleCoverage) NotSupportedMessage("glSampleCoverage");
	if (!glSampleCoverageARB) NotSupportedMessage("glSampleCoverageARB");
	if (!glSampleMaskEXT) NotSupportedMessage("glSampleMaskEXT");
	if (!glSampleMaski) NotSupportedMessage("glSampleMaski");
	if (!glSamplePatternEXT) NotSupportedMessage("glSamplePatternEXT");
	if (!glSamplerParameterf) NotSupportedMessage("glSamplerParameterf");
	if (!glSamplerParameterfv) NotSupportedMessage("glSamplerParameterfv");
	if (!glSamplerParameteri) NotSupportedMessage("glSamplerParameteri");
	if (!glSamplerParameterIiv) NotSupportedMessage("glSamplerParameterIiv");
	if (!glSamplerParameterIuiv) NotSupportedMessage("glSamplerParameterIuiv");
	if (!glSamplerParameteriv) NotSupportedMessage("glSamplerParameteriv");
	if (!glScissorArrayv) NotSupportedMessage("glScissorArrayv");
	if (!glScissorIndexed) NotSupportedMessage("glScissorIndexed");
	if (!glScissorIndexedv) NotSupportedMessage("glScissorIndexedv");
	if (!glSecondaryColor3b) NotSupportedMessage("glSecondaryColor3b");
	if (!glSecondaryColor3bEXT) NotSupportedMessage("glSecondaryColor3bEXT");
	if (!glSecondaryColor3bv) NotSupportedMessage("glSecondaryColor3bv");
	if (!glSecondaryColor3bvEXT) NotSupportedMessage("glSecondaryColor3bvEXT");
	if (!glSecondaryColor3d) NotSupportedMessage("glSecondaryColor3d");
	if (!glSecondaryColor3dEXT) NotSupportedMessage("glSecondaryColor3dEXT");
	if (!glSecondaryColor3dv) NotSupportedMessage("glSecondaryColor3dv");
	if (!glSecondaryColor3dvEXT) NotSupportedMessage("glSecondaryColor3dvEXT");
	if (!glSecondaryColor3f) NotSupportedMessage("glSecondaryColor3f");
	if (!glSecondaryColor3fEXT) NotSupportedMessage("glSecondaryColor3fEXT");
	if (!glSecondaryColor3fv) NotSupportedMessage("glSecondaryColor3fv");
	if (!glSecondaryColor3fvEXT) NotSupportedMessage("glSecondaryColor3fvEXT");
	if (!glSecondaryColor3i) NotSupportedMessage("glSecondaryColor3i");
	if (!glSecondaryColor3iEXT) NotSupportedMessage("glSecondaryColor3iEXT");
	if (!glSecondaryColor3iv) NotSupportedMessage("glSecondaryColor3iv");
	if (!glSecondaryColor3ivEXT) NotSupportedMessage("glSecondaryColor3ivEXT");
	if (!glSecondaryColor3s) NotSupportedMessage("glSecondaryColor3s");
	if (!glSecondaryColor3sEXT) NotSupportedMessage("glSecondaryColor3sEXT");
	if (!glSecondaryColor3sv) NotSupportedMessage("glSecondaryColor3sv");
	if (!glSecondaryColor3svEXT) NotSupportedMessage("glSecondaryColor3svEXT");
	if (!glSecondaryColor3ub) NotSupportedMessage("glSecondaryColor3ub");
	if (!glSecondaryColor3ubEXT) NotSupportedMessage("glSecondaryColor3ubEXT");
	if (!glSecondaryColor3ubv) NotSupportedMessage("glSecondaryColor3ubv");
	if (!glSecondaryColor3ubvEXT) NotSupportedMessage("glSecondaryColor3ubvEXT");
	if (!glSecondaryColor3ui) NotSupportedMessage("glSecondaryColor3ui");
	if (!glSecondaryColor3uiEXT) NotSupportedMessage("glSecondaryColor3uiEXT");
	if (!glSecondaryColor3uiv) NotSupportedMessage("glSecondaryColor3uiv");
	if (!glSecondaryColor3uivEXT) NotSupportedMessage("glSecondaryColor3uivEXT");
	if (!glSecondaryColor3us) NotSupportedMessage("glSecondaryColor3us");
	if (!glSecondaryColor3usEXT) NotSupportedMessage("glSecondaryColor3usEXT");
	if (!glSecondaryColor3usv) NotSupportedMessage("glSecondaryColor3usv");
	if (!glSecondaryColor3usvEXT) NotSupportedMessage("glSecondaryColor3usvEXT");
	if (!glSecondaryColorP3ui) NotSupportedMessage("glSecondaryColorP3ui");
	if (!glSecondaryColorP3uiv) NotSupportedMessage("glSecondaryColorP3uiv");
	if (!glSecondaryColorPointer) NotSupportedMessage("glSecondaryColorPointer");
	if (!glSecondaryColorPointerEXT) NotSupportedMessage("glSecondaryColorPointerEXT");
	if (!glSeparableFilter2D) NotSupportedMessage("glSeparableFilter2D");
	if (!glSeparableFilter2DEXT) NotSupportedMessage("glSeparableFilter2DEXT");
	if (!glSetInvariantEXT) NotSupportedMessage("glSetInvariantEXT");
	if (!glSetLocalConstantEXT) NotSupportedMessage("glSetLocalConstantEXT");
	if (!glShaderBinary) NotSupportedMessage("glShaderBinary");
	if (!glShaderOp1EXT) NotSupportedMessage("glShaderOp1EXT");
	if (!glShaderOp2EXT) NotSupportedMessage("glShaderOp2EXT");
	if (!glShaderOp3EXT) NotSupportedMessage("glShaderOp3EXT");
	if (!glShaderSource) NotSupportedMessage("glShaderSource");
	if (!glShaderSourceARB) NotSupportedMessage("glShaderSourceARB");
	if (!glStencilFuncSeparate) NotSupportedMessage("glStencilFuncSeparate");
	if (!glStencilMaskSeparate) NotSupportedMessage("glStencilMaskSeparate");
	if (!glStencilOpSeparate) NotSupportedMessage("glStencilOpSeparate");
	if (!glSwizzleEXT) NotSupportedMessage("glSwizzleEXT");
	if (!glTangentPointerEXT) NotSupportedMessage("glTangentPointerEXT");
	if (!glTbufferMask3DFX) NotSupportedMessage("glTbufferMask3DFX");
	if (!glTexBuffer) NotSupportedMessage("glTexBuffer");
	if (!glTexBufferARB) NotSupportedMessage("glTexBufferARB");
	if (!glTexBufferEXT) NotSupportedMessage("glTexBufferEXT");
	if (!glTexCoordP1ui) NotSupportedMessage("glTexCoordP1ui");
	if (!glTexCoordP1uiv) NotSupportedMessage("glTexCoordP1uiv");
	if (!glTexCoordP2ui) NotSupportedMessage("glTexCoordP2ui");
	if (!glTexCoordP2uiv) NotSupportedMessage("glTexCoordP2uiv");
	if (!glTexCoordP3ui) NotSupportedMessage("glTexCoordP3ui");
	if (!glTexCoordP3uiv) NotSupportedMessage("glTexCoordP3uiv");
	if (!glTexCoordP4ui) NotSupportedMessage("glTexCoordP4ui");
	if (!glTexCoordP4uiv) NotSupportedMessage("glTexCoordP4uiv");
	if (!glTexCoordPointerEXT) NotSupportedMessage("glTexCoordPointerEXT");
	if (!glTexImage2DMultisample) NotSupportedMessage("glTexImage2DMultisample");
	if (!glTexImage3D) NotSupportedMessage("glTexImage3D");
	if (!glTexImage3DEXT) NotSupportedMessage("glTexImage3DEXT");
	if (!glTexImage3DMultisample) NotSupportedMessage("glTexImage3DMultisample");
	if (!glTexParameterIiv) NotSupportedMessage("glTexParameterIiv");
	if (!glTexParameterIivEXT) NotSupportedMessage("glTexParameterIivEXT");
	if (!glTexParameterIuiv) NotSupportedMessage("glTexParameterIuiv");
	if (!glTexParameterIuivEXT) NotSupportedMessage("glTexParameterIuivEXT");
	if (!glTexStorage1D) NotSupportedMessage("glTexStorage1D");
	if (!glTexStorage2D) NotSupportedMessage("glTexStorage2D");
	if (!glTexStorage3D) NotSupportedMessage("glTexStorage3D");
	if (!glTexSubImage1DEXT) NotSupportedMessage("glTexSubImage1DEXT");
	if (!glTexSubImage2DEXT) NotSupportedMessage("glTexSubImage2DEXT");
	if (!glTexSubImage3D) NotSupportedMessage("glTexSubImage3D");
	if (!glTexSubImage3DEXT) NotSupportedMessage("glTexSubImage3DEXT");
	if (!glTextureBufferEXT) NotSupportedMessage("glTextureBufferEXT");
	if (!glTextureImage1DEXT) NotSupportedMessage("glTextureImage1DEXT");
	if (!glTextureImage2DEXT) NotSupportedMessage("glTextureImage2DEXT");
	if (!glTextureImage3DEXT) NotSupportedMessage("glTextureImage3DEXT");
	if (!glTextureLightEXT) NotSupportedMessage("glTextureLightEXT");
	if (!glTextureMaterialEXT) NotSupportedMessage("glTextureMaterialEXT");
	if (!glTextureNormalEXT) NotSupportedMessage("glTextureNormalEXT");
	if (!glTextureParameterfEXT) NotSupportedMessage("glTextureParameterfEXT");
	if (!glTextureParameterfvEXT) NotSupportedMessage("glTextureParameterfvEXT");
	if (!glTextureParameteriEXT) NotSupportedMessage("glTextureParameteriEXT");
	if (!glTextureParameterIivEXT) NotSupportedMessage("glTextureParameterIivEXT");
	if (!glTextureParameterIuivEXT) NotSupportedMessage("glTextureParameterIuivEXT");
	if (!glTextureParameterivEXT) NotSupportedMessage("glTextureParameterivEXT");
	if (!glTextureRenderbufferEXT) NotSupportedMessage("glTextureRenderbufferEXT");
	if (!glTextureStorage1DEXT) NotSupportedMessage("glTextureStorage1DEXT");
	if (!glTextureStorage2DEXT) NotSupportedMessage("glTextureStorage2DEXT");
	if (!glTextureStorage3DEXT) NotSupportedMessage("glTextureStorage3DEXT");
	if (!glTextureSubImage1DEXT) NotSupportedMessage("glTextureSubImage1DEXT");
	if (!glTextureSubImage2DEXT) NotSupportedMessage("glTextureSubImage2DEXT");
	if (!glTextureSubImage3DEXT) NotSupportedMessage("glTextureSubImage3DEXT");
	if (!glTransformFeedbackVaryings) NotSupportedMessage("glTransformFeedbackVaryings");
	if (!glTransformFeedbackVaryingsEXT) NotSupportedMessage("glTransformFeedbackVaryingsEXT");
	if (!glUniform1d) NotSupportedMessage("glUniform1d");
	if (!glUniform1dv) NotSupportedMessage("glUniform1dv");
	if (!glUniform1f) NotSupportedMessage("glUniform1f");
	if (!glUniform1fARB) NotSupportedMessage("glUniform1fARB");
	if (!glUniform1fv) NotSupportedMessage("glUniform1fv");
	if (!glUniform1fvARB) NotSupportedMessage("glUniform1fvARB");
	if (!glUniform1i) NotSupportedMessage("glUniform1i");
	if (!glUniform1iARB) NotSupportedMessage("glUniform1iARB");
	if (!glUniform1iv) NotSupportedMessage("glUniform1iv");
	if (!glUniform1ivARB) NotSupportedMessage("glUniform1ivARB");
	if (!glUniform1ui) NotSupportedMessage("glUniform1ui");
	if (!glUniform1uiEXT) NotSupportedMessage("glUniform1uiEXT");
	if (!glUniform1uiv) NotSupportedMessage("glUniform1uiv");
	if (!glUniform1uivEXT) NotSupportedMessage("glUniform1uivEXT");
	if (!glUniform2d) NotSupportedMessage("glUniform2d");
	if (!glUniform2dv) NotSupportedMessage("glUniform2dv");
	if (!glUniform2f) NotSupportedMessage("glUniform2f");
	if (!glUniform2fARB) NotSupportedMessage("glUniform2fARB");
	if (!glUniform2fv) NotSupportedMessage("glUniform2fv");
	if (!glUniform2fvARB) NotSupportedMessage("glUniform2fvARB");
	if (!glUniform2i) NotSupportedMessage("glUniform2i");
	if (!glUniform2iARB) NotSupportedMessage("glUniform2iARB");
	if (!glUniform2iv) NotSupportedMessage("glUniform2iv");
	if (!glUniform2ivARB) NotSupportedMessage("glUniform2ivARB");
	if (!glUniform2ui) NotSupportedMessage("glUniform2ui");
	if (!glUniform2uiEXT) NotSupportedMessage("glUniform2uiEXT");
	if (!glUniform2uiv) NotSupportedMessage("glUniform2uiv");
	if (!glUniform2uivEXT) NotSupportedMessage("glUniform2uivEXT");
	if (!glUniform3d) NotSupportedMessage("glUniform3d");
	if (!glUniform3dv) NotSupportedMessage("glUniform3dv");
	if (!glUniform3f) NotSupportedMessage("glUniform3f");
	if (!glUniform3fARB) NotSupportedMessage("glUniform3fARB");
	if (!glUniform3fv) NotSupportedMessage("glUniform3fv");
	if (!glUniform3fvARB) NotSupportedMessage("glUniform3fvARB");
	if (!glUniform3i) NotSupportedMessage("glUniform3i");
	if (!glUniform3iARB) NotSupportedMessage("glUniform3iARB");
	if (!glUniform3iv) NotSupportedMessage("glUniform3iv");
	if (!glUniform3ivARB) NotSupportedMessage("glUniform3ivARB");
	if (!glUniform3ui) NotSupportedMessage("glUniform3ui");
	if (!glUniform3uiEXT) NotSupportedMessage("glUniform3uiEXT");
	if (!glUniform3uiv) NotSupportedMessage("glUniform3uiv");
	if (!glUniform3uivEXT) NotSupportedMessage("glUniform3uivEXT");
	if (!glUniform4d) NotSupportedMessage("glUniform4d");
	if (!glUniform4dv) NotSupportedMessage("glUniform4dv");
	if (!glUniform4f) NotSupportedMessage("glUniform4f");
	if (!glUniform4fARB) NotSupportedMessage("glUniform4fARB");
	if (!glUniform4fv) NotSupportedMessage("glUniform4fv");
	if (!glUniform4fvARB) NotSupportedMessage("glUniform4fvARB");
	if (!glUniform4i) NotSupportedMessage("glUniform4i");
	if (!glUniform4iARB) NotSupportedMessage("glUniform4iARB");
	if (!glUniform4iv) NotSupportedMessage("glUniform4iv");
	if (!glUniform4ivARB) NotSupportedMessage("glUniform4ivARB");
	if (!glUniform4ui) NotSupportedMessage("glUniform4ui");
	if (!glUniform4uiEXT) NotSupportedMessage("glUniform4uiEXT");
	if (!glUniform4uiv) NotSupportedMessage("glUniform4uiv");
	if (!glUniform4uivEXT) NotSupportedMessage("glUniform4uivEXT");
	if (!glUniformBlockBinding) NotSupportedMessage("glUniformBlockBinding");
	if (!glUniformBufferEXT) NotSupportedMessage("glUniformBufferEXT");
	if (!glUniformMatrix2dv) NotSupportedMessage("glUniformMatrix2dv");
	if (!glUniformMatrix2fv) NotSupportedMessage("glUniformMatrix2fv");
	if (!glUniformMatrix2fvARB) NotSupportedMessage("glUniformMatrix2fvARB");
	if (!glUniformMatrix2x3dv) NotSupportedMessage("glUniformMatrix2x3dv");
	if (!glUniformMatrix2x3fv) NotSupportedMessage("glUniformMatrix2x3fv");
	if (!glUniformMatrix2x4dv) NotSupportedMessage("glUniformMatrix2x4dv");
	if (!glUniformMatrix2x4fv) NotSupportedMessage("glUniformMatrix2x4fv");
	if (!glUniformMatrix3dv) NotSupportedMessage("glUniformMatrix3dv");
	if (!glUniformMatrix3fv) NotSupportedMessage("glUniformMatrix3fv");
	if (!glUniformMatrix3fvARB) NotSupportedMessage("glUniformMatrix3fvARB");
	if (!glUniformMatrix3x2dv) NotSupportedMessage("glUniformMatrix3x2dv");
	if (!glUniformMatrix3x2fv) NotSupportedMessage("glUniformMatrix3x2fv");
	if (!glUniformMatrix3x4dv) NotSupportedMessage("glUniformMatrix3x4dv");
	if (!glUniformMatrix3x4fv) NotSupportedMessage("glUniformMatrix3x4fv");
	if (!glUniformMatrix4dv) NotSupportedMessage("glUniformMatrix4dv");
	if (!glUniformMatrix4fv) NotSupportedMessage("glUniformMatrix4fv");
	if (!glUniformMatrix4fvARB) NotSupportedMessage("glUniformMatrix4fvARB");
	if (!glUniformMatrix4x2dv) NotSupportedMessage("glUniformMatrix4x2dv");
	if (!glUniformMatrix4x2fv) NotSupportedMessage("glUniformMatrix4x2fv");
	if (!glUniformMatrix4x3dv) NotSupportedMessage("glUniformMatrix4x3dv");
	if (!glUniformMatrix4x3fv) NotSupportedMessage("glUniformMatrix4x3fv");
	if (!glUniformSubroutinesuiv) NotSupportedMessage("glUniformSubroutinesuiv");
	if (!glUnlockArraysEXT) NotSupportedMessage("glUnlockArraysEXT");
	if (!glUnmapBuffer) NotSupportedMessage("glUnmapBuffer");
	if (!glUnmapBufferARB) NotSupportedMessage("glUnmapBufferARB");
	if (!glUnmapNamedBufferEXT) NotSupportedMessage("glUnmapNamedBufferEXT");
	if (!glUseProgram) NotSupportedMessage("glUseProgram");
	if (!glUseProgramObjectARB) NotSupportedMessage("glUseProgramObjectARB");
	if (!glUseProgramStages) NotSupportedMessage("glUseProgramStages");
	if (!glUseShaderProgramEXT) NotSupportedMessage("glUseShaderProgramEXT");
	if (!glValidateProgram) NotSupportedMessage("glValidateProgram");
	if (!glValidateProgramARB) NotSupportedMessage("glValidateProgramARB");
	if (!glValidateProgramPipeline) NotSupportedMessage("glValidateProgramPipeline");
	if (!glVariantbvEXT) NotSupportedMessage("glVariantbvEXT");
	if (!glVariantdvEXT) NotSupportedMessage("glVariantdvEXT");
	if (!glVariantfvEXT) NotSupportedMessage("glVariantfvEXT");
	if (!glVariantivEXT) NotSupportedMessage("glVariantivEXT");
	if (!glVariantPointerEXT) NotSupportedMessage("glVariantPointerEXT");
	if (!glVariantsvEXT) NotSupportedMessage("glVariantsvEXT");
	if (!glVariantubvEXT) NotSupportedMessage("glVariantubvEXT");
	if (!glVariantuivEXT) NotSupportedMessage("glVariantuivEXT");
	if (!glVariantusvEXT) NotSupportedMessage("glVariantusvEXT");
	if (!glVertexArrayVertexAttribLOffsetEXT) NotSupportedMessage("glVertexArrayVertexAttribLOffsetEXT");
	if (!glVertexAttrib1d) NotSupportedMessage("glVertexAttrib1d");
	if (!glVertexAttrib1dARB) NotSupportedMessage("glVertexAttrib1dARB");
	if (!glVertexAttrib1dv) NotSupportedMessage("glVertexAttrib1dv");
	if (!glVertexAttrib1dvARB) NotSupportedMessage("glVertexAttrib1dvARB");
	if (!glVertexAttrib1f) NotSupportedMessage("glVertexAttrib1f");
	if (!glVertexAttrib1fARB) NotSupportedMessage("glVertexAttrib1fARB");
	if (!glVertexAttrib1fv) NotSupportedMessage("glVertexAttrib1fv");
	if (!glVertexAttrib1fvARB) NotSupportedMessage("glVertexAttrib1fvARB");
	if (!glVertexAttrib1s) NotSupportedMessage("glVertexAttrib1s");
	if (!glVertexAttrib1sARB) NotSupportedMessage("glVertexAttrib1sARB");
	if (!glVertexAttrib1sv) NotSupportedMessage("glVertexAttrib1sv");
	if (!glVertexAttrib1svARB) NotSupportedMessage("glVertexAttrib1svARB");
	if (!glVertexAttrib2d) NotSupportedMessage("glVertexAttrib2d");
	if (!glVertexAttrib2dARB) NotSupportedMessage("glVertexAttrib2dARB");
	if (!glVertexAttrib2dv) NotSupportedMessage("glVertexAttrib2dv");
	if (!glVertexAttrib2dvARB) NotSupportedMessage("glVertexAttrib2dvARB");
	if (!glVertexAttrib2f) NotSupportedMessage("glVertexAttrib2f");
	if (!glVertexAttrib2fARB) NotSupportedMessage("glVertexAttrib2fARB");
	if (!glVertexAttrib2fv) NotSupportedMessage("glVertexAttrib2fv");
	if (!glVertexAttrib2fvARB) NotSupportedMessage("glVertexAttrib2fvARB");
	if (!glVertexAttrib2s) NotSupportedMessage("glVertexAttrib2s");
	if (!glVertexAttrib2sARB) NotSupportedMessage("glVertexAttrib2sARB");
	if (!glVertexAttrib2sv) NotSupportedMessage("glVertexAttrib2sv");
	if (!glVertexAttrib2svARB) NotSupportedMessage("glVertexAttrib2svARB");
	if (!glVertexAttrib3d) NotSupportedMessage("glVertexAttrib3d");
	if (!glVertexAttrib3dARB) NotSupportedMessage("glVertexAttrib3dARB");
	if (!glVertexAttrib3dv) NotSupportedMessage("glVertexAttrib3dv");
	if (!glVertexAttrib3dvARB) NotSupportedMessage("glVertexAttrib3dvARB");
	if (!glVertexAttrib3f) NotSupportedMessage("glVertexAttrib3f");
	if (!glVertexAttrib3fARB) NotSupportedMessage("glVertexAttrib3fARB");
	if (!glVertexAttrib3fv) NotSupportedMessage("glVertexAttrib3fv");
	if (!glVertexAttrib3fvARB) NotSupportedMessage("glVertexAttrib3fvARB");
	if (!glVertexAttrib3s) NotSupportedMessage("glVertexAttrib3s");
	if (!glVertexAttrib3sARB) NotSupportedMessage("glVertexAttrib3sARB");
	if (!glVertexAttrib3sv) NotSupportedMessage("glVertexAttrib3sv");
	if (!glVertexAttrib3svARB) NotSupportedMessage("glVertexAttrib3svARB");
	if (!glVertexAttrib4bv) NotSupportedMessage("glVertexAttrib4bv");
	if (!glVertexAttrib4bvARB) NotSupportedMessage("glVertexAttrib4bvARB");
	if (!glVertexAttrib4d) NotSupportedMessage("glVertexAttrib4d");
	if (!glVertexAttrib4dARB) NotSupportedMessage("glVertexAttrib4dARB");
	if (!glVertexAttrib4dv) NotSupportedMessage("glVertexAttrib4dv");
	if (!glVertexAttrib4dvARB) NotSupportedMessage("glVertexAttrib4dvARB");
	if (!glVertexAttrib4f) NotSupportedMessage("glVertexAttrib4f");
	if (!glVertexAttrib4fARB) NotSupportedMessage("glVertexAttrib4fARB");
	if (!glVertexAttrib4fv) NotSupportedMessage("glVertexAttrib4fv");
	if (!glVertexAttrib4fvARB) NotSupportedMessage("glVertexAttrib4fvARB");
	if (!glVertexAttrib4iv) NotSupportedMessage("glVertexAttrib4iv");
	if (!glVertexAttrib4ivARB) NotSupportedMessage("glVertexAttrib4ivARB");
	if (!glVertexAttrib4Nbv) NotSupportedMessage("glVertexAttrib4Nbv");
	if (!glVertexAttrib4NbvARB) NotSupportedMessage("glVertexAttrib4NbvARB");
	if (!glVertexAttrib4Niv) NotSupportedMessage("glVertexAttrib4Niv");
	if (!glVertexAttrib4NivARB) NotSupportedMessage("glVertexAttrib4NivARB");
	if (!glVertexAttrib4Nsv) NotSupportedMessage("glVertexAttrib4Nsv");
	if (!glVertexAttrib4NsvARB) NotSupportedMessage("glVertexAttrib4NsvARB");
	if (!glVertexAttrib4Nub) NotSupportedMessage("glVertexAttrib4Nub");
	if (!glVertexAttrib4NubARB) NotSupportedMessage("glVertexAttrib4NubARB");
	if (!glVertexAttrib4Nubv) NotSupportedMessage("glVertexAttrib4Nubv");
	if (!glVertexAttrib4NubvARB) NotSupportedMessage("glVertexAttrib4NubvARB");
	if (!glVertexAttrib4Nuiv) NotSupportedMessage("glVertexAttrib4Nuiv");
	if (!glVertexAttrib4NuivARB) NotSupportedMessage("glVertexAttrib4NuivARB");
	if (!glVertexAttrib4Nusv) NotSupportedMessage("glVertexAttrib4Nusv");
	if (!glVertexAttrib4NusvARB) NotSupportedMessage("glVertexAttrib4NusvARB");
	if (!glVertexAttrib4s) NotSupportedMessage("glVertexAttrib4s");
	if (!glVertexAttrib4sARB) NotSupportedMessage("glVertexAttrib4sARB");
	if (!glVertexAttrib4sv) NotSupportedMessage("glVertexAttrib4sv");
	if (!glVertexAttrib4svARB) NotSupportedMessage("glVertexAttrib4svARB");
	if (!glVertexAttrib4ubv) NotSupportedMessage("glVertexAttrib4ubv");
	if (!glVertexAttrib4ubvARB) NotSupportedMessage("glVertexAttrib4ubvARB");
	if (!glVertexAttrib4uiv) NotSupportedMessage("glVertexAttrib4uiv");
	if (!glVertexAttrib4uivARB) NotSupportedMessage("glVertexAttrib4uivARB");
	if (!glVertexAttrib4usv) NotSupportedMessage("glVertexAttrib4usv");
	if (!glVertexAttrib4usvARB) NotSupportedMessage("glVertexAttrib4usvARB");
	if (!glVertexAttribDivisor) NotSupportedMessage("glVertexAttribDivisor");
	if (!glVertexAttribDivisorARB) NotSupportedMessage("glVertexAttribDivisorARB");
	if (!glVertexAttribI1i) NotSupportedMessage("glVertexAttribI1i");
	if (!glVertexAttribI1iEXT) NotSupportedMessage("glVertexAttribI1iEXT");
	if (!glVertexAttribI1iv) NotSupportedMessage("glVertexAttribI1iv");
	if (!glVertexAttribI1ivEXT) NotSupportedMessage("glVertexAttribI1ivEXT");
	if (!glVertexAttribI1ui) NotSupportedMessage("glVertexAttribI1ui");
	if (!glVertexAttribI1uiEXT) NotSupportedMessage("glVertexAttribI1uiEXT");
	if (!glVertexAttribI1uiv) NotSupportedMessage("glVertexAttribI1uiv");
	if (!glVertexAttribI1uivEXT) NotSupportedMessage("glVertexAttribI1uivEXT");
	if (!glVertexAttribI2i) NotSupportedMessage("glVertexAttribI2i");
	if (!glVertexAttribI2iEXT) NotSupportedMessage("glVertexAttribI2iEXT");
	if (!glVertexAttribI2iv) NotSupportedMessage("glVertexAttribI2iv");
	if (!glVertexAttribI2ivEXT) NotSupportedMessage("glVertexAttribI2ivEXT");
	if (!glVertexAttribI2ui) NotSupportedMessage("glVertexAttribI2ui");
	if (!glVertexAttribI2uiEXT) NotSupportedMessage("glVertexAttribI2uiEXT");
	if (!glVertexAttribI2uiv) NotSupportedMessage("glVertexAttribI2uiv");
	if (!glVertexAttribI2uivEXT) NotSupportedMessage("glVertexAttribI2uivEXT");
	if (!glVertexAttribI3i) NotSupportedMessage("glVertexAttribI3i");
	if (!glVertexAttribI3iEXT) NotSupportedMessage("glVertexAttribI3iEXT");
	if (!glVertexAttribI3iv) NotSupportedMessage("glVertexAttribI3iv");
	if (!glVertexAttribI3ivEXT) NotSupportedMessage("glVertexAttribI3ivEXT");
	if (!glVertexAttribI3ui) NotSupportedMessage("glVertexAttribI3ui");
	if (!glVertexAttribI3uiEXT) NotSupportedMessage("glVertexAttribI3uiEXT");
	if (!glVertexAttribI3uiv) NotSupportedMessage("glVertexAttribI3uiv");
	if (!glVertexAttribI3uivEXT) NotSupportedMessage("glVertexAttribI3uivEXT");
	if (!glVertexAttribI4bv) NotSupportedMessage("glVertexAttribI4bv");
	if (!glVertexAttribI4bvEXT) NotSupportedMessage("glVertexAttribI4bvEXT");
	if (!glVertexAttribI4i) NotSupportedMessage("glVertexAttribI4i");
	if (!glVertexAttribI4iEXT) NotSupportedMessage("glVertexAttribI4iEXT");
	if (!glVertexAttribI4iv) NotSupportedMessage("glVertexAttribI4iv");
	if (!glVertexAttribI4ivEXT) NotSupportedMessage("glVertexAttribI4ivEXT");
	if (!glVertexAttribI4sv) NotSupportedMessage("glVertexAttribI4sv");
	if (!glVertexAttribI4svEXT) NotSupportedMessage("glVertexAttribI4svEXT");
	if (!glVertexAttribI4ubv) NotSupportedMessage("glVertexAttribI4ubv");
	if (!glVertexAttribI4ubvEXT) NotSupportedMessage("glVertexAttribI4ubvEXT");
	if (!glVertexAttribI4ui) NotSupportedMessage("glVertexAttribI4ui");
	if (!glVertexAttribI4uiEXT) NotSupportedMessage("glVertexAttribI4uiEXT");
	if (!glVertexAttribI4uiv) NotSupportedMessage("glVertexAttribI4uiv");
	if (!glVertexAttribI4uivEXT) NotSupportedMessage("glVertexAttribI4uivEXT");
	if (!glVertexAttribI4usv) NotSupportedMessage("glVertexAttribI4usv");
	if (!glVertexAttribI4usvEXT) NotSupportedMessage("glVertexAttribI4usvEXT");
	if (!glVertexAttribIPointer) NotSupportedMessage("glVertexAttribIPointer");
	if (!glVertexAttribIPointerEXT) NotSupportedMessage("glVertexAttribIPointerEXT");
	if (!glVertexAttribL1d) NotSupportedMessage("glVertexAttribL1d");
	if (!glVertexAttribL1dEXT) NotSupportedMessage("glVertexAttribL1dEXT");
	if (!glVertexAttribL1dv) NotSupportedMessage("glVertexAttribL1dv");
	if (!glVertexAttribL1dvEXT) NotSupportedMessage("glVertexAttribL1dvEXT");
	if (!glVertexAttribL2d) NotSupportedMessage("glVertexAttribL2d");
	if (!glVertexAttribL2dEXT) NotSupportedMessage("glVertexAttribL2dEXT");
	if (!glVertexAttribL2dv) NotSupportedMessage("glVertexAttribL2dv");
	if (!glVertexAttribL2dvEXT) NotSupportedMessage("glVertexAttribL2dvEXT");
	if (!glVertexAttribL3d) NotSupportedMessage("glVertexAttribL3d");
	if (!glVertexAttribL3dEXT) NotSupportedMessage("glVertexAttribL3dEXT");
	if (!glVertexAttribL3dv) NotSupportedMessage("glVertexAttribL3dv");
	if (!glVertexAttribL3dvEXT) NotSupportedMessage("glVertexAttribL3dvEXT");
	if (!glVertexAttribL4d) NotSupportedMessage("glVertexAttribL4d");
	if (!glVertexAttribL4dEXT) NotSupportedMessage("glVertexAttribL4dEXT");
	if (!glVertexAttribL4dv) NotSupportedMessage("glVertexAttribL4dv");
	if (!glVertexAttribL4dvEXT) NotSupportedMessage("glVertexAttribL4dvEXT");
	if (!glVertexAttribLPointer) NotSupportedMessage("glVertexAttribLPointer");
	if (!glVertexAttribLPointerEXT) NotSupportedMessage("glVertexAttribLPointerEXT");
	if (!glVertexAttribP1ui) NotSupportedMessage("glVertexAttribP1ui");
	if (!glVertexAttribP1uiv) NotSupportedMessage("glVertexAttribP1uiv");
	if (!glVertexAttribP2ui) NotSupportedMessage("glVertexAttribP2ui");
	if (!glVertexAttribP2uiv) NotSupportedMessage("glVertexAttribP2uiv");
	if (!glVertexAttribP3ui) NotSupportedMessage("glVertexAttribP3ui");
	if (!glVertexAttribP3uiv) NotSupportedMessage("glVertexAttribP3uiv");
	if (!glVertexAttribP4ui) NotSupportedMessage("glVertexAttribP4ui");
	if (!glVertexAttribP4uiv) NotSupportedMessage("glVertexAttribP4uiv");
	if (!glVertexAttribPointer) NotSupportedMessage("glVertexAttribPointer");
	if (!glVertexAttribPointerARB) NotSupportedMessage("glVertexAttribPointerARB");
	if (!glVertexBlendARB) NotSupportedMessage("glVertexBlendARB");
	if (!glVertexP2ui) NotSupportedMessage("glVertexP2ui");
	if (!glVertexP2uiv) NotSupportedMessage("glVertexP2uiv");
	if (!glVertexP3ui) NotSupportedMessage("glVertexP3ui");
	if (!glVertexP3uiv) NotSupportedMessage("glVertexP3uiv");
	if (!glVertexP4ui) NotSupportedMessage("glVertexP4ui");
	if (!glVertexP4uiv) NotSupportedMessage("glVertexP4uiv");
	if (!glVertexPointerEXT) NotSupportedMessage("glVertexPointerEXT");
	if (!glVertexWeightfEXT) NotSupportedMessage("glVertexWeightfEXT");
	if (!glVertexWeightfvEXT) NotSupportedMessage("glVertexWeightfvEXT");
	if (!glVertexWeightPointerEXT) NotSupportedMessage("glVertexWeightPointerEXT");
	if (!glViewportArrayv) NotSupportedMessage("glViewportArrayv");
	if (!glViewportIndexedf) NotSupportedMessage("glViewportIndexedf");
	if (!glViewportIndexedfv) NotSupportedMessage("glViewportIndexedfv");
	if (!glWaitSync) NotSupportedMessage("glWaitSync");
	if (!glWeightbvARB) NotSupportedMessage("glWeightbvARB");
	if (!glWeightdvARB) NotSupportedMessage("glWeightdvARB");
	if (!glWeightfvARB) NotSupportedMessage("glWeightfvARB");
	if (!glWeightivARB) NotSupportedMessage("glWeightivARB");
	if (!glWeightPointerARB) NotSupportedMessage("glWeightPointerARB");
	if (!glWeightsvARB) NotSupportedMessage("glWeightsvARB");
	if (!glWeightubvARB) NotSupportedMessage("glWeightubvARB");
	if (!glWeightuivARB) NotSupportedMessage("glWeightuivARB");
	if (!glWeightusvARB) NotSupportedMessage("glWeightusvARB");
	if (!glWindowPos2d) NotSupportedMessage("glWindowPos2d");
	if (!glWindowPos2dARB) NotSupportedMessage("glWindowPos2dARB");
	if (!glWindowPos2dv) NotSupportedMessage("glWindowPos2dv");
	if (!glWindowPos2dvARB) NotSupportedMessage("glWindowPos2dvARB");
	if (!glWindowPos2f) NotSupportedMessage("glWindowPos2f");
	if (!glWindowPos2fARB) NotSupportedMessage("glWindowPos2fARB");
	if (!glWindowPos2fv) NotSupportedMessage("glWindowPos2fv");
	if (!glWindowPos2fvARB) NotSupportedMessage("glWindowPos2fvARB");
	if (!glWindowPos2i) NotSupportedMessage("glWindowPos2i");
	if (!glWindowPos2iARB) NotSupportedMessage("glWindowPos2iARB");
	if (!glWindowPos2iv) NotSupportedMessage("glWindowPos2iv");
	if (!glWindowPos2ivARB) NotSupportedMessage("glWindowPos2ivARB");
	if (!glWindowPos2s) NotSupportedMessage("glWindowPos2s");
	if (!glWindowPos2sARB) NotSupportedMessage("glWindowPos2sARB");
	if (!glWindowPos2sv) NotSupportedMessage("glWindowPos2sv");
	if (!glWindowPos2svARB) NotSupportedMessage("glWindowPos2svARB");
	if (!glWindowPos3d) NotSupportedMessage("glWindowPos3d");
	if (!glWindowPos3dARB) NotSupportedMessage("glWindowPos3dARB");
	if (!glWindowPos3dv) NotSupportedMessage("glWindowPos3dv");
	if (!glWindowPos3dvARB) NotSupportedMessage("glWindowPos3dvARB");
	if (!glWindowPos3f) NotSupportedMessage("glWindowPos3f");
	if (!glWindowPos3fARB) NotSupportedMessage("glWindowPos3fARB");
	if (!glWindowPos3fv) NotSupportedMessage("glWindowPos3fv");
	if (!glWindowPos3fvARB) NotSupportedMessage("glWindowPos3fvARB");
	if (!glWindowPos3i) NotSupportedMessage("glWindowPos3i");
	if (!glWindowPos3iARB) NotSupportedMessage("glWindowPos3iARB");
	if (!glWindowPos3iv) NotSupportedMessage("glWindowPos3iv");
	if (!glWindowPos3ivARB) NotSupportedMessage("glWindowPos3ivARB");
	if (!glWindowPos3s) NotSupportedMessage("glWindowPos3s");
	if (!glWindowPos3sARB) NotSupportedMessage("glWindowPos3sARB");
	if (!glWindowPos3sv) NotSupportedMessage("glWindowPos3sv");
	if (!glWindowPos3svARB) NotSupportedMessage("glWindowPos3svARB");
	if (!glWriteMaskEXT) NotSupportedMessage("glWriteMaskEXT");
	if (!wglBindDisplayColorTableEXT) NotSupportedMessage("wglBindDisplayColorTableEXT");
	if (!wglBindTexImageARB) NotSupportedMessage("wglBindTexImageARB");
	if (!wglChoosePixelFormatARB) NotSupportedMessage("wglChoosePixelFormatARB");
	if (!wglChoosePixelFormatEXT) NotSupportedMessage("wglChoosePixelFormatEXT");
	if (!wglCreateBufferRegionARB) NotSupportedMessage("wglCreateBufferRegionARB");
	if (!wglCreateContextAttribsARB) NotSupportedMessage("wglCreateContextAttribsARB");
	if (!wglCreateDisplayColorTableEXT) NotSupportedMessage("wglCreateDisplayColorTableEXT");
	if (!wglCreatePbufferARB) NotSupportedMessage("wglCreatePbufferARB");
	if (!wglCreatePbufferEXT) NotSupportedMessage("wglCreatePbufferEXT");
	if (!wglDeleteBufferRegionARB) NotSupportedMessage("wglDeleteBufferRegionARB");
	if (!wglDestroyDisplayColorTableEXT) NotSupportedMessage("wglDestroyDisplayColorTableEXT");
	if (!wglDestroyPbufferARB) NotSupportedMessage("wglDestroyPbufferARB");
	if (!wglDestroyPbufferEXT) NotSupportedMessage("wglDestroyPbufferEXT");
	if (!wglGetCurrentReadDCARB) NotSupportedMessage("wglGetCurrentReadDCARB");
	if (!wglGetCurrentReadDCEXT) NotSupportedMessage("wglGetCurrentReadDCEXT");
	if (!wglGetExtensionsStringARB) NotSupportedMessage("wglGetExtensionsStringARB");
	if (!wglGetExtensionsStringEXT) NotSupportedMessage("wglGetExtensionsStringEXT");
	if (!wglGetPbufferDCARB) NotSupportedMessage("wglGetPbufferDCARB");
	if (!wglGetPbufferDCEXT) NotSupportedMessage("wglGetPbufferDCEXT");
	if (!wglGetPixelFormatAttribfvARB) NotSupportedMessage("wglGetPixelFormatAttribfvARB");
	if (!wglGetPixelFormatAttribfvEXT) NotSupportedMessage("wglGetPixelFormatAttribfvEXT");
	if (!wglGetPixelFormatAttribivARB) NotSupportedMessage("wglGetPixelFormatAttribivARB");
	if (!wglGetPixelFormatAttribivEXT) NotSupportedMessage("wglGetPixelFormatAttribivEXT");
	if (!wglGetSwapIntervalEXT) NotSupportedMessage("wglGetSwapIntervalEXT");
	if (!wglLoadDisplayColorTableEXT) NotSupportedMessage("wglLoadDisplayColorTableEXT");
	if (!wglMakeContextCurrentARB) NotSupportedMessage("wglMakeContextCurrentARB");
	if (!wglMakeContextCurrentEXT) NotSupportedMessage("wglMakeContextCurrentEXT");
	if (!wglQueryPbufferARB) NotSupportedMessage("wglQueryPbufferARB");
	if (!wglQueryPbufferEXT) NotSupportedMessage("wglQueryPbufferEXT");
	if (!wglReleasePbufferDCARB) NotSupportedMessage("wglReleasePbufferDCARB");
	if (!wglReleasePbufferDCEXT) NotSupportedMessage("wglReleasePbufferDCEXT");
	if (!wglReleaseTexImageARB) NotSupportedMessage("wglReleaseTexImageARB");
	if (!wglRestoreBufferRegionARB) NotSupportedMessage("wglRestoreBufferRegionARB");
	if (!wglSaveBufferRegionARB) NotSupportedMessage("wglSaveBufferRegionARB");
	if (!wglSetPbufferAttribARB) NotSupportedMessage("wglSetPbufferAttribARB");
	if (!wglSwapIntervalEXT) NotSupportedMessage("wglSwapIntervalEXT");
}